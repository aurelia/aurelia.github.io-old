






@mixin logger($minimum-level) {
 
  $logger-configuration: (
    "levels"  : "DEBUG" "INFO" "WARN" "ERROR" "FATAL",
    "errors"  : "FATAL" "ERROR",
    "min"     : $minimum-level,
    "history" : (
      "DEBUG" : (),
      "INFO"  : (),
      "WARN"  : (),
      "ERROR" : (),
      "FATAL" : ()
    )
  ) !global;

 
  $logger-configuration: map-merge($logger-configuration,
    ("min-level": index(logger-conf("levels"), logger-conf("min")))
  ) !global;
}












@function logger-conf($key) {
  @return map-get($logger-configuration, $key);
}














@mixin log($level, $message) {
 
  @if not global-variable-exists("logger-configuration") {
    @include logger("INFO");
  }

  $level: to-upper-case($level);

 
  @if $level != "OFF" {
   
    $index-current-level: index(logger-conf("levels"), $level);

   
    @if not $index-current-level { $level: "INFO" }

   
    @include logger-update-history($level, $message);

   
    @if $index-current-level >= logger-conf("min-level") {
      $print: $level + " :: " + $message;

     
      @if index(logger-conf("errors"), $level) {
        @error #{$print};
      }

     
      @else {
        @warn #{$print};
      }
    }
  }
}


@mixin FATAL($message) { @include log("FATAL", $message); }
@mixin ERROR($message) { @include log("ERROR", $message); }
@mixin  WARN($message) { @include log("WARN",  $message); }
@mixin  INFO($message) { @include log("INFO",  $message); }
@mixin DEBUG($message) { @include log("DEBUG", $message); }














@mixin logger-update-history($level, $message) {
  $history: logger-conf("history");
  $current-level-history: map-get($history, $level);
  $current-level-history: append($current-level-history, $message);
  $logger-history: map-merge($history, ($level: $current-level-history));
  $logger-configuration: map-merge($logger-configuration, ("history": $logger-history)) !global;
}










@mixin logger-print-logs {
  logger-logs {
    @each $level, $logs in logger-conf("history") {
      @if length($logs) > 0 {
        @each $log in $logs {
          #{$level}: $log;
        }
      }
    }
  }
}









@mixin logger-help {
  logger-help {
    OFF: "Disable the logger.";
    FATAL: "Severe errors that cause premature termination.";
    ERROR: "Other runtime errors or unexpected conditions.";
    WARN: "Use of deprecated APIs, poor use of API, 'almost' errors,"
    + "other runtime situations that are undesirable or unexpected, but not necessarily wrong.";
    INFO: "Interesting runtime events (startup/shutdown).";
    DEBUG: "Detailed information on the flow through the system.";
  }
}
