
$base-button-group-element-default: Base-ButtonGroupElement;
$base-button-group-element-stack:   Base-ButtonGroupElement-Stack;
$base-button-group-element-inline:  Base-ButtonGroupElement-Inline;
$base-button-group-element-justify: Base-ButtonGroupElement-Justify;




$base-button-group-meta: (
  default: $base-button-group-element-default,
  stack: $base-button-group-element-stack,
  inline: $base-button-group-element-inline,
  justify: $base-button-group-element-justify,
) !default;



%#{$base-button-group-element-default} {
  display:flex;
  @include flex-shrink(0);
  @include flex-basis(auto);
  &:not([stack]):not([justify]):not([stack-ios]):not([justify-ios]) {
    @include InlineButtonGroup;
  }
}

%#{$base-button-group-element-stack} {
  @include StackButtonGroup;
}

%#{$base-button-group-element-inline} {
  @include InlineButtonGroup;
}

%#{$base-button-group-element-justify} {
  @include JustifyButtonGroup;
}


@mixin Base-ButtonGroupElement($label: $base-button-group-element-default) {
  @extend %#{$label};
  @content;
}

@mixin Base-ButtonGroupElement-Inline($label: $base-button-group-element-stack) {
  &[justify],
  &[justify-ios] {
    @extend %#{$label};
    @content;
  }
}

@mixin Base-ButtonGroupElement-Stack($label: $base-button-group-element-inline) {
  &[stack],
  &[stack-ios] {
    @extend %#{$label};
    @content;
  }

}

@mixin Base-ButtonGroupElement-Justify($label: $base-button-group-element-justify) {
  &[inline],
  &[inline-ios] {
    @extend %#{$label};
    @content;
  }
}

@include Component(ai-button-group) {
  @extend %#{$base-button-group-element-default};
  &[stack-ios],
  &[stack] {
    @extend %#{$base-button-group-element-stack};
  }
  &[inline-ios],
  &[inline] {
    @extend %#{$base-button-group-element-inline};
  }
  &[jusify-ios],
  &[justify] {
    @extend %#{$base-button-group-element-justify};
  }
}
