{"articles":{"data":[{"articleName":"Technical Benefits","articleHref":"docs/overview/technical-benefits","sectionName":"Modern JavaScript","sectionId":"modern-javascript","text":" Fully written in standards-based ES2015+ and TypeScript. Fully written in standards-based ES2015+ and TypeScript. Forward compatible with JavaScript technology coming in future ECMAScript specs. Forward compatible with JavaScript technology coming in future ECMAScript specs. Full support for both Babel and TypeScript. Full support for both Babel and TypeScript.","id":1485},{"articleName":"Technical Benefits","articleHref":"docs/overview/technical-benefits","sectionName":"Modern DOM","sectionId":"modern-dom","text":" Consistently leverages the most modern DOM APIs. Consistently leverages the most modern DOM APIs. Bare  Bare  Automatically polyfills the DOM where appropriate, in order to support older browsers. Automatically polyfills the DOM where appropriate, in order to support older browsers.","id":1486},{"articleName":"Technical Benefits","articleHref":"docs/overview/technical-benefits","sectionName":"Modern Tooling","sectionId":"modern-tooling","text":" Supports modern build tooling via the Aurelia CLI and Webpack, out-of-the-box. Supports modern build tooling via the Aurelia CLI and Webpack, out-of-the-box. Works well with powerful testing tools like Karma and Protractor. Works well with powerful testing tools like Karma and Protractor. Provides a custom Chrome debug panel as well as a VS Code plugin. Provides a custom Chrome debug panel as well as a VS Code plugin.","id":1487},{"articleName":"Technical Benefits","articleHref":"docs/overview/technical-benefits","sectionName":"Code Quality","sectionId":"code-quality","text":" Source code is covered by an extensive suite of unit tests. Source code is covered by an extensive suite of unit tests. All source is fully linted for style and feature-usage consistency throughout. All source is fully linted for style and feature-usage consistency throughout. TypeScript d.ts files and full API documentation are provided for all libraries. TypeScript d.ts files and full API documentation are provided for all libraries.","id":1488},{"articleName":"Technical Benefits","articleHref":"docs/overview/technical-benefits","sectionName":"Web Component Standards","sectionId":"web-component-standards","text":" Leverages W3C Web Components specs such as HTMLTemplateElement and ShadowDOM. Leverages W3C Web Components specs such as HTMLTemplateElement and ShadowDOM. Fully compatible with 3rd-party Web Components, even those originating from other frameworks, such as Polymer. Fully compatible with 3rd-party Web Components, even those originating from other frameworks, such as Polymer. Provides a Web Component-based programming model even on browsers that will never support Web Components. Provides a Web Component-based programming model even on browsers that will never support Web Components.","id":1489},{"articleName":"Technical Benefits","articleHref":"docs/overview/technical-benefits","sectionName":"Modularity","sectionId":"modularity","text":" Highly modular development, suitable for small and large-scale apps alike. Highly modular development, suitable for small and large-scale apps alike. Native support for feature-based development facilitating parallel development of multiple teams on the same app. Native support for feature-based development facilitating parallel development of multiple teams on the same app. Strong component model for high re-use of UI components across apps. Strong component model for high re-use of UI components across apps.","id":1490},{"articleName":"Technical Benefits","articleHref":"docs/overview/technical-benefits","sectionName":"Platform Support","sectionId":"platform-support","text":" Designed for modern web browsers but supports older browsers, such as IE9, via additional polyfills. Designed for modern web browsers but supports older browsers, such as IE9, via additional polyfills. Designed for mobile application development in combination with PhoneGap/Cordova/Crosswalk. Designed for mobile application development in combination with PhoneGap/Cordova/Crosswalk. Designed for desktop application development in combination with Electron or NWJS. Designed for desktop application development in combination with Electron or NWJS.","id":1491},{"articleName":"Technical Benefits","articleHref":"docs/overview/technical-benefits","sectionName":"Capabilities","sectionId":"capabilities","text":" Write apps in ES2015+ and TypeScript. Write apps in ES2015+ and TypeScript. One simple way of creating components that work in a variety of contexts: Custom Elements Custom Elements Dynamically Composed UI (data-driven component composition) Dynamically Composed UI (data-driven component composition) Routing/Navigation Routing/Navigation Modal Dialogs Modal Dialogs Web Components Web Components Progressive Enhancement Progressive Enhancement Custom scenarios enabled through low-level access to our View Composition Engine Custom scenarios enabled through low-level access to our View Composition Engine One simple way of creating components that work in a variety of contexts: Fully-extensible View Compiler, View Engine and View Resource Pipeline. Fully-extensible View Compiler, View Engine and View Resource Pipeline. Fully-extensible and adaptive data-binding engine. Fully-extensible and adaptive data-binding engine. Powerful and flexible hierarchical dependency injection. Powerful and flexible hierarchical dependency injection. Eager/Lazy/Hybrid loading of any/all application resources. Eager/Lazy/Hybrid loading of any/all application resources. Powerful application router with support for encapsulated child routers for multi-team, large-scale development. Powerful application router with support for encapsulated child routers for multi-team, large-scale development. Optionally create standards-compliant Web Components or use Aurelia to  Optionally create standards-compliant Web Components or use Aurelia to  Interoperate with any standards-compliant Web Component. Interoperate with any standards-compliant Web Component. Loosely coupled cross-component communication via publish/subscribe. Loosely coupled cross-component communication via publish/subscribe. Fully customizable application startup and plugin model. Fully customizable application startup and plugin model. Enables authoring of testable, maintainable and extensible code. Enables authoring of testable, maintainable and extensible code. Leverage conventions to write less code and get more done. Leverage conventions to write less code and get more done. Little to no framework intrusion, so developers can focus on their app, not the framework. Little to no framework intrusion, so developers can focus on their app, not the framework. Application and package bundling compatible with all major build systems. Application and package bundling compatible with all major build systems.","id":1492},{"articleName":"Business Advantages","articleHref":"docs/overview/business-advantages","sectionName":"Commercially Backed","sectionId":"commercially-backed","text":" Commercial support options available. Commercial support options available. Custom contracts available for enterprises. Custom contracts available for enterprises. Internally  Internally ","id":1493},{"articleName":"Business Advantages","articleHref":"docs/overview/business-advantages","sectionName":"Commercial Products and Services","sectionId":"commercial-products-and-services","text":" Official on-site or virtual training. Official on-site or virtual training. Consulting, advisory, and code-review services. Consulting, advisory, and code-review services. Aurelia UX (In Development) - Cross-platform, mobile UI components. Aurelia UX (In Development) - Cross-platform, mobile UI components.","id":1494},{"articleName":"Business Advantages","articleHref":"docs/overview/business-advantages","sectionName":"Strategic Partnerships","sectionId":"strategic-partnerships","text":" Partnerships with both large and boutique consulting organizations in order to provide scale-out of developer resources as needed by businesses adopting Aurelia. Partnerships with both large and boutique consulting organizations in order to provide scale-out of developer resources as needed by businesses adopting Aurelia. Official training partners around the world to deliver training anywhere and anytime. Official training partners around the world to deliver training anywhere and anytime.","id":1495},{"articleName":"Business Advantages","articleHref":"docs/overview/business-advantages","sectionName":"Broad Customer Reach","sectionId":"broad-customer-reach","text":" Applications developed in virtually every space: healthcare, insurance, finance, entertainment, technology, developer tools, LOB, gaming, etc. Applications developed in virtually every space: healthcare, insurance, finance, entertainment, technology, developer tools, LOB, gaming, etc. Used internally at many well-known enterprises. Used internally at many well-known enterprises. Adoption among large, international organizations and governments as well as small and medium businesses. Adoption among large, international organizations and governments as well as small and medium businesses.","id":1496},{"articleName":"What is Aurelia?","articleHref":"docs/overview/what-is-aurelia","sectionName":"What is Aurelia?","sectionId":"what-is-aurelia","text":" Aurelia is a collection of Modern JavaScript modules, which when used together, function as a powerful platform for building browser, desktop and mobile applications, all open source and built on open web standards. Let A Collection of Modern JavaScript Modules Rather than being a monolithic framework, Aurelia is broken down into a collection of feature-oriented modules. Examples of feature modules include metadata, dependency injection, binding, templating, router and more. Each module is written using ECMAScript (aka JavaScript) or TypeScript (a strict superset of JavaScript that adds compile-time type checking). Many of these modules can be used individually in any type of JavaScript project, including Node.js. A Powerful Platform for Building Apps While Aurelia Open Source With all the power and capability that Aurelia offers, you might expect it to have an expensive licensing model or be closed source, but neither is true. Aurelia is free and its code is open sourced under  Built on Open Web Standards Not only is Aurelia written with ECMAScript, but it","id":1497},{"articleName":"What is Aurelia?","articleHref":"docs/overview/what-is-aurelia","sectionName":"Why choose Aurelia?","sectionId":"why-choose-aurelia","text":" There are many frameworks to choose from today. We believe that Aurelia provides a fresh and exciting approach to front-end development with power and flexibility that is unmatched by other options. That said, we recognize that each team and each project has different needs. You might find Aurelia to be the right choice for you if...","id":1498},{"articleName":"Creating a Todo App","articleHref":"docs/tutorials/creating-a-todo-app","sectionName":"Setup","sectionId":"setup","text":" Aurelia is an amazing framework that embraces simple and clean code without sacrificing power. In this tutorial we Before we start writing some code, you With this setup, you can choose between two popular programming language options: ESNext and TypeScript. If you would like to stay strictly with spec-compliant next-generation ECMAScript, you will want to go with the ESNext option. However, if you like strong typing and rich compile-time verification and tooling for your language, you Once you Configure this documentation to show all code samples in your preferred programming language. Configure this documentation to show all code samples in your preferred programming language. Configure your Aurelia project to use your preferred programming language. Configure your Aurelia project to use your preferred programming language. Let Now let Before we explain what this does, let That","id":1499},{"articleName":"Creating a Todo App","articleHref":"docs/tutorials/creating-a-todo-app","sectionName":"The Index.html Page","sectionId":"the-indexhtml-page","text":" If you Yes, that First, you can see that this document is setup as a standard HTML5 document with a doctype, html, head and body. The items of interest to us lie within (and on) the body tag. Let This tag is used to load SystemJS, a modern JavaScript module loader. Because Aurelia is a modern framework, it transpiler As discussed previously, this line of code configures the programming language you want to use. It Info This is the core of Aurelia itself, in a single script file. You need to add that to use the framework. That The last script tag is a bit different. Instead of setting a  There I know you","id":1500},{"articleName":"Creating a Todo App","articleHref":"docs/tutorials/creating-a-todo-app","sectionName":"The Todo Class","sectionId":"the-todo-class","text":" One of the amazing things you can do with Aurelia, that you can We That","id":1501},{"articleName":"Creating a Todo App","articleHref":"docs/tutorials/creating-a-todo-app","sectionName":"The App Class","sectionId":"the-app-class","text":" Our todo application contains a list of  Again, it Our application has a  Our application has a  The todo list is modeled as an array of  The todo list is modeled as an array of  Todo instances can be added ( Todo instances can be added ( When instances are added, they are given a description, provided by the user. When instances are added, they are given a description, provided by the user. After the Todo is added, the description is cleared to enable the next addition. After the Todo is added, the description is cleared to enable the next addition. Here","id":1502},{"articleName":"Creating a Todo App","articleHref":"docs/tutorials/creating-a-todo-app","sectionName":"Getting Ready to Render","sectionId":"getting-ready-to-render","text":" Ok, now that we If you recall, when we looked at  Info When we provide a main file, like above, we are able to tell Aurelia how to configure itself by simply exporting a  So, what does  The next thought you might have is  how Ok, we","id":1503},{"articleName":"Creating a Todo App","articleHref":"docs/tutorials/creating-a-todo-app","sectionName":"Rendering the App","sectionId":"rendering-the-app","text":" As a brief recap, remember that almost nothing we data binding expressions In order to render, we need to create a view for the  There are a couple of things to notice here. First, all views are wrapped in a Web Components  View-Model Info: Presentation Patterns Ok, now that we have a view, we When you run the app, you should see the app render out the  Rendering properties in HTML seems simple enough, but what about working with user input? Let any Now, we Here, we have another convention that it any There Info: Binding Commands If you run the app now, you should see something like this: Try typing into the input box and adding the todo. You should notice that the input box gets cleared out each time you do that. The reason for this is that the  Well, we can now add todos, but we can To generate HTML based on an Array, Map or Set, we use the  If you run the application again, you should now see something like this: We This final example shows how we can bind css directly on any HTML element. It also shows how we can use our  Warning: style vs css attribute Run the application one more time and you should see the expected result:","id":1504},{"articleName":"Creating a Todo App","articleHref":"docs/tutorials/creating-a-todo-app","sectionName":"Conclusion","sectionId":"conclusion","text":" With its strong focus on developer experience, Aurelia can enable you to not only create amazing applications, but also enjoy the process. We Thanks for taking the time to read through our guide. There We","id":1505},{"articleName":"Securing Your App","articleHref":"docs/fundamentals/security","sectionName":"Introduction","sectionId":"introduction","text":" The first rule of securing client-side applications: the client cannot be trusted. Your backend should never trust the input coming from the front-end, under any circumstance. Malicious individuals often know how to use browser debug tools and manually craft HTTP requests to your backend. You may even find yourself in a situation where a disgruntled employee (or former employee), who is a developer with intimate knowledge of the system, is seeking revenge by attempting a malicious attack. Danger: Security Advice","id":1506},{"articleName":"Securing Your App","articleHref":"docs/fundamentals/security","sectionName":"Authentication and Authorization","sectionId":"authentication-and-authorization","text":" When designing your application, consider which backend API calls can be made anonymously, which require a logged-in user and which roles or permissions are required for various authenticated requests. Ensure that your entire API surface area is explicitly covered in this way. Your front-end can facilitate the login process, but ultimately this is a backend task. Here are a few related recommendations: Make sure your server is configured to transmit sensitive resources over HTTPS. You may want to transmit all resources this way. It is more server-intensive, but it will be more secure. You must decide what is appropriate for your application. Make sure your server is configured to transmit sensitive resources over HTTPS. You may want to transmit all resources this way. It is more server-intensive, but it will be more secure. You must decide what is appropriate for your application. Don Don There are various ways to accomplish CORS. Prefer to use a technique based on server-supported CORS, rather than client-side hacks. There are various ways to accomplish CORS. Prefer to use a technique based on server-supported CORS, rather than client-side hacks. Control cross-domain requests to your services. Either disallow them or configure your server based on a strict whitelist of allowed domains. Control cross-domain requests to your services. Either disallow them or configure your server based on a strict whitelist of allowed domains. Require strong passwords Require strong passwords Never, ever store passwords in plain text. Never, ever store passwords in plain text. Do not allow an endless number of failed login attempts to the same account. Do not allow an endless number of failed login attempts to the same account. Consider outsourcing your auth requirements to a cloud provider with greater expertise. Consider outsourcing your auth requirements to a cloud provider with greater expertise. You can improve the user-experience by plugging into Aurelia Info: Route Settings","id":1507},{"articleName":"Securing Your App","articleHref":"docs/fundamentals/security","sectionName":"Validation and Sanitization","sectionId":"validation-and-sanitization","text":" The backend should always perform validation and sanitization of data. Do not rely on your client-side validation and sanitization code. In reality, your client-side validation/santization code should not be seen as anything more than a User Experience enhancement, designed to aid honest users. It will have no affect on anyone who is malicious. Here Use client-side validation. This will make your users happy. Use client-side validation. This will make your users happy. Avoid data-binding to  Avoid data-binding to  Be extra careful anytime you are dynamically creating and compiling client-side templates based on user input. Be extra careful anytime you are dynamically creating and compiling client-side templates based on user input. Be extra careful anytime you are dynamically creating templates on the server based on user input, which will later be processed by Aurelia on the client. Be extra careful anytime you are dynamically creating templates on the server based on user input, which will later be processed by Aurelia on the client. Info: We Are Trying To Help You","id":1508},{"articleName":"Securing Your App","articleHref":"docs/fundamentals/security","sectionName":"Secret Data","sectionId":"secret-data","text":" look like Do not embed private keys into your JavaScript code. While the average user may not be able to access them, anyone with true ill intent can simply download your client code, un-minifiy it and use basic regular expressions on the codebase to find things that  If you have a need to acquire any secret data on the client, it should be done with great care. Here is a (non-exhaustive) list of recommendations: Always use HTTPS to transmit this information. Always use HTTPS to transmit this information. Restrict which users and roles can acquire this information to an absolute minimum. Restrict which users and roles can acquire this information to an absolute minimum. Always use time-outs on any secret keys so that, at most, if an attacker gains access, they can Always use time-outs on any secret keys so that, at most, if an attacker gains access, they can Be careful how you store these values in memory. Do not store these as class property values or on any object that is linked to the DOM through data-binding or otherwise. Doing so would allow an attacker to gain access to the information through the debug console. If you must store this information, keep it inside a private (non-exported) module-level variable. Be careful how you store these values in memory. Do not store these as class property values or on any object that is linked to the DOM through data-binding or otherwise. Doing so would allow an attacker to gain access to the information through the debug console. If you must store this information, keep it inside a private (non-exported) module-level variable. If you need to store this information anywhere, encrypt it first. If you need to store this information anywhere, encrypt it first.","id":1509},{"articleName":"Securing Your App","articleHref":"docs/fundamentals/security","sectionName":"Deployment","sectionId":"deployment","text":" When deploying your apps, there are a few things you can do to make it more difficult for attackers to figure out how your client works: Bundle your application and minify it. This is the most basic obfuscation you can do. Bundle your application and minify it. This is the most basic obfuscation you can do. Do not deploy the original client-side source files. Only deploy your bundled, minified app. Do not deploy the original client-side source files. Only deploy your bundled, minified app. For additional security or IP protection, you may want to look into products such as  For additional security or IP protection, you may want to look into products such as ","id":1510},{"articleName":"Securing Your App","articleHref":"docs/fundamentals/security","sectionName":"Prepare for the Inevitable","sectionId":"prepare-for-the-inevitable","text":" Even with the most skilled, security-proficient development team, your app will never be 100% protected. This is a fundamental assumption that you should have from the beginning. Expect to be attacked and expect someone to succeed at some point in time. What will you do if this happens? How will you respond? Will you be able to track down the culprit? Will you be able to identify the issue and quickly seal up the breach? You need a plan. Again, most of this come down to server-side implementation. Here are a few basic ideas: Configure server-side logging and make sure it will provide you with useful information. Such information can be very helpful in tracking down how an attack was performed. Make sure you have tools available to you to quickly search through your logs. Configure server-side logging and make sure it will provide you with useful information. Such information can be very helpful in tracking down how an attack was performed. Make sure you have tools available to you to quickly search through your logs. Make sure that all logins are logged. If you are using an auth-token scheme, make sure that all requests log this information. Make sure that all logins are logged. If you are using an auth-token scheme, make sure that all requests log this information. Never log sensitive data. Never log sensitive data. Consider timing out logins or auth tokens. You can provide refresh mechanisms in order to help the user experience. Consider timing out logins or auth tokens. You can provide refresh mechanisms in order to help the user experience. Configure server insight tooling so that threats can be detected earlier. Configure server insight tooling so that threats can be detected earlier.","id":1511},{"articleName":"Securing Your App","articleHref":"docs/fundamentals/security","sectionName":"Do Not Be Nice to Bad Guys","sectionId":"do-not-be-nice-to-bad-guys","text":" Be careful what information you give out, especially when something goes wrong. For example, if there Beyond this, you are under no obligation to provide nice messages of any kind when you know a user is doing something malicious. Just let the application crash. It","id":1512},{"articleName":"Creating Components","articleHref":"docs/fundamentals/components","sectionName":"Creating A Component","sectionId":"creating-a-component","text":" view view-model databinding In Aurelia, user interface components are composed of  hello${context.language.fileExtension} hello.html To create a UI component, you need only create two files, one for each of the component parts. Let Notice that the view-model is a plain class. There Also, notice how the view is wrapped in a Web Components HTMLTemplateElement. All views use standards-based HTML templates. You can also see the very simple, easy-to remember binding language. Simply append  The  Those are the defaults, but you can always be explicit about the binding direction by using  In addition to binding HTML attributes, you can also bind events. Any event, either native or custom, can be bound using  Info Now you know how to build basic components. What","id":1513},{"articleName":"Creating Components","articleHref":"docs/fundamentals/components","sectionName":"Component Instantiation Through Dependency Injection (DI)","sectionId":"component-instantiation-through-dependency-injection-di","text":" View-models and other interface elements, such as Custom Elements and Custom Attributes, are created as classes which are instantiated by the framework using a dependency injection container. Code written in this style is easy to modularize and test. Rather than creating large classes, you can break things down into small objects that collaborate to achieve a goal. The DI can then put the pieces together for you at runtime. In order to leverage DI, you simply decorate your class to tell the framework what it should pass to its constructor. Here If you are using ES2016, use the  If you are using ES2016, use the  If you are sticking with ES2015, or don If you are sticking with ES2015, or don If you are using TypeScript >= 1.5, you can add the  If you are using TypeScript >= 1.5, you can add the ","id":1514},{"articleName":"Creating Components","articleHref":"docs/fundamentals/components","sectionName":"The Component Lifecycle","sectionId":"the-component-lifecycle","text":" All components have a well-defined lifecycle. Below is a list of methods you can implement on your view-model in order to hook into the component lifecycle: constructor() constructor() created(owningView: View, myView: View) created(owningView: View, myView: View) bind(bindingContext: Object, overrideContext: Object) bind(bindingContext: Object, overrideContext: Object) attached() attached() detached() detached() unbind() unbind() Each of these callbacks is optional. Implement whatever makes sense for your component, but don The order in which the lifecycle hooks are listed above matches the order in which they are invoked. For example,  Info","id":1515},{"articleName":"Creating a Contact Manager","articleHref":"docs/tutorials/creating-a-contact-manager","sectionName":"Setting Up Your Machine","sectionId":"setting-up-your-machine","text":" For this tutorial, we Install NodeJS version 4.x or above. You can  You can  Install NodeJS version 4.x or above. Install a Git Client Here Here Here Here Install a Git Client Warning Once you have the prerequisites installed, you can install the Aurelia CLI itself. From the command line, use npm to install the CLI globally: Info Warning","id":1516},{"articleName":"Creating a Contact Manager","articleHref":"docs/tutorials/creating-a-contact-manager","sectionName":"Creating A New Aurelia Project","sectionId":"creating-a-new-aurelia-project","text":" Now, that you Once you Once the dependencies are installed (it will take a few minutes), your project is ready to go. Just change directory into the project folder and run it by typing ","id":1517},{"articleName":"Creating a Contact Manager","articleHref":"docs/tutorials/creating-a-contact-manager","sectionName":"Adding Required Assets","sectionId":"adding-required-assets","text":" For this tutorial, we Once you web-api.js web-api.js utility.js utility.js styles.css styles.css Copy all of these files to the ","id":1518},{"articleName":"Creating a Contact Manager","articleHref":"docs/tutorials/creating-a-contact-manager","sectionName":"Building the Application Shell","sectionId":"building-the-application-shell","text":" Warning Let In the picture, you can see that we have a header across the top, a contact list on the left and a detail pane filling the rest of the space. We To begin, we Warning To add routing to your app, all you have to do is add a  In the case above, we are registering two routes. The first route is empty, indicated by  Info There are a couple more points of interest with this configuration. First, notice that we Now that we There are several interesting things to note about this view. First, take a look at the  Below the  The  We To get Bootstrap setup, we begin by installing the library itself with NPM. Execute the following on the command line to do this: Next, we need to import it in our  Info","id":1519},{"articleName":"Creating a Contact Manager","articleHref":"docs/tutorials/creating-a-contact-manager","sectionName":"Building Out the Default Route","sectionId":"building-out-the-default-route","text":" If you run the application now, using  This is actually expected. Why? Well, we use  This will provide the basic functionality for our  All it does is provide a container with some styling in order to display our message to the user. Next, let With this in place, you should now be able to run your application. If you haven","id":1520},{"articleName":"Creating a Contact Manager","articleHref":"docs/tutorials/creating-a-contact-manager","sectionName":"Building Out the Contact List","sectionId":"building-out-the-contact-list","text":" We Aurelia strives to be a self-consistent framework. As such, building a custom element is the same as creating your  contact-list ContactList Info inject metadata The view-model for our custom element has a few notable characteristics. First, we The second thing to notice is the  Finally, we have a  The markup above begins by repeating an  Take special note of the  Ok, now that we There are two important additions. First, we If you go ahead and run the application, you should now see something like this:","id":1521},{"articleName":"Creating a Contact Manager","articleHref":"docs/tutorials/creating-a-contact-manager","sectionName":"Building Out the Contact Detail Screen","sectionId":"building-out-the-contact-detail-screen","text":" Ok, things are starting to come together, but we still can Again, this is because the router is trying to route to the detail screen, but we only have a stub component with no view. So, let routed components Once again, we are using dependency injection to get an instance of our  The first argument passed to  The second argument passed to  This screen demonstrates another part of the navigation lifecycle available to routed components: the  If we take a brief look at the  Finally, we have a  With that all in place, let Don You should now be able to select contacts in the list, see their details, edit them, save and even see the confirm dialog on unsaved data navigations. It should look something like this:","id":1522},{"articleName":"Creating a Contact Manager","articleHref":"docs/tutorials/creating-a-contact-manager","sectionName":"Adding Pub/Sub Messaging","sectionId":"adding-pubsub-messaging","text":" If you play around with the application for a bit, you Refreshing the browser with a contact selected results in the correct contact being shown, but not in the correct contact list item being highlighted. Refreshing the browser with a contact selected results in the correct contact being shown, but not in the correct contact list item being highlighted. If you edit some data, try to navigate away and then cancel, the contact list item selection will go out of sync, highlighting the contact you were going to before you cancelled, but not the current contact. If you edit some data, try to navigate away and then cancel, the contact list item selection will go out of sync, highlighting the contact you were going to before you cancelled, but not the current contact. If you edit some data and save, you will notice that changes in the name are not reflected in the list. If you edit some data and save, you will notice that changes in the name are not reflected in the list. The reason for these issues is that we have two separate components, our  Whenever the contact detail screen successfully saves a contact, we First, notice that we With these messages in place, we can now enable any other component in our system to loosely subscribe to the new information in our system and use that data as appropriate to its internal needs. We As you can see, we If you run the application now, you should see that everything is working as expected.","id":1523},{"articleName":"Creating a Contact Manager","articleHref":"docs/tutorials/creating-a-contact-manager","sectionName":"Adding A Loading Indicator","sectionId":"adding-a-loading-indicator","text":" Let Begin by installing the  Info: TypeScript Definition Files With that in place, let This code creates a custom element, but we propertyName Next, we want our custom HTML element to have a  Previously, when we created the  With this registration in place, we can now use our new indicator in our  Ok, now that we And with that, we","id":1524},{"articleName":"Creating a Contact Manager","articleHref":"docs/tutorials/creating-a-contact-manager","sectionName":"Next Steps","sectionId":"next-steps","text":" Now that you Create a real backend for the app and use the  Create a real backend for the app and use the  Extend that application so that new contacts can be added. Extend that application so that new contacts can be added. Extend the contact detail form with data validation. Extend the contact detail form with data validation. Learn more about  Learn more about  Learn more about  Learn more about  Expand your knowledge of  Expand your knowledge of ","id":1525},{"articleName":"Creating a Contact Manager","articleHref":"docs/tutorials/creating-a-contact-manager","sectionName":"Conclusion","sectionId":"conclusion","text":" This tutorial presents a fairly simple application, but it provides an opportunity to demonstrate a number of interesting techniques. We hope it","id":1526},{"articleName":"Cheat Sheet","articleHref":"docs/fundamentals/cheat-sheet","sectionName":"Configuration and Startup","sectionId":"configuration-and-startup","text":" Warning: Promises in Edge","id":1527},{"articleName":"Cheat Sheet","articleHref":"docs/fundamentals/cheat-sheet","sectionName":"Creating Components","sectionId":"creating-components","text":" hello${context.language.fileExtension} hello.html UI components consist of two parts: a view-model and a view. Simply create each part in its own file. Use the same file name but different file extensions for the two parts. For example:  The Component Lifecycle Components have a well-defined lifecycle: constructor() constructor() created(owningView: View, myView: View) created(owningView: View, myView: View) bind(bindingContext: Object, overrideContext: Object) bind(bindingContext: Object, overrideContext: Object) attached() attached() detached() detached() unbind() unbind()","id":1528},{"articleName":"Cheat Sheet","articleHref":"docs/fundamentals/cheat-sheet","sectionName":"Dependency Injection","sectionId":"dependency-injection","text":" Available Resolvers Lazy ex.  ex.  Lazy All ex.  ex.  All Optional ex.  ex.  Optional Parent ex.  ex.  Parent Factory ex.  ex.  Factory NewInstance ex.  ex.  NewInstance","id":1529},{"articleName":"Cheat Sheet","articleHref":"docs/fundamentals/cheat-sheet","sectionName":"Templating Basics","sectionId":"templating-basics","text":" Info: Invalid Table Structure When Dynamically Creating Tables Use of the  For the above example we can then programmatically choose the embedded template based on an element of our data: after Note that when a ","id":1530},{"articleName":"Cheat Sheet","articleHref":"docs/fundamentals/cheat-sheet","sectionName":"Databinding","sectionId":"databinding","text":" bind, one-way, two-way  Use on any HTML attribute. .bind .bind .one-way .one-way .two-way .two-way .one-time .one-time Info delegate, trigger Use on any native or custom DOM event. (Do not include the  .trigger .trigger .delegate .delegate Info call Passes a function reference. ref Creates a reference to an HTML element, a component or a component ref=\"someIdentifier\" ref=\"someIdentifier\" attribute-name.ref=\"someIdentifier\" attribute-name.ref=\"someIdentifier\" view-model.ref=\"someIdentifier\" view-model.ref=\"someIdentifier\" view.ref=\"someIdentifier\" view.ref=\"someIdentifier\" controller.ref=\"someIdentifier\" controller.ref=\"someIdentifier\" String Interpolation Used in an element Binding to Select Elements A typical select element is rendered using a combination of  Binding Radios Binding Checkboxes Warning Binding innerHTML and textContent Danger Warning Binding Style You can bind a css string or object to an element Declaring Computed Property Dependencies","id":1531},{"articleName":"Cheat Sheet","articleHref":"docs/fundamentals/cheat-sheet","sectionName":"Templating View Resources","sectionId":"templating-view-resources","text":" Contextual items available inside a repeat template: $index $index $first $first $last $last $even $even $odd $odd Info: Containerless Template Controllers","id":1532},{"articleName":"Cheat Sheet","articleHref":"docs/fundamentals/cheat-sheet","sectionName":"Routing","sectionId":"routing","text":" Route Pattern Options static routes ie  ie  static routes parameterized routes ie   ie   parameterized routes wildcard routes ie  ie  wildcard routes The Route Screen Activation Lifecycle can be navigated to canActivate(params, routeConfig, navigationInstruction) canActivate(params, routeConfig, navigationInstruction) activate(params, routeConfig, navigationInstruction) activate(params, routeConfig, navigationInstruction) can navigate away canDeactivate() canDeactivate() deactivate() deactivate() attaching the component Warning: Root Screen Activation The  Configuring PushState Add  Warning Reusing an Existing View Model Since the view model Info Rendering multiple ViewPorts Info Generating Route URLs","id":1533},{"articleName":"Cheat Sheet","articleHref":"docs/fundamentals/cheat-sheet","sectionName":"Custom Attributes","sectionId":"custom-attributes","text":"","id":1534},{"articleName":"Cheat Sheet","articleHref":"docs/fundamentals/cheat-sheet","sectionName":"Custom Elements","sectionId":"custom-elements","text":" Custom Element Without View-Model Declaration Aurelia will not search for a JavaScript file if you reference a component with an .html extension. Custom Element Variable Binding It Custom Element Options @children(selector) @children(selector) @child(selector) @child(selector) @processContent(false|Function) @processContent(false|Function) @useView(path) @useView(path) @noView() @noView() @inlineView(markup, dependencies?) @inlineView(markup, dependencies?) @useShadowDOM() @useShadowDOM() @containerless() @containerless() SVG Elements SVG (scalable vector graphic) tags can support Aurelia Template Parts Observable decorator Aurelia exposes a decorator named observable to allow watching for changes to a property and reacting to them.  By convention it will look for a matching method name  The developer can also specify a different method name to use -","id":1535},{"articleName":"Cheat Sheet","articleHref":"docs/fundamentals/cheat-sheet","sectionName":"The Event Aggregator","sectionId":"the-event-aggregator","text":" If you include the ","id":1536},{"articleName":"App Config and Startup","articleHref":"docs/fundamentals/app-configuration-and-startup","sectionName":"Bootstrapping Aurelia","sectionId":"bootstrapping-aurelia","text":" app${context.language.fileExtension} app.html Most platforms have a  Often times you want to configure the framework or run some code prior to displaying anything to the user though. So chances are, as your project progresses, you will migrate towards needing some startup configuration. In order to do this, you can provide a value for the  So, if you want to keep all the default settings, it Warning The  You can see that this code configures the default data-binding language (.bind, .trigger, etc.), the default set of view resources (repeat, if, compose, etc.) the history module (integration with the browser Once you","id":1537},{"articleName":"App Config and Startup","articleHref":"docs/fundamentals/app-configuration-and-startup","sectionName":"Rendering the Root Component","sectionId":"rendering-the-root-component","text":" The root component is set by calling  This causes the  Info Warning: When using the ","id":1538},{"articleName":"App Config and Startup","articleHref":"docs/fundamentals/app-configuration-and-startup","sectionName":"Bootstrapping Older Browsers","sectionId":"bootstrapping-older-browsers","text":" Aurelia was originally designed for Evergreen Browsers. This includes Chrome, Firefox, IE11 and Safari 8. However, we also support IE9 and above through the use of additional polyfills. To support these earlier browsers, you need the  In case you are using Webpack, create a file, e.g.  After you have created the file, add it as the first file in your  If you are using JSPM change your  Info: Module Loaders and Bundlers Warning: Promises in Edge","id":1539},{"articleName":"App Config and Startup","articleHref":"docs/fundamentals/app-configuration-and-startup","sectionName":"Manual Bootstrapping","sectionId":"manual-bootstrapping","text":" So far, we In case you use Webpack, you can replace the  The function you pass to the ","id":1540},{"articleName":"App Config and Startup","articleHref":"docs/fundamentals/app-configuration-and-startup","sectionName":"Making Resources Global","sectionId":"making-resources-global","text":" resources When you create a view in Aurelia, it is completely encapsulated. In the same way that you must ","id":1541},{"articleName":"App Config and Startup","articleHref":"docs/fundamentals/app-configuration-and-startup","sectionName":"Organizing Your App with Features","sectionId":"organizing-your-app-with-features","text":" Sometimes you have whole group of components or related functionality that collectively form a  Imagine, as above, that we have a  To create a  The  How then do we turn this feature on in our app? Here Info: Features with Webpack","id":1542},{"articleName":"App Config and Startup","articleHref":"docs/fundamentals/app-configuration-and-startup","sectionName":"Installing Plugins","sectionId":"installing-plugins","text":" Similar to features, you can install 3rd party plugins. The main difference is that a  To use a plugin, you first install the package. For example  Simply provide the same name used during installation to the plugin API. Some plugins may require configuration (see the plugin While all plugins work in a similar manner, consider the real-world example of adding and configuring the dialog plugin by using a configuration callback. The configuration parameter in this case is a type of ","id":1543},{"articleName":"App Config and Startup","articleHref":"docs/fundamentals/app-configuration-and-startup","sectionName":"Leveraging Progressive Enhancement","sectionId":"leveraging-progressive-enhancement","text":" So far you Imagine that you want to generate your home page on the server, including using your server-side templating engine to render out HTML. Perhaps you All this is possible with Aurelia, using a single method call:  It Optionally, you can provide an object instance to use as the data-binding context for the enhancement, or provide a specific part of the DOM to enhance. Here But what if you need to enhance multiple elements on a page that do not have a direct parent/child relationship? For example, suppose you have an existing application written on a non-Aurelia framework that you need to refactor component by component. You can","id":1544},{"articleName":"App Config and Startup","articleHref":"docs/fundamentals/app-configuration-and-startup","sectionName":"Customizing Conventions","sectionId":"customizing-conventions","text":" There are many things you may want to customize or configure as part of your application Configuring the View Location Convention View Strategy Aurelia uses a  In this example, you would simply replace  If you Configuring the Fallback View Location Strategy In addition to customizing the mapping logic of the ","id":1545},{"articleName":"App Config and Startup","articleHref":"docs/fundamentals/app-configuration-and-startup","sectionName":"Logging","sectionId":"logging","text":" Aurelia has a simple logging abstraction that the framework itself uses. By default it is a no-op. The configuration in the above examples shows how to install an appender which will take the log data and output it to the console. Here You can also see how to set the log level. Values for the  The above example uses our provided ","id":1546},{"articleName":"Binding Radios","articleHref":"docs/binding/radios","sectionName":"Introduction","sectionId":"introduction","text":" A group of radio inputs is a type of  Group the radios via the  Group the radios via the  Define each radio Define each radio Two-way bind each radio Two-way bind each radio","id":1547},{"articleName":"Binding Radios","articleHref":"docs/binding/radios","sectionName":"Numbers","sectionId":"numbers","text":" Let","id":1548},{"articleName":"Binding Radios","articleHref":"docs/binding/radios","sectionName":"Objects","sectionId":"objects","text":" The binding system supports binding all types to radios, including objects. Here","id":1549},{"articleName":"Binding Radios","articleHref":"docs/binding/radios","sectionName":"Objects with Matcher","sectionId":"objects-with-matcher","text":" You may run into situations where the object your input element","id":1550},{"articleName":"Binding Radios","articleHref":"docs/binding/radios","sectionName":"Booleans","sectionId":"booleans","text":" In this example each radio input is assigned one of three literal values: ","id":1551},{"articleName":"Binding Radios","articleHref":"docs/binding/radios","sectionName":"Strings","sectionId":"strings","text":" Finally, here","id":1552},{"articleName":"Binding Basics","articleHref":"docs/binding/basics","sectionName":"Introduction","sectionId":"introduction","text":" This article covers the basics of data-binding with Aurelia. You","id":1553},{"articleName":"Binding Basics","articleHref":"docs/binding/basics","sectionName":"HTML and SVG Attributes","sectionId":"html-and-svg-attributes","text":" Aurelia supports binding HTML and SVG attributes to JavaScript expressions. Attribute binding declarations have three parts:  attribute attribute command one-time one-time to-view to-view from-view from-view two-way two-way bind bind command expression expression Typically you The first input uses the ","id":1554},{"articleName":"Binding Basics","articleHref":"docs/binding/basics","sectionName":"DOM Events","sectionId":"dom-events","text":" The binding system supports binding to DOM events.  A DOM event binding will execute a JavaScript expression whenever the specified DOM event occurs. Event binding declarations have three parts:  event event command trigger trigger delegate delegate capture capture command expression expression Below are a few examples. The cancel button uses the  Aurelia will automatically call ","id":1555},{"articleName":"Binding Basics","articleHref":"docs/binding/basics","sectionName":"Function References","sectionId":"function-references","text":" While developing custom elements or custom attributes you may encounter a situation where you have a  Your custom element or attribute can invoke the function that was passed to the ","id":1556},{"articleName":"Binding Basics","articleHref":"docs/binding/basics","sectionName":"Referencing Elements","sectionId":"referencing-elements","text":" Use the  The  element.ref=\"expression\" element.ref=\"expression\" attribute-name.ref=\"expression\" attribute-name.ref=\"expression\" view-model.ref=\"expression\" view-model.ref=\"expression\" view.ref=\"expression\" view.ref=\"expression\" controller.ref=\"expression\" controller.ref=\"expression\"","id":1557},{"articleName":"Binding Basics","articleHref":"docs/binding/basics","sectionName":"String Interpolation","sectionId":"string-interpolation","text":" String interpolation expressions enable interpolating (surprise The first span uses the  String interpolation can be used within html attributes as an alternative to to-view binding. By default, the mode of an interpolation binding is ","id":1558},{"articleName":"Binding Basics","articleHref":"docs/binding/basics","sectionName":"Element Content","sectionId":"element-content","text":" The previous example compared string interpolation binding with  You may also need to bind html text to an element Danger Warning","id":1559},{"articleName":"Binding Basics","articleHref":"docs/binding/basics","sectionName":"Contextual Properties","sectionId":"contextual-properties","text":" The binding system makes several properties available for binding in your templates, depending on the context. $this $this $parent $parent $event $event $index $index $first $first $last $last $even $even $odd $odd","id":1560},{"articleName":"Class and Style","articleHref":"docs/binding/class-and-style","sectionName":"Class","sectionId":"class","text":" You can bind an element To ensure maximum interoperability with other JavaScript libraries, the binding system will only add or remove classes specified in the binding expression. This ensures classes added by other code (eg via ","id":1561},{"articleName":"Class and Style","articleHref":"docs/binding/class-and-style","sectionName":"Style","sectionId":"style","text":" You can bind a css string or object to an element","id":1562},{"articleName":"Delegate vs. Trigger","articleHref":"docs/binding/delegate-vs-trigger","sectionName":"Delegate vs Trigger","sectionId":"delegate-vs-trigger","text":" A couple frequently asked questions are: What When should I use delegate and when should I use trigger? The short answer is:  Event delegation is a technique used to improve application performance. It drastically reduces the number of event subscriptions by leveraging the  mdn [event name] event To find out if  Here Exceptions to the general guidance above: Use  You need to disable the button. You need to disable the button. The button The button This will ensure clicks on disabled button Use  iOS does not bubble click events on elements other than ","id":1563},{"articleName":"Delegate vs. Trigger","articleHref":"docs/binding/delegate-vs-trigger","sectionName":"Event delegation with ","sectionId":"event-delegation-with","text":" In most situations,  delegate This is where you may need another way to listen to  In the 2nd example,  With the introduction of  Well, the short answer above remains true, ","id":1564},{"articleName":"Binding Checkboxes","articleHref":"docs/binding/checkboxes","sectionName":"Introduction","sectionId":"introduction","text":" Aurelia supports two-way binding a variety of data-types to checkbox input elements.","id":1565},{"articleName":"Binding Checkboxes","articleHref":"docs/binding/checkboxes","sectionName":"Booleans","sectionId":"booleans","text":" Bind a boolean property to an input element","id":1566},{"articleName":"Binding Checkboxes","articleHref":"docs/binding/checkboxes","sectionName":"Array of Numbers","sectionId":"array-of-numbers","text":" A set of checkbox elements is a multiple selection interface. If you have an array that serves as the  To define the input","id":1567},{"articleName":"Binding Checkboxes","articleHref":"docs/binding/checkboxes","sectionName":"Array of Objects","sectionId":"array-of-objects","text":" Numbers aren","id":1568},{"articleName":"Binding Checkboxes","articleHref":"docs/binding/checkboxes","sectionName":"Array of Objects with Matcher","sectionId":"array-of-objects-with-matcher","text":" You may run into situations where the object your input element","id":1569},{"articleName":"Binding Checkboxes","articleHref":"docs/binding/checkboxes","sectionName":"Array of Strings","sectionId":"array-of-strings","text":" Finally, here","id":1570},{"articleName":"Computed Properties","articleHref":"docs/binding/computed-properties","sectionName":"Introduction","sectionId":"introduction","text":" Sometimes it is desirable to return a dynamically computed value when accessing a property, or you may want to reflect the status of an internal variable without requiring the use of explicit method calls. In JavaScript, this can be accomplished with the use of a getter. Here dirty checking Dirty checking There isn @computedFrom","id":1571},{"articleName":"Binding Selects","articleHref":"docs/binding/selects","sectionName":"Introduction","sectionId":"introduction","text":" A  Add a  Add a  Bind the select element Bind the select element Define the select element Define the select element You can use the standard  Specify each option Specify each option","id":1572},{"articleName":"Binding Selects","articleHref":"docs/binding/selects","sectionName":"Select Number","sectionId":"select-number","text":"","id":1573},{"articleName":"Binding Selects","articleHref":"docs/binding/selects","sectionName":"Select Object","sectionId":"select-object","text":"","id":1574},{"articleName":"Binding Selects","articleHref":"docs/binding/selects","sectionName":"Select Object with Matcher","sectionId":"select-object-with-matcher","text":" You may run into situations where the object your select element","id":1575},{"articleName":"Binding Selects","articleHref":"docs/binding/selects","sectionName":"Select Boolean","sectionId":"select-boolean","text":"","id":1576},{"articleName":"Binding Selects","articleHref":"docs/binding/selects","sectionName":"Select String","sectionId":"select-string","text":"","id":1577},{"articleName":"Binding Selects","articleHref":"docs/binding/selects","sectionName":"Multiple Select Numbers","sectionId":"multiple-select-numbers","text":"","id":1578},{"articleName":"Binding Selects","articleHref":"docs/binding/selects","sectionName":"Multiple Select Objects","sectionId":"multiple-select-objects","text":"","id":1579},{"articleName":"Binding Selects","articleHref":"docs/binding/selects","sectionName":"Multiple Select Strings","sectionId":"multiple-select-strings","text":"","id":1580},{"articleName":"Value Converters","articleHref":"docs/binding/value-converters","sectionName":"Introduction","sectionId":"introduction","text":" In Aurelia, user interface elements are composed of view and view-model pairs. The view is written with HTML and is rendered into the DOM. The view-model is written with JavaScript and provides data and behavior to the view. Aurelia Here Sometimes the raw data exposed by your view-model isn Ideally, the date would be in a more readable format and the amount would be formatted as currency. One solution to this problem would be to compute the formatted values and expose them as properties of the view-model. This is certainly a valid approach; however, defining extra properties and methods in your models can get messy, especially when you need to keep the formatted values in sync when the original property value change. Fortunately, Aurelia has a feature that makes solving this problem quite easy.","id":1581},{"articleName":"Value Converters","articleHref":"docs/binding/value-converters","sectionName":"Value Converters","sectionId":"value-converters","text":" and vice versa A value converter is a class whose responsibility is to convert view-model values into values that are appropriate to display in the view  Most commonly you If you The Aurelia ValueConverter interface uses  The Aurelia ValueConverter interface uses  In Aurelia, converter parameters can be data-bound.  This is something that was missing in Xaml and enables more advanced binding scenarios. In Aurelia, converter parameters can be data-bound.  This is something that was missing in Xaml and enables more advanced binding scenarios. Aurelia value converter methods can accept multiple parameters. Aurelia value converter methods can accept multiple parameters. Multiple value converters can be composed using pipes ( Multiple value converters can be composed using pipes ( Aurelia value converter can have a class field named  Aurelia value converter can have a class field named ","id":1582},{"articleName":"Value Converters","articleHref":"docs/binding/value-converters","sectionName":"Simple Converters","sectionId":"simple-converters","text":" Before we get too far into the details, let OK, the result looks much better, but how did this all work? Well, first we created a couple of value converters:   Next, we updated the view to  ValueConverter ValueConverter When Aurelia processes the resource, it examines the class DateFormatValueConverter DateFormatValueConverter CurrencyFormatValueConverter CurrencyFormatValueConverter Finally, we applied the converter in the binding using the pipe  Info: Conventional Names","id":1583},{"articleName":"Value Converters","articleHref":"docs/binding/value-converters","sectionName":"Converter Parameters","sectionId":"converter-parameters","text":" The converters in the previous example worked great, but what if we needed to display dates and numbers in multiple formats?  It would be quite repetitive to define a converter for each format we needed to display.  A better approach would be to modify the converters to accept a  With the ","id":1584},{"articleName":"Value Converters","articleHref":"docs/binding/value-converters","sectionName":"Binding Converter Parameters","sectionId":"binding-converter-parameters","text":" Converter parameters needn","id":1585},{"articleName":"Value Converters","articleHref":"docs/binding/value-converters","sectionName":"Multiple Parameters / Composing Converters","sectionId":"multiple-parameters-composing-converters","text":" Value converters can accept multiple parameters and multiple converters can be composed in the same binding expression, providing a lot of flexibility and opportunity for reuse. In the following example, we have a view-model exposing an array of Aurelia repos. The view uses a repeat binding to list the repos in a table. A  Here","id":1586},{"articleName":"Value Converters","articleHref":"docs/binding/value-converters","sectionName":"Object Parameters","sectionId":"object-parameters","text":" Aurelia supports object converter parameters. An alternate implementation of the  There are a couple of advantages to this approach: you don","id":1587},{"articleName":"Value Converters","articleHref":"docs/binding/value-converters","sectionName":"Bi-directional Value Converters","sectionId":"bi-directional-value-converters","text":" So far we In the example below, we have a view-model that exposes colors in an object format, with properties for the red, green and blue components. In the view, we want to bind this color object to an HTML5 color input. The color input expects hex format text, so we","id":1588},{"articleName":"Value Converters","articleHref":"docs/binding/value-converters","sectionName":"Globally Accessible Value Converters","sectionId":"globally-accessible-value-converters","text":" In all of our examples, we","id":1589},{"articleName":"Value Converters","articleHref":"docs/binding/value-converters","sectionName":"Signalable Value Converters","sectionId":"signalable-value-converters","text":" In some scenarios, a global parameter that is unobservable by Aurelia is used inside a value converter, such as timezone, or a new USB was connected to the device etc. In some other scenarios, we need to update all bindings that use a certain value converter at once, for example: language translation value converters when application language has changed. Aurelia value converters have an API to trigger the bindings, with value converters that have signals property declared on it, to update. In the example below, we have a view-model that exposes a list of flights with information of each flight. In the view, we want to bind display each of those flights, as a  Following is the example code","id":1590},{"articleName":"Binding Behaviors","articleHref":"docs/binding/binding-behaviors","sectionName":"Introduction","sectionId":"introduction","text":" Binding behaviors are a category of view resource, just like value converters, custom attributes and custom elements.  Binding behaviors are most like  binding behaviors have full access to the binding instance, throughout it The primary difference between a binding behavior and a value converter is  The additional ","id":1591},{"articleName":"Binding Behaviors","articleHref":"docs/binding/binding-behaviors","sectionName":"throttle","sectionId":"throttle","text":" Aurelia ships with a handful of behaviors out of the box to enable common scenarios.  The first is the throttle binding behavior which limits the rate at which the view-model is updated in two-way bindings or the rate at which the view is updated in to-view binding scenarios. By default  The first thing you probably noticed in the example above is the  Binding behaviors can accept arguments:  Binding behaviors can accept arguments:  A binding expression can contain multiple binding behaviors:  A binding expression can contain multiple binding behaviors:  Binding expressions can also include a combination of value converters and binding behaviors:  Binding expressions can also include a combination of value converters and binding behaviors:  Here The throttle behavior is particularly useful when binding events to methods on your view-model.  Here","id":1592},{"articleName":"Binding Behaviors","articleHref":"docs/binding/binding-behaviors","sectionName":"debounce","sectionId":"debounce","text":" The debounce binding behavior is another rate limiting binding behavior. Debounce prevents the binding from being updated until a specified interval has passed without any changes. A common use case is a search input that triggers searching automatically.  You wouldn Like throttle, the ","id":1593},{"articleName":"Binding Behaviors","articleHref":"docs/binding/binding-behaviors","sectionName":"updateTrigger","sectionId":"updatetrigger","text":" Update trigger allows you to override the input events that cause the element Here Multiple events are supported:","id":1594},{"articleName":"Binding Behaviors","articleHref":"docs/binding/binding-behaviors","sectionName":"signal","sectionId":"signal","text":" The signal binding behavior enables you to  For example, if you have a  Another example is a value converter that uses the current time to convert a record Here to assign the binding a  In the binding expression above we Here","id":1595},{"articleName":"Binding Behaviors","articleHref":"docs/binding/binding-behaviors","sectionName":"oneTime","sectionId":"onetime","text":" With the  This is an important feature to expose. One-time bindings are the most efficient type of binding because they don There are also binding behaviors for  Warning: Binding Mode Casing","id":1596},{"articleName":"Binding Behaviors","articleHref":"docs/binding/binding-behaviors","sectionName":"self","sectionId":"self","text":" With the  For example, in the following markup onMouseDown This works, but now business/ component logic are mixed up with DOM event handling, which are not necessary. Using ","id":1597},{"articleName":"Binding Behaviors","articleHref":"docs/binding/binding-behaviors","sectionName":"Custom binding behaviors","sectionId":"custom-binding-behaviors","text":" You can build custom binding behaviors just like you can build value converters. Instead of  Here","id":1598},{"articleName":"Observable Properties","articleHref":"docs/binding/binding-observable-properties","sectionName":"Observable Properties","sectionId":"observable-properties","text":" Have you ever needed to perform an action when a property is changed? If you have, that To observe a property, you need to decorate it with the  property By convention, the change handler is a method whose name is composed of the  Info If you do not want to use the convention, you can define the callback name for the change handler by setting the  If you prefer, can also put the  only not in Info","id":1599},{"articleName":"Observable Properties","articleHref":"docs/binding/binding-observable-properties","sectionName":"Observing Collections","sectionId":"observing-collections","text":" Use the Collection Observer to observe changes to a collection. Collection types that can be observed are  The callback will receive an array of splices which provides information about the change that was detcted. The properties of the splice may vary depending on the type of collection being observed. Here you can see example callback functions used to observe each of the different collection types. Warning","id":1600},{"articleName":"How it Works","articleHref":"docs/binding/how-it-works","sectionName":"End to End","sectionId":"end-to-end","text":" This article explains how the binding system works. There is a lot to cover here, and to start we A ViewFactory is comprised, among other things, of a template (a document fragment), a set of HTML behavior instructions (instructions for creating custom elements or custom attributes that appear in the template), binding expressions (factories for creating bindings that appear in the template), and dependencies (things you When Aurelia loads one of your HTML templates the markup is parsed by the browser into a document fragment. The document fragment is the browser Once the ViewCompiler has completely traversed the document fragment it returns the  The ViewFactory Creating a binding instance is accomplished by invoking the  Once the ViewFactory The view At this point the view and view-model are data-bound. When changes occur in the model, the property observers created when the AST was ","id":1601},{"articleName":"How it Works","articleHref":"docs/binding/how-it-works","sectionName":"Abstract Syntax Tree","sectionId":"abstract-syntax-tree","text":" The abstract syntax tree is a key part of the binding system, we","id":1602},{"articleName":"How it Works","articleHref":"docs/binding/how-it-works","sectionName":"Binding Context / Scope","sectionId":"binding-context-scope","text":" The  When are bindingContexts created? Not often. The repeat is the only thing that creates them on the fly. The rest of the time the bindingContext is the view-model instance you","id":1603},{"articleName":"Templating Basics","articleHref":"docs/templating/basics","sectionName":"Introduction","sectionId":"introduction","text":" Aurelia","id":1604},{"articleName":"Templating Basics","articleHref":"docs/templating/basics","sectionName":"A Simple Template","sectionId":"a-simple-template","text":" All Aurelia templates must be wrapped with a  This template could be a page in an Aurelia application, or it could be the view for a custom element. A template All Aurelia templates work with a view-model, so let Let One of the key features of Aurelia When this template is run, Aurelia will insert the value of the  In our template, when  But don","id":1605},{"articleName":"Templating Basics","articleHref":"docs/templating/basics","sectionName":"Binding","sectionId":"binding","text":" Binding in Aurelia allows data from the view-model to drive template behavior. The most basic example of binding Above, we have a text box that asks for the name of the person to greet, and a checkbox indicating whether they Notice that the way we set up the binding was by using  You can learn more about data-binding in the Binding section of our docs. Binding Focus We can also use two-way data binding to communicate whether or not an element has focus: When we click the input field, we see  Binding Scopes Using  We can also declare that certain parts of our markup will be referencing properties of an object in the view model, as below: Using ","id":1606},{"articleName":"Templating Basics","articleHref":"docs/templating/basics","sectionName":"Composition","sectionId":"composition","text":" In order to live by the DRY (Don Note that the view-model we","id":1607},{"articleName":"Templating Basics","articleHref":"docs/templating/basics","sectionName":"The as-element Attribute","sectionId":"the-as-element-attribute","text":" In some cases, especially when creating table rows out of Aurelia custom elements, you may need to have a custom element masquerade as a standard HTML element. For example, if you The ","id":1608},{"articleName":"Templating Basics","articleHref":"docs/templating/basics","sectionName":"The View Resource Pipeline","sectionId":"the-view-resource-pipeline","text":" The basic idea behind the View Resource Pipeline is that we Here, the ","id":1609},{"articleName":"Templating Basics","articleHref":"docs/templating/basics","sectionName":"View and Compilation Spies","sectionId":"view-and-compilation-spies","text":" If you view-spy","id":1610},{"articleName":"Templating Basics","articleHref":"docs/templating/basics","sectionName":"Conditionals","sectionId":"conditionals","text":" Aurelia has two major tools for conditional display:  The difference is subtle but important in terms of speed and usability. When the state changes in  Here However, if we just want to hide the element from view instead of destroying it completely, we should use  When unchecked, our  Conditionals can also be one-time bound, so that parts of the template are fixed when they There Complementing  Elements using the ","id":1611},{"articleName":"Templating Basics","articleHref":"docs/templating/basics","sectionName":"Repeaters","sectionId":"repeaters","text":" Repeaters can be used on any element, including custom elements, and template elements too Arrays Aurelia is also able to repeat elements for each element in an array. This allows me to list out my friends and greet them one by one, rather than attempting to greet all 7 billion As mentioned before, we can also use the template element as our repeater - but we have to wrap it in a surrogate  Info Range We can also iterate over a numerical range: Note that the range will start at 0 with a length of 10, so our countdown really does start at 10 and end at 1 before blast off. Sets I can also use an ES6 Set in the same way: We can use repeaters with arrays, which is useful - but we can also use repeaters with other iterable data types, including objects, plus new ES6 standards such as Map and Set. Map One of the more useful iterables is the Map, because you can decompose your key and value into two variables directly in the repeater. Although you can repeat over objects straightforwardly, Maps can be two-way bound much more straightforwardly than Objects, so you should try to use Maps where possible. One thing to notice in the example above is the dereference operator in  Objects Let We just introduced something called a  A common question pops up here: Why can","id":1612},{"articleName":"HTML Behaviors","articleHref":"docs/templating/html-behaviors-introduction","sectionName":"Introduction","sectionId":"introduction","text":" The term ","id":1613},{"articleName":"HTML Behaviors","articleHref":"docs/templating/html-behaviors-introduction","sectionName":"What is an HTML Behavior?","sectionId":"what-is-an-html-behavior","text":" HTML Behaviors are how you extend HTML with Custom Elements and Custom Attributes in an Aurelia application. Custom Elements are, as their name suggests, their own element in your markup. They generally have a view with some markup that will be rendered as part of a page in your application. Custom Attributes, on the other hand, can be used on standard HTML elements (such as  HTML Behaviors, with one exception, require you to create a class for the behavior. This class is called a  Info: Custom Elements as Default If you are using the naming convention for your HTML Behavior You can override the naming convention and explicitly name your HTML Behavior by using a  As you see here, the custom attribute Info: Naming Practices","id":1614},{"articleName":"HTML Behaviors","articleHref":"docs/templating/html-behaviors-introduction","sectionName":"Getting the DOM Element for your Behavior","sectionId":"getting-the-dom-element-for-your-behavior","text":" When you are creating an HTML Behavior, there will be many instances where you will need to perform some manipulation of the DOM Element associated with your behavior. Initially, you might think,  When you tell Aurelia to inject an instance of the  Remember, you don Warning: Try to Avoid Browser Globals","id":1615},{"articleName":"HTML Behaviors","articleHref":"docs/templating/html-behaviors-introduction","sectionName":"Making an HTML Behavior Available in a View","sectionId":"making-an-html-behavior-available-in-a-view","text":" must So far, we The path you supply in the  The name the resource will take in your view is determined in one of three ways: by Aurelia convention, by explicit naming in the resource, or by being overridden using the  You will typically not provide a file extension to the  Info: The Inspiration for Require","id":1616},{"articleName":"HTML Behaviors","articleHref":"docs/templating/html-behaviors-introduction","sectionName":"Global Resources","sectionId":"global-resources","text":" You are likely to have certain resources that you will use in multiple views while developing an Aurelia application. In these instances it might be wise to make these resources available globally in your application. Luckily, Aurelia provides you with this capability in a simple fashion. This is typically done at application startup in your  The file you use to configure Aurelia will have a  Note that the same rules regarding file extensions (only include it for HTML-only custom elements) apply for the paths passed to ","id":1617},{"articleName":"HTML Behaviors","articleHref":"docs/templating/html-behaviors-introduction","sectionName":"Creating Bindable Properties on an HTML Behavior","sectionId":"creating-bindable-properties-on-an-html-behavior","text":" As you likely know by now, one of Aurelia The  The page into out of By default, bindable properties only allow  Binding with Custom Attributes is a bit more nuanced than Custom Elements in that Custom Attributes support three types of binding: single value, options binding, and dynamic options binding. In this document, we will only look at single value binding. Please check out the Custom Attribute documentation for examples of how to implement and use all three types of bindings. The  Aurelia will call the ","id":1618},{"articleName":"HTML Behaviors","articleHref":"docs/templating/html-behaviors-introduction","sectionName":"Inheritance with HTML Behaviors","sectionId":"inheritance-with-html-behaviors","text":" For developers who want to leverage inheritance, bindable properties can be inherited through the class hierarchy for custom elements only (not custom attributes). In the following example we create a generic icon button component,  The next component extends the generic button, setting its default icon as well as a different ","id":1619},{"articleName":"HTML Behaviors","articleHref":"docs/templating/html-behaviors-introduction","sectionName":"HTML-Only Custom Elements","sectionId":"html-only-custom-elements","text":" Earlier, we said that there is one exception to the rule that all HTML Behaviors must have a JavaScript class to act as a ViewModel, but we never explained just what that exception is. The exception is HTML Only Custom Elements. Aurelia provides you with the ability to create Custom Elements without needing to create a ViewModel class. This is great for those cases where you want to encapsulate something in to its own Custom Element, but whatever you are encapsulating isn Creating an HTML Only Custom Element is as simple as creating an HTML view file and then requiring it in to your view with the ","id":1620},{"articleName":"HTML Behaviors","articleHref":"docs/templating/html-behaviors-introduction","sectionName":"HTML Behavior Lifecycle","sectionId":"html-behavior-lifecycle","text":" All HTML Behaviors have a well defined lifecycle. Using this lifecycle, you can tap in and trigger code to run when appropriate. Below is a listing of the standard lifecycle callbacks: constructor() constructor() created(owningView: View, myView: View) created(owningView: View, myView: View) bind(bindingContext: Object, overrideContext: Object) bind(bindingContext: Object, overrideContext: Object) attached() attached() detached() detached() unbind() unbind() Tapping into a lifecycle event is as simple as implementing any of the above methods on the behavior","id":1621},{"articleName":"HTML Behaviors","articleHref":"docs/templating/html-behaviors-introduction","sectionName":"Conclusion","sectionId":"conclusion","text":" If you You can create bindable properties for your Custom Elements by using the  Now that you","id":1622},{"articleName":"Custom Elements","articleHref":"docs/templating/custom-elements","sectionName":"Introduction","sectionId":"introduction","text":" Custom elements are the primary tool an Aurelia application developer will utilize for componentizing an application.","id":1623},{"articleName":"Custom Elements","articleHref":"docs/templating/custom-elements","sectionName":"HTML Only Custom Element","sectionId":"html-only-custom-element","text":" The simplest way to create an Aurelia custom element is to create an Aurelia view template in an HTML file and then require it in to another Aurelia view template. HTML only custom elements are a highly useful strategy for dealing with functionality that has no need for ViewModel logic but is likely to be reused. The element name will be the same as the HTML file name, without the extension. When requiring an HTML only custom element in to a view, you must include the  HTML only custom elements may require in other custom elements and attributes as well as utilizing any other view resource just like any other Aurelia component may. HTML only custom elements also support explicit two-way databinding for properties, though it is not possible to create properties that default to two-way databinding with HTML only custom elements. For that type of functionality, you will need to provide a ViewModel for your custom element. The following example shows an Aurelia view utilizing two-way databinding to an example HTML only custom element. The example HTML only custom element itself requires in other custom elements, and utilizes two-way databinding to those custom elements. Note that it is possible to use the full power of Aurelia","id":1624},{"articleName":"Custom Elements","articleHref":"docs/templating/custom-elements","sectionName":"Custom Element Basics","sectionId":"custom-element-basics","text":" Creating custom elements using Aurelia is extremely simple. Simply creating a JavaScript and HTML file pair with the same name is all that is necessary to create an Aurelia custom element. The HTML file must contain an Aurelia template wrapped in a  Custom elements are not allowed to be self-closing. This means that  It is also possible to explicitly name your custom element by using the  Aurelia custom elements do not need to follow the naming conventions for Web Components custom elements. Namely, Aurelia allows you to create custom elements that do not have a dash in their name. This is because the Web Components specs reserve all single-word element names for the browser. Thus, you are free to create a  Before we move on, let","id":1625},{"articleName":"Custom Elements","articleHref":"docs/templating/custom-elements","sectionName":"Bindable Properties","sectionId":"bindable-properties","text":" in out Any properties or functions of the VM class may be used for binding within the custom element In this example, the  Whether a secret message that is only shown to the person who writes the message is very useful is for you to decide.","id":1626},{"articleName":"Custom Elements","articleHref":"docs/templating/custom-elements","sectionName":"Surrogate Behaviors","sectionId":"surrogate-behaviors","text":" Surrogate behaviors allow you to add attributes, event handlers, and bindings on the template element for a custom element. This can be extremely useful in many cases, but one particular area that it is helpful is with dealing with  The  It is important to note that Surrogate Behaviors cannot be used with a custom element that is using the ","id":1627},{"articleName":"Custom Elements","articleHref":"docs/templating/custom-elements","sectionName":"Basic Content Projection","sectionId":"basic-content-projection","text":" So far, we Aurelia custom elements utilize the  Aurelia will project the element","id":1628},{"articleName":"Custom Elements","articleHref":"docs/templating/custom-elements","sectionName":"Decorators for Customizing Aurelia Custom Element Processing","sectionId":"decorators-for-customizing-aurelia-custom-element-processing","text":" There are lots of options that allow you to change how custom elements work. These are expressed by decorators added to the custom element @children(selector) @children(selector) @child(selector) @child(selector) @processContent(false|Function) @processContent(false|Function) @useView(path) @useView(path) @noView(dependencies?) @noView(dependencies?) @inlineView(markup, dependencies?) @inlineView(markup, dependencies?) @useShadowDOM() @useShadowDOM() @containerless() @containerless() @viewResources(...dependencies) @viewResources(...dependencies)","id":1629},{"articleName":"Custom Attributes","articleHref":"docs/templating/custom-attributes","sectionName":"Introduction","sectionId":"introduction","text":" Custom attributes are a category of view resource, just like value converters, binding behaviors and custom elements.  Custom attributes provide the ability to alter the behavior or add functionality to any DOM element. Custom attributes may work by simply being added to a DOM element, or they may require that a value be set for the attribute. The value may be a simple value, or a complex set of options. These options may or may not be known when a custom attribute is developed. Aurelia provides simple APIs to create custom attributes of all of these types, while the Aurelia templating engine provides strong databinding capabilities for custom attributes. Many custom attributes will work directly on the DOM element they are attached to. It is not necessary to search the DOM for the element a custom attribute is attached to. This is accomplished simply by requesting the element be injected into the attribute by Aurelia","id":1630},{"articleName":"Custom Attributes","articleHref":"docs/templating/custom-attributes","sectionName":"Simple Custom Attribute","sectionId":"simple-custom-attribute","text":" The simplest custom attribute to create is one that changes the behavior of an element merely by being added to the element. The following attribute will make an HTML element be displayed as a 100 pixel square with a red background. The attribute name is inferred via an Aurelia convention. This convention is ","id":1631},{"articleName":"Custom Attributes","articleHref":"docs/templating/custom-attributes","sectionName":"Explicit Attribute Naming","sectionId":"explicit-attribute-naming","text":" Overriding the default naming convention is possible by utilizing the ","id":1632},{"articleName":"Custom Attributes","articleHref":"docs/templating/custom-attributes","sectionName":"Single Value Binding","sectionId":"single-value-binding","text":" Aurelia custom attributes support three different types of binding: single value binding, options binding, and dynamic options binding. The simplest of the three binding types is single value binding. Aurelia will automatically set the  Note that in the above code sample, the color of the square will not be updated, even if the bound value is changed. This is because the attribute is not notified when the  When the user updates the value of the ","id":1633},{"articleName":"Custom Attributes","articleHref":"docs/templating/custom-attributes","sectionName":"Options Binding","sectionId":"options-binding","text":" Options binding provides a custom attribute the ability to have multiple bindable properties. Each bindable property must be specified using the ","id":1634},{"articleName":"Custom Attributes","articleHref":"docs/templating/custom-attributes","sectionName":"Default Option","sectionId":"default-option","text":" A single bindable property can be made the default among all the options in an options binding.  Thus, when you use a custom attribute that would otherwise require using the options HTML syntax, and you want to provide a value or binding only for the default property, then you can use the simpler HTML syntax of a single value binding. With options bindings each bindable property must be decorated with the  Then when you use the custom attribute, instead of this: You can do this: Or if you don","id":1635},{"articleName":"Custom Attributes","articleHref":"docs/templating/custom-attributes","sectionName":"Dynamic Options Binding","sectionId":"dynamic-options-binding","text":" Utilizing dynamic options, a custom attribute may deal with bindable properties where the name of the property is not known when creating the attribute. Simply decorate the attribute","id":1636},{"articleName":"Custom Attributes","articleHref":"docs/templating/custom-attributes","sectionName":"Globally Accessible Custom Attributes","sectionId":"globally-accessible-custom-attributes","text":" In all of our examples, we","id":1637},{"articleName":"Dependency Injection","articleHref":"docs/fundamentals/dependency-injection","sectionName":"Introduction","sectionId":"introduction","text":" When building applications, it A dependency injection container is a tool that can simplify the process of decomposing such a system. Often times, when developers go through the work of destructuring a system, they introduce a new complexity of ","id":1638},{"articleName":"Dependency Injection","articleHref":"docs/fundamentals/dependency-injection","sectionName":"Injection","sectionId":"injection","text":" Let The mechanism for declaring a class inject Notice that we use the  Info If you are using TypeScript, you can take advantage of an experimental feature of the language to have the TypeScript transpiler automatically provide Type information to Aurelia any Info If you aren In addition to a static  The nice thing about dependency injection is that it works in a recursive fashion. For example, if class A depends on class B, and class B depends on classes C and D, and class D depends on E, F and G, then creating class A will result in the resolution of all the classes in the hierarchy that are needed.","id":1639},{"articleName":"Dependency Injection","articleHref":"docs/fundamentals/dependency-injection","sectionName":"Object Lifetime, Child Containers and Default Behavior","sectionId":"object-lifetime-child-containers-and-default-behavior","text":" Each object created by the dependency injection container has a  Any class can be registered in a container as singleton or transient (or custom). We Example 1 - Root Container Resolution singleton Imagine that we have a single instance of  Example 2 - Child Container Resolution Now, imagine that we have a  Example 3 - Child Container Resolution with Override Let As you can see from these examples, the ","id":1640},{"articleName":"Dependency Injection","articleHref":"docs/fundamentals/dependency-injection","sectionName":"How Aurelia Uses Containers","sectionId":"how-aurelia-uses-containers","text":" Aurelia makes extensive use of DI throughout the framework. All view-models, components, services, etc. are created with DI. Aurelia also makes heavy use of child containers. The key to understanding the lifetime of your objects is in knowing how Aurelia uses child containers. There are basically three cases where child containers get created and used by Aurelia, all essentially having to do with components. Custom Elements and Custom Attributes be have When Aurelia creates a View, that view may contain occurrences of custom elements and custom attributes. Any time an HTML element is found to either  Info Warning Routed Components Each time the  Dynamic Components Dynamic composition, whether through the  The General Rule for Aurelia Everything is an application-level singleton except for those things which are classified as ","id":1641},{"articleName":"Dependency Injection","articleHref":"docs/fundamentals/dependency-injection","sectionName":"Explicit Configuration","sectionId":"explicit-configuration","text":" For the most part, Aurelia The Container Registration API The usual way to configure a class Here key class key container.registerSingleton(key: any, fn?: Function): void container.registerSingleton(History, BrowserHistory); container.registerSingleton(History, BrowserHistory); container.registerSingleton(HttpClient); container.registerSingleton(HttpClient); container.registerSingleton(key: any, fn?: Function): void key class container.registerTransient(key: any, fn?: Function): void container.registerTransient(LinkHandler, DefaultLinkHandler); container.registerTransient(LinkHandler, DefaultLinkHandler); container.registerTransient(key: any, fn?: Function): void container.registerInstance(key: any, instance?: any): void container.registerInstance(key: any, instance?: any): void container.registerHandler(key: any, handler: (container?: Container, key?: any, resolver?: Resolver) => any): void container.registerHandler('Foo', () => new Bar()); container.registerHandler('Foo', () => new Bar()); container.registerHandler(key: any, handler: (container?: Container, key?: any, resolver?: Resolver) => any): void container.registerResolver(key: any, resolver: Resolver): void container.registerResolver(key: any, resolver: Resolver): void container.autoRegister(fn: any, key?: any): Resolver container.autoRegister(fn: any, key?: any): Resolver any key Info: Registration Keys Registration Decorators As an alternative to explicitly registering types with the container, you can rely on auto-registration, but specify the auto-registration behavior you desire, overriding the default container-root-singleton behavior. To provide auto-registration behavior, you simply decorate your type with an auto-registration decorator. What follows is a basic explanation of built-in registration decorators: transient() transient() singleton(overrideChild?:boolean) singleton(overrideChild?:boolean) registration(registration: Registration) registration(registration: Registration) must Warning: Registration Decorator Usage","id":1642},{"articleName":"Dependency Injection","articleHref":"docs/fundamentals/dependency-injection","sectionName":"Resolvers","sectionId":"resolvers","text":" As mentioned above, the DI container uses  Lazy ex.  ex.  Lazy All ex.  ex.  All Optional ex.  ex.  Optional Parent ex.  ex.  Parent Factory ex.  ex.  Factory NewInstance ex.  ex.  NewInstance If using TypeScript, keep in mind that  lazy(key) lazy(key) all(key) all(key) optional(checkParent?) optional(checkParent?) parent parent factory(key, asValue?) factory(key, asValue?) newInstance(key?) newInstance(key?) Here In this case, the ","id":1643},{"articleName":"Content Projection","articleHref":"docs/templating/content-projection","sectionName":"Introduction","sectionId":"introduction","text":" Most of the standard HTML elements allow for content inside them. Custom Elements would be of limited use if we couldn","id":1644},{"articleName":"Content Projection","articleHref":"docs/templating/content-projection","sectionName":"Basic Content Projection","sectionId":"basic-content-projection","text":" Let Aurelia custom elements utilize the  Aurelia will project the element","id":1645},{"articleName":"Content Projection","articleHref":"docs/templating/content-projection","sectionName":"Named Slots","sectionId":"named-slots","text":" The scenario above uses a ","id":1646},{"articleName":"Content Projection","articleHref":"docs/templating/content-projection","sectionName":"Fallback Slots","sectionId":"fallback-slots","text":" A nice feature of slots is that they can have fallback content. If nothing gets projected into the slot, the slot will render its fallback content: Ok, now it That was fun","id":1647},{"articleName":"Content Projection","articleHref":"docs/templating/content-projection","sectionName":"Slot Implementation Limitations","sectionId":"slot-implementation-limitations","text":" At the time this document is written, no browser supports  Known limitations of our implementation are as follows: You cannot data-bind the slot You cannot data-bind the slot You cannot data-bind the  You cannot data-bind the  You cannot dynamically generate  You cannot dynamically generate  For example, the following would fail because the slot cannot be dynamic, however ","id":1648},{"articleName":"Dynamic UI Composition","articleHref":"docs/templating/dynamic-ui-composition","sectionName":"Introduction","sectionId":"introduction","text":" In this section, we are going to be learning how you can dynamically render components in your applications by utilizing Aurelia In many respects, dynamic composition closely resembles that of how Aurelia When using Aurelia","id":1649},{"articleName":"Dynamic UI Composition","articleHref":"docs/templating/dynamic-ui-composition","sectionName":"Basic Composition","sectionId":"basic-composition","text":" Using the  Inside of our  Because Aurelia is a convention based framework, the ","id":1650},{"articleName":"Dynamic UI Composition","articleHref":"docs/templating/dynamic-ui-composition","sectionName":"Composing Without a View-Model","sectionId":"composing-without-a-view-model","text":" If you For the ","id":1651},{"articleName":"Dynamic UI Composition","articleHref":"docs/templating/dynamic-ui-composition","sectionName":"Passing Through Data","sectionId":"passing-through-data","text":" Using what we learned above, we can dynamically compose view-models and views and pass through additional data via the  We are going to be building an example which will dynamically render a view/view-model pair and accept an object of provided values. If you have worked with the Aurelia router before and router parameters, you will notice we obtain the provided model object the same way: as the first argument of the  Notice how we are referencing values on our provided object,  Info","id":1652},{"articleName":"Router Configuration","articleHref":"docs/routing/configuration","sectionName":"Basic Configuration","sectionId":"basic-configuration","text":" To use Aurelia config.map() config.map() route Parameterized routes match against a string with a  Parameterized routes match against a string with a  A parameter can be made optional by appending a question mark  A parameter can be made optional by appending a question mark  Wildcard routes are used to match the  Wildcard routes are used to match the  route name name moduleId moduleId href href nav isActive isActive title title href href config config settings settings router router Other properties includes  Other properties includes  nav title title Navigation States The router contains a number of additional properties that indicate the current status of router navigation. These properties are only set on the base router, i.e. not in child routers. Additionally, these properties are all with respect to browser history which extends past the lifecycle of the router itself. router.isNavigating router.isNavigating router.isNavigatingFirst router.isNavigatingFirst router.isNavigatingNew router.isNavigatingNew router.isNavigatingForward router.isNavigatingForward router.isNavigatingBack router.isNavigatingBack router.isNavigatingRefresh router.isNavigatingRefresh router.isExplicitNavigation router.isExplicitNavigation router.isExplicitNavigationBack router.isExplicitNavigationBack","id":1653},{"articleName":"Router Configuration","articleHref":"docs/routing/configuration","sectionName":"Options","sectionId":"options","text":" Push State Set  Warning","id":1654},{"articleName":"Router Configuration","articleHref":"docs/routing/configuration","sectionName":"Dynamically Specify Route Components","sectionId":"dynamically-specify-route-components","text":" You can add a ","id":1655},{"articleName":"Router Configuration","articleHref":"docs/routing/configuration","sectionName":"Adding Additional Data To A Route","sectionId":"adding-additional-data-to-a-route","text":" Although Aurelia does allow you to pass any additional property to a route","id":1656},{"articleName":"Router Configuration","articleHref":"docs/routing/configuration","sectionName":"Case Sensitive Routes","sectionId":"case-sensitive-routes","text":" You can set a route to be case sensitive, should you wish: but In the above example, our route will only match URL fragment of ","id":1657},{"articleName":"Router Configuration","articleHref":"docs/routing/configuration","sectionName":"Handling Unknown Routes","sectionId":"handling-unknown-routes","text":" Aurelia allows you to map any unknown routes. Parameters passed to  A string to a moduleId. This module will be navigated to any time a route is not found. A string to a moduleId. This module will be navigated to any time a route is not found. A routeConfig object. This configuration object will be used any time a route is not found. A routeConfig object. This configuration object will be used any time a route is not found. A function which is passed the NavigationInstruction object and can decide the route dynamically. A function which is passed the NavigationInstruction object and can decide the route dynamically. Using a  The above example will make any unmatched routes to load the  Using A Function For Unknown Routes The function passed to  A string representing  A string representing  An object with property  An object with property  A  A  A  A ","id":1658},{"articleName":"Router Configuration","articleHref":"docs/routing/configuration","sectionName":"Redirecting Routes","sectionId":"redirecting-routes","text":" Aurelia allows redirecting of routes to URL fragments by specifying redirect with a string consisting of a URL fragment. Info: Use Redirect On Empty Routes with Child Routers","id":1659},{"articleName":"Router Configuration","articleHref":"docs/routing/configuration","sectionName":"Pipelines","sectionId":"pipelines","text":" Aurelia has two router classes,  The default pipeline slots in order are  authorize authorize preActivate preActivate preRender preRender postRender postRender A pipeline step must be an object that contains a ","id":1660},{"articleName":"Router Configuration","articleHref":"docs/routing/configuration","sectionName":"Rendering View Ports","sectionId":"rendering-view-ports","text":" Every instance of a  Info Following is an example of the use of view ports: Empty View Ports You can empty a view port by setting  View Port Defaults The empty view port is actually the out-of-the-box default. You can override this default to load a specific  Optional View Ports If a view port configuration is not defined on a route, the router will skip routing on that particular view port leaving the view port untouched. If there is no existing content in the view port, i.e. when the application is first loaded, the view port will be populated with the view port default configuration, which is empty if not otherwise specified (see View Port Defaults). Info","id":1661},{"articleName":"Router Configuration","articleHref":"docs/routing/configuration","sectionName":"Layouts","sectionId":"layouts","text":" Similar to MVC-style master/layout pages, Aurelia allows you to use a  The set of views subject to being part of a layout is defined in Aurelia as a set of views referenced by one or more routes in a router configuration. There are two ways to associate a layout with routes. The first is via HTML, the second is via view model code. Info We To specify a layout on the  layout-view layout-view layout-view-model layout-view-model layout-model layout-model Info Following is an example of HTML in which we specify that we want all destination views reachable under the  Here is the layout view itself: And here we define a view that we want to appear within the layout: Observe how we use the  Now we just have to define the route configuration that will be associated with the  Thus when we navigate to the module  Note there is nothing different about the above route configuration with or without the layout.  It may reference any number of views that would all be included by default in the layout. So that is how we use HTML to associate a layout view with a set of views referenced in a router configuration. We can also associate layouts with route configurations using code in our view model. Suppose we like what we The above example will assign different layouts to the  You can also specify a layout in the ","id":1662},{"articleName":"Router Configuration","articleHref":"docs/routing/configuration","sectionName":"View Swapping and Animation","sectionId":"view-swapping-and-animation","text":" When the Aurelia router navigates from one view to another, we refer to this as  Info You can apply a swap strategy to one or more routes by applying the  Info The following swap order strategies are available: before - animate the next view in before removing the current view before - animate the next view in before removing the current view with - animate the next view at the same time the current view is removed with - animate the next view at the same time the current view is removed after - animate the next view in after the current view has been removed (the default) after - animate the next view in after the current view has been removed (the default) Here is an example of setting the swap order strategy on a ","id":1663},{"articleName":"Router Configuration","articleHref":"docs/routing/configuration","sectionName":"Internationalizing Titles","sectionId":"internationalizing-titles","text":" If your application targets multiple cultures or languages, you probably want to translate your route titles. The  The default value of the For the child  For the child  For the  For the  In the previous example, the ","id":1664},{"articleName":"Router Configuration","articleHref":"docs/routing/configuration","sectionName":"Configuring a Fallback Route","sectionId":"configuring-a-fallback-route","text":" Whenever navigation is rejected, it is redirected to a previous location. However in certain cases a previous location doesn","id":1665},{"articleName":"Router Configuration","articleHref":"docs/routing/configuration","sectionName":"Reusing an Existing View Model","sectionId":"reusing-an-existing-view-model","text":" Since the view model Info","id":1666},{"articleName":"Integrating with Polymer","articleHref":"docs/integration/polymer","sectionName":"Setup","sectionId":"setup","text":" The first step is obtaining Polymer, which is generally done with the  Make sure Bower is installed and then use Bower to install the packages for each of the Polymer elements. Aurelia must also be configured to use the HTML Imports template loader and the  In  It In  At this point, Aurelia and Polymer are ready to go. The examples below incorporate various Polymer elements into the Aurelia skeleton navigation starter.","id":1667},{"articleName":"Integrating with Polymer","articleHref":"docs/integration/polymer","sectionName":"Importing Elements","sectionId":"importing-elements","text":" With the normal Aurelia template loader, nothing is allowed outside the root ","id":1668},{"articleName":"Integrating with Polymer","articleHref":"docs/integration/polymer","sectionName":"Data Binding","sectionId":"data-binding","text":" Given the imports above, this shows how to implement a basic layout in  Notice that Poylmer elements such as  All of the standard Aurelia binding syntax continues to work as well. For example,","id":1669},{"articleName":"Integrating with Polymer","articleHref":"docs/integration/polymer","sectionName":"Forms and Two-Way Binding","sectionId":"forms-and-two-way-binding","text":" The updated  While not strictly necessary in this case, making the form an  Note that the  A normal  If form submission semantics were not needed, another option would be to","id":1670},{"articleName":"Integrating with Polymer","articleHref":"docs/integration/polymer","sectionName":"How the Plugin Works","sectionId":"how-the-plugin-works","text":" The  Element properties marked with  Whenever a Polymer element is imported, it triggers a call to ","id":1671},{"articleName":"Webpack Bundling","articleHref":"docs/build-systems/webpack/bundling","sectionName":"Introduction","sectionId":"introduction","text":" Most of the current major browsers limit the number of simultaneous connections per hostname to six. This means that while six requests are being processed, additional requests for assets on a host will be queued by the browser. In the image below, the Chrome F12 developer tools network tab shows the timing for assets required by the  As we can see, there are over 95 requests being made to load the first view. While the first few requests are being processed the others are waiting, ultimately taking almost 2.39s on a local machine. In the past, the most common browser limit has been 2 connections. This may have been sufficient in the beginning of the web when most of the content was delivered in a single page load. However, it can soon become the bottleneck when building rich client applications with frameworks like Aurelia and others. You may wonder: If this limit can have such a great impact on performance, then why don","id":1672},{"articleName":"Webpack Bundling","articleHref":"docs/build-systems/webpack/bundling","sectionName":"Bundling ","sectionId":"bundling","text":" This connection limit will not cause slowness in our application if we can manage resources well enough to avoid it. When the page is first loaded, this is the initial request that returns HTML content. When the browser processes the HTML content, it spawns more requests to load resources like JS, CSS and images. It also executes JavaScript and sends AJAX requests to the server. To make this process efficient, we need to compress the assets and make fewer (possibly less than 6) requests to load everything we need. Fortunately, static resources can be cached and only downloaded the first time. If they cause slowness, it happens on the first page load only and may be tolerable. Bundling along with minification are techniques that can also be used to improve load time. Bundling and minification improve load time by reducing the number of requests to the server as well as reducing the size of requested assets such as views, view-models and CSS.","id":1673},{"articleName":"Webpack Bundling","articleHref":"docs/build-systems/webpack/bundling","sectionName":"Bundling an Aurelia Webpack Application","sectionId":"bundling-an-aurelia-webpack-application","text":" In the following example, we will use the  Now that we have our app running, let To build the development bundle execute: To build an optimized, minified production bundle execute: You can find the configuration for both of these bundles in the  After the bundle is created, by default you Warning To start a simple web server and test either the development or production build execute: After executing the command, you","id":1674},{"articleName":"Webpack Bundling","articleHref":"docs/build-systems/webpack/bundling","sectionName":"Entry Bundles","sectionId":"entry-bundles","text":" The skeleton-navigation is configured to create 3 explicit entry bundles by default: aurelia-bootstrap aurelia-bootstrap aurelia aurelia app app However, you are free to define as many entry bundles as we want, by listing the packages as entry points of  In the above example we created an explicit bundle called  Defining entry bundles is only useful when you want to be able to make use of client-server file caching, because it means that you can only update the bundles which contain the changes, instead of all of them. To make it easier to see whether it","id":1675},{"articleName":"Webpack Bundling","articleHref":"docs/build-systems/webpack/bundling","sectionName":"Code-Splitting: Chunks / Async Bundles","sectionId":"code-splitting-chunks-async-bundles","text":" By default, all of our application code is contained in the  This is because such  There are two ways to define code-splitting bundles: centralized, in the  centralized, in the  as parameters of the  as parameters of the  For most use-cases, I recommend using the centralized approach, as it makes it easier for you to analyze the output structure. Centralized Approach Let Info Such a definition will create a Webpack split-point, meaning the bundle will only be loaded when it is needed (so-called  Warning Webpack is intelligent enough to resolve any further dependencies that those files and modules depend on (regardless if they are JavaScript files, modules with their own  When the bundler plugin analyzes the  In-View Approach For quickly declaring a certain  Both the ","id":1676},{"articleName":"Webpack Bundling","articleHref":"docs/build-systems/webpack/bundling","sectionName":"Declaring Build Resources","sectionId":"declaring-build-resources","text":" By default, all the production dependencies declared in the  In case Aurelia is supposed to load an external file or an external module that was not defined as a resource by any of its the dependencies, resources must also be specified manually. Warning There might reasons not to declare those resources in all cases,for example when the plugin is to be partially consumed (e.g. only one Button element from a package containing multiple Aurelia elements). If we You can also combine both features to separate out plugins or resources for lazy-loading:","id":1677},{"articleName":"Webpack Bundling","articleHref":"docs/build-systems/webpack/bundling","sectionName":"Chunking Code When It Is Not Loaded By Aurelia","sectionId":"chunking-code-when-it-is-not-loaded-by-aurelia","text":" If you have code that you Such code-splitting is used to polyfill fetch support in the  The  System.import and TypeScript When using TypeScript and the ","id":1678},{"articleName":"Webpack Bundling","articleHref":"docs/build-systems/webpack/bundling","sectionName":"Duplicate Modules in Multiple Bundles","sectionId":"duplicate-modules-in-multiple-bundles","text":" By default, the  Creating multiple bundles requires us to be extra careful because multiple bundles may contain duplicate modules. Before explaining that, we need to understand how bundling works behind the scenes a bit. Let When we want to bundle  To have full control over how Webpack distributes and de-duplicates the modules in the chunks, please refer to ","id":1679},{"articleName":"Webpack Bundling","articleHref":"docs/build-systems/webpack/bundling","sectionName":"Bundle Configuration and Easy Webpack","sectionId":"bundle-configuration-and-easy-webpack","text":" Webpack is a very advanced piece technology, but it can be quite intimidating to beginners and hard to re-configure even for seasoned users. For this very reason, the skeleton-navigation example uses a package called  Let As you can see, adding each  The names of the packages are self-explanatory. The skeleton-navigation config file is a bit more advanced, in that it generates different configs depending on the set environment, since you might want slightly different settings for production, testing and development. For example, you You can easily replace all the preset packages with your own configuration objects. Please refer to the ","id":1680},{"articleName":"Webpack Bundling","articleHref":"docs/build-systems/webpack/bundling","sectionName":"Conclusion","sectionId":"conclusion","text":" In this article, you","id":1681},{"articleName":"I18N","articleHref":"docs/plugins/i18n","sectionName":"Introduction","sectionId":"introduction","text":" This documentation explains how to get up and running with Aurelia-I18N Under the hood it uses ","id":1682},{"articleName":"I18N","articleHref":"docs/plugins/i18n","sectionName":"Installing the Plugin","sectionId":"installing-the-plugin","text":" There are various ways to setup your Aurelia app. It not only boils down Aurelia-I18N is tested and optimized to support both JS and TS, as well as the following loader/bundler scenarios: Aurelia CLI Aurelia CLI JSPM JSPM Webpack Webpack Please continue with the section which suites your setup. In addition to this, you must Aurelia CLI In order to install the Plugin with a CLI Project, first install the plugin via npm, from within the root folder of your project: Since Aurelia-I18N is backed by i18next, you should install it and a backend plugin of your choice. You can use the built-in backend that uses aurelia aurelia dependencies After that we need to tell our CLI App about the new dependencies. To do so we Info JSPM In your project install the plugin via  And optionally install the backend service using: Info Webpack Install the  or if you prefer yarn Also optionally install the  or using yarn Info Optionally, but recommended, add  An example based directly on ","id":1683},{"articleName":"I18N","articleHref":"docs/plugins/i18n","sectionName":"Setting up the Plugin","sectionId":"setting-up-the-plugin","text":" Now that you have installed and configured your loader, these are the steps to get started with the plugin. First, use Manual Boostrapping. Open your  Info Second, create a folder named  Third, for each locale, create a new folder with it Fourth, in those subfolders create a file named  Fifth, create (if you haven Info You may also group your translations by namespaces, spread across multiple files. Say you have the standard translation.json and an additional  Reflect-Metadata Compatibility If you are using ","id":1684},{"articleName":"I18N","articleHref":"docs/plugins/i18n","sectionName":"TypeScript Support","sectionId":"typescript-support","text":" In order to get proper support for autocompletion and typesafety you should install The way to get hold of those is using using npm or perhaps Yarn as with other packages. or if you are using Yarn but in case of yarn there might be a complication as described at https://github.com/yarnpkg/yarn/issues/4226 Info As for the XHR-Backend you or for yarn Info Note: if you decide to use the  If you The next step is to let the compiler know about your  or if you are using TypeScript 2.0 or later, you can add them to the types section like Warning","id":1685},{"articleName":"I18N","articleHref":"docs/plugins/i18n","sectionName":"Using the Plugin","sectionId":"using-the-plugin","text":" i18next translations work by setting up an active locale, which you Setting the active locale In order to change the active language you Getting the active locale To get the active locale you Translating via code Translating stuff via code works by using the method  Translating via html attributes Translation in html can be done alternatively using attributes. By default the plugin is configured to use the  Any element in your views that has one of those attributes, will be translated when the locale is changed. The plugin will use the  Notice in the above example that the key was set to  Use  Alternatively you may extend your VM with the provided Base-I18N-VM, which will set that up for you automatically. Info Specifying attributes By default the plugin will set the  So in above example the html tags will be escaped and the output will be  This will set the  [text] [text] [html] [html] [append] [append] [prepend] [prepend] If the element is a custom element and the value relates to a bindable property of that, then the properties value itself will Any other values will be used as actual attributes on the element itself. Specifying multiple attributes Multiple attributes can be specified by separating them with a semicolon. When the locale changes it will set the  Using nested and combined translations In order to combine two or more translations, just include them with the  Nested keys may also be referenced and will be properly translated: Translating images Images can be translated as well, for when a different image needs to be displayed in another language. The plugin will automatically change the  You may specify a default value for images as well. In order to do so just define an attribute called  This will be picked up by the CLI when translations are extracted from the source files. (see the section on  Passing parameters to the attribute In order to use parameters for replaceable parts in your translation key, you can provide an additional  Info Translating with the TValueConverter In order to do translations in a more declarative way from within your HTML markup you can use a custom ValueConverter named  You will find below a few examples of the available  Translating with the TBindingBehavior The TValueConverter is pretty useful if you prefer a declarative way to enhance DOM elements with i18n support. But it has a lack when it comes to automatically updating itself when changes happen outside, like locale switches. This is what the TBindingBehavior can do. Essentially you do the same thing like with the TValueConverter but use the  Now aurelia-i18n will automatically emit signals when internal changes happen and you can do so as well by emiting a  Info Complex objects for variables via code In some cases it might be useful to define variables via complex objects. Let So in order to avoid that you may simply pass in the object as a whole and the library will pickup all the necessary information and create the proper options object. Formatting numbers via code For displaying numbers in different formats, this plugin makes use of the  The API provides access to the  Below is an example how to access the NumberFormat via code: Formatting numbers with NfValueConverter A more declarative way is to use the  Info Formatting dates via code The Intl. API provides means to  Info Formatting dates with DfValueConverter A more declarative way is to use the  Rendering relative time In order to create a representation of relative time like  This is also tied in to the currentLocale of the library so changing that one will also translate relative time messages. Take a look at the file  A more declarative approach is to use the RtValueConverter directly in your HTML markup. It doesn","id":1686},{"articleName":"I18N","articleHref":"docs/plugins/i18n","sectionName":"Bundle Translation Files","sectionId":"bundle-translation-files","text":" When bundling is used, the built-in backend will read the translations from the bundle with the aurelia loader. Make sure that the  Using JSPM If you Using Aurelia CLI Same would apply to the Aurelia CLI. In order to tell it to process the locales you can create a new task  With that in place, edit your  Also, edit your  By doing this, if you Last but not least search for the build/bundles/source section for the app-bundle and update the configuration to include json files. and inlcude the json extension in the loader plugin part build/loader/plugins/extensions","id":1687},{"articleName":"I18N","articleHref":"docs/plugins/i18n","sectionName":"Internationalization API Polyfill","sectionId":"internationalization-api-polyfill","text":" The plugin leverages the JavaScript Internationalization API to perform certain tasks. Since not all browsers do fully support it ( In case of bundling your app you should thus keep in mind that it will not be automatically included into the bundle. That means you have to manually adjust the bundle config to include the polyfill as well, if you intend to have your application run on browsers without full support.  Bundling the Intl Polyfill with Aurelia CLI Aurelia-I18N uses a polyfill to provide Intl.API support for browsers currently not implementing the feature. To do so first install the Polyfill as part of your project using npm: aurelia After that open up the  Info Use Internationalization API Polyfill with Webpack In order to use the Polyfill with Webpack, you will have to adapt your  When using WebPack, one needs to add  Or using TypeScript More information  On top of that if you need the Intl polyfill included you have to manualy require and bundle it. To do so add the following import statement at the begin of your  For additional information about Intl.js and Webpack please take a look at this ","id":1688},{"articleName":"Webpack Setup","articleHref":"docs/build-systems/webpack/setup","sectionName":"Configuring Your Environment","sectionId":"configuring-your-environment","text":" Let Info","id":1689},{"articleName":"Webpack Setup","articleHref":"docs/build-systems/webpack/setup","sectionName":"Setting up the Project Structure and Build","sectionId":"setting-up-the-project-structure-and-build","text":" We Once the download has completed, unzip it and look inside. The readme file contained therein will explain the various options available to you. Please select one of the skeletons and copy it to the location on your file system that you wish your code to reside. Be sure to rename the folder to appropriately represent the app you want to build. You will now find everything you need inside the folder, including a basic build, package configuration, styles and more. With all this in place, let Open a console and change directory into your app Open a console and change directory into your app dependencies devDependencies Execute the following command to install the dependencies listed in the  Execute the following command to install the dependencies listed in the  Everything we Info","id":1690},{"articleName":"Webpack Setup","articleHref":"docs/build-systems/webpack/setup","sectionName":"Running The App","sectionId":"running-the-app","text":" If you You can now browse to  Info","id":1691},{"articleName":"Webpack Setup","articleHref":"docs/build-systems/webpack/setup","sectionName":"Running The Unit Tests","sectionId":"running-the-unit-tests","text":" To run the unit tests, first ensure that you have followed the steps above in order to install all dependencies and successfully build the library. Once you have done that, you may run the tests with the following command:","id":1692},{"articleName":"Webpack Setup","articleHref":"docs/build-systems/webpack/setup","sectionName":"Running The E2E Tests","sectionId":"running-the-e2e-tests","text":" Integration tests are performed with  Place your E2E-Tests into the folder  Place your E2E-Tests into the folder  Run the tests by invoking Run the tests by invoking","id":1693},{"articleName":"Webpack Setup","articleHref":"docs/build-systems/webpack/setup","sectionName":"Running E2E Tests Manually","sectionId":"running-e2e-tests-manually","text":" Make sure your app runs and is accessible: Make sure your app runs and is accessible: Once bundle is ready, run the E2E-Tests in another console: Once bundle is ready, run the E2E-Tests in another console:","id":1694},{"articleName":"Dialog","articleHref":"docs/plugins/dialog","sectionName":"Introduction","sectionId":"introduction","text":" This article covers the dialog plugin for Aurelia.  This plugin is created for showing dialogs (sometimes referred to as modals) in your application.  The plugin supports the use of dynamic content for all aspects and is easily configurable / overridable.","id":1695},{"articleName":"Dialog","articleHref":"docs/plugins/dialog","sectionName":"Installing The Plugin","sectionId":"installing-the-plugin","text":" In your  In your  If you use  If you use the  and then add a section in your  If you use TypeScript, install the plugin Make sure you use  Make sure you use  Create (if you haven Create (if you haven removed OK if await before continuing Warning not Warning","id":1696},{"articleName":"Dialog","articleHref":"docs/plugins/dialog","sectionName":"Using The Plugin","sectionId":"using-the-plugin","text":" There are a few ways you can take advantage of the Aurelia dialog. You can use the dialog service to open a prompt - You can use the dialog service to open a prompt - This will open a prompt and return a promise that  There is also an  You can create your own view / view-model and use the dialog service to call it from your app You can create your own view / view-model and use the dialog service to call it from your app This will open a dialog and control it the same way as the prompt.  The important thing to keep in mind is you need to follow the same method of utilizing a  and the corresponding view -","id":1697},{"articleName":"Dialog","articleHref":"docs/plugins/dialog","sectionName":"Attach Focus Custom Attribute","sectionId":"attach-focus-custom-attribute","text":" The library exposes an  You can also bind the value of the attach-focus attribute if you want to alter which element will be focused based on a view model property.","id":1698},{"articleName":"Dialog","articleHref":"docs/plugins/dialog","sectionName":"Settings","sectionId":"settings","text":" Global Settings must You can specify global settings as well for all dialogs to use when installing the plugin via the configure method. If providing a custom configuration, you  Dialog Settings The settings available for the dialog are set on the dialog controller on a per-dialog basis. viewModel url - path relative to the application root. If you want to open a  always Warning url - path relative to the application root. object - it will be used as the view model. In this case  object - it will be used as the view model. In this case  class constructor function class - the view model  Info Info DLLPlugin ModuleConcatenationPlugin Warning class - the view model  viewModel view view model model host host childContainer childContainer lock lock ESC ENTER ESC ENTER keyboard keyboard overlayDismiss overlayDismiss centerHorizontalOnly centerHorizontalOnly position position ignoreTransitions ignoreTransitions rejectOnCancel rejectOnCancel Warning","id":1699},{"articleName":"Dialog","articleHref":"docs/plugins/dialog","sectionName":"Accessing The DialogController API","sectionId":"accessing-the-dialogcontroller-api","text":" It is possible to resolve and close (using cancel/ok/error methods) dialog in the same context where you open it.","id":1700},{"articleName":"Dialog","articleHref":"docs/plugins/dialog","sectionName":"Styling The Dialog","sectionId":"styling-the-dialog","text":" Overlay With 50% Opacity Bootstrap adds 50% opacity and a background color of black to the modal.  To achieve this in dialog you can simply add the following CSS.","id":1701},{"articleName":"Dialog","articleHref":"docs/plugins/dialog","sectionName":"Lifecycle Hooks","sectionId":"lifecycle-hooks","text":" In adition to the lifecycle hooks defined by  .canActivate() With this hook you can cancel the opening of a dialog. It is invoked with one parameter - the value of the  .activate() This hook can be used to do any necessary init work. The hook is invoked with one parameter - the value of the  .canDeactivate() With this hook you can cancel the closing of a dialog. To do so return  Warning .deactivate() This hook can be used to do any clean up work. Order of Invocation Each dialog instance goes through the full lifecycle once. constructor call constructor call specific .canActivate() .canActivate() specific .activate() .activate() .created() .created() .bind() .bind() .attached() .attached() specific .canDeactivate() .canDeactivate() specific .deactivate() .deactivate() .detached() .detached() .unbind() .unbind()","id":1702},{"articleName":"HTTP","articleHref":"docs/plugins/http-services","sectionName":"Options","sectionId":"options","text":" When building front-end applications, it That said, the Aurelia team felt the need to provide a simple solution out of the box. We wanted our community to have a directly supported option while still keeping Aurelia open so that our own community could innovate or leverage any other library developed elsewhere. Along these lines, the Aurelia project provides two options: aurelia-http-client aurelia-http-client aurelia-fetch-client aurelia-fetch-client How should you choose between these two options? We recommend using ","id":1703},{"articleName":"HTTP","articleHref":"docs/plugins/http-services","sectionName":"aurelia-fetch-client","sectionId":"aurelia-fetch-client","text":" As previously stated, the  Info: Learn About The Fetch Spec Bring Your Own Polyfill This library does not include a polyfill for Fetch. This library relies on the Fetch API, which is not yet supported by all popular browsers.  First, install the polyfill using your package manager. Second, make sure to import the polyfill into your application code so that it Info: Encapsulate HttpClient Use Basic Use Data requests are accomplished by calling the  Below is a simple sample demonstrating a basic  Configuration An  In the example above,  withDefaults() withInterceptor() request request requestError requestError response response responseError responseError These methods on the interceptor object can also return  Helpers The Fetch API has a couple gotchas, documented by the  config.rejectErrorResponses() config.rejectErrorResponses() config.useStandardConfiguration() config.useStandardConfiguration() The Fetch API has no convenient way of sending JSON in the body of a request. Objects must be manually serialized to JSON, and the  The Fetch API has no convenient way of sending JSON in the body of a request. Objects must be manually serialized to JSON, and the  A Complete Example This example creates a new  Limitations This library does not include a polyfill for Fetch. If you need to support  This library does not include a polyfill for Fetch. If you need to support  This library does not work around any of the existing limitations in the Fetch API, including: Fetch does not currently support aborting requests or specifying request timeouts. Fetch does not currently support aborting requests or specifying request timeouts. Fetch does not currently support progress reporting. Fetch does not currently support progress reporting. This library does not work around any of the existing limitations in the Fetch API, including: JSONP support is not currently provided by this library. JSONP support is not currently provided by this library. The  The  If your application has requirements that don","id":1704},{"articleName":"HTTP","articleHref":"docs/plugins/http-services","sectionName":"aurelia-http-client","sectionId":"aurelia-http-client","text":" In addition to  Basic Use Once installed, you can use it like this: The  As you can see, the API provides convenience methods for all the standard verbs as well as  The  response response responseType responseType content content headers headers statusCode statusCode statusText statusText isSuccess isSuccess reviver reviver requestMessage requestMessage Info: JSON By Default Configuration You can use  In this case, all requests from the client will have the base url of  The fluent API has the following chainable methods:  It is possible to hook into requests and responses with interceptors as well. Here All interceptors used with a client form a chain. The return value of an intercept method is passed on as the argument to the next. Interceptors are called in the order they were added. See the ","id":1705},{"articleName":"JSPM Setup","articleHref":"docs/build-systems/jspm/setup","sectionName":"Configuring Your Environment","sectionId":"configuring-your-environment","text":" Let Info First, let Next, we need to install ","id":1706},{"articleName":"JSPM Setup","articleHref":"docs/build-systems/jspm/setup","sectionName":"Setting up the Project Structure and Build","sectionId":"setting-up-the-project-structure-and-build","text":" With the tooling installed, we can now turn our attention to setting up a basic structure for your app. We Once the download has completed, unzip it and look inside. The readme file contained therein will explain the various options available to you. Please select one of the skeletons and copy it to the location on your file system that you wish your code to reside. Be sure to rename the folder to appropriately represent the app you want to build. You will now find everything you need inside the folder, including a basic build, package configuration, styles and more. With all this in place, let Open a console and change directory into your app Open a console and change directory into your app devDependencies Execute the following command to install the dependencies listed in the  Execute the following command to install the dependencies listed in the  jspm.dependencies Next, execute the following command to install the Aurelia libraries, bootstrap and font-awesome, listed in the  Next, execute the following command to install the Aurelia libraries, bootstrap and font-awesome, listed in the  Everything we Info","id":1707},{"articleName":"JSPM Setup","articleHref":"docs/build-systems/jspm/setup","sectionName":"Running The App","sectionId":"running-the-app","text":" If you You can now browse to  Warning","id":1708},{"articleName":"JSPM Setup","articleHref":"docs/build-systems/jspm/setup","sectionName":"Running The Unit Tests","sectionId":"running-the-unit-tests","text":" To run the unit tests, first ensure that you have followed the steps above in order to install all dependencies and successfully build the library. Once you have done that, proceed with these additional steps: Ensure that the  Ensure that the  You can now run the tests with this command: You can now run the tests with this command:","id":1709},{"articleName":"JSPM Setup","articleHref":"docs/build-systems/jspm/setup","sectionName":"Running The E2E Tests","sectionId":"running-the-e2e-tests","text":" Integration tests are performed with  Place your E2E-Tests into the folder  Place your E2E-Tests into the folder  Install the necessary webdriver: Install the necessary webdriver: Configure the path to the webdriver by opening the file  Configure the path to the webdriver by opening the file  Make sure your app runs and is accessible: Make sure your app runs and is accessible: In another console run the E2E-Tests: In another console run the E2E-Tests:","id":1710},{"articleName":"JSPM Bundling","articleHref":"docs/build-systems/jspm/bundling","sectionName":"Introduction","sectionId":"introduction","text":" Most of the current major browsers limit the number of simultaneous connections per hostname to six. This means that while six requests are being processed, additional requests for assets on a host will be queued by the browser. In the image below, the Chrome F12 developer tools network tab shows the timing for assets required by the  As we can see, there are over 95 requests being made to load the first view. While the first few requests are being processed the others are waiting, ultimately taking almost 2.39s on a local machine. In the past, the most common browser limit has been 2 connections. This may have been sufficient in the beginning of the web when most of the content was delivered in a single page load. However, it can soon become the bottleneck when building rich client applications with frameworks like Aurelia and others. You may wonder: If this limit can have such a great impact on performance, then why don","id":1711},{"articleName":"JSPM Bundling","articleHref":"docs/build-systems/jspm/bundling","sectionName":"Bundling ","sectionId":"bundling","text":" This connection limit will not cause slowness in our application if we can manage resources well enough to avoid it. When the page is first loaded, this is the initial request that returns HTML content. When the browser processes the HTML content, it spawns more requests to load resources like JS, CSS and images. It also executes JavaScript and sends AJAX requests to the server. To make this process efficient, we need to compress the assets and make fewer (possibly less than 6) requests to load everything we need. Fortunately, static resources can be cached and only downloaded the first time. If they cause slowness, it happens on the first page load only and may be tolerable. Bundling along with minification are techniques that can also be used to improve load time. Bundling and minification improve load time by reducing the number of requests to the server as well as reducing the size of requested assets such as views, view-models and CSS.","id":1712},{"articleName":"JSPM Bundling","articleHref":"docs/build-systems/jspm/bundling","sectionName":"Bundling an Aurelia JSPM Application","sectionId":"bundling-an-aurelia-jspm-application","text":" We can  use  Now that we have our app running, let Now, let Info With that file in place, let Here are the things that should have happened after Gulp is finished executing the bundle task: A file,  A file,  A file,  A file,  config.js config.js Now, if we refresh/reload the app from the browser, we will see much less network traffic. This means that our app is properly bundled. Just 9 requests tells the story. We have also managed to minimize the size from 1.2MB to just 773KB here.","id":1713},{"articleName":"JSPM Bundling","articleHref":"docs/build-systems/jspm/bundling","sectionName":"Multiple Bundles","sectionId":"multiple-bundles","text":" We can create as many bundles as we want. Here we have created two: one for our application code and another for Aurelia and third-party libraries. We can create just a single bundle, if we want, that combines both application code and third-party libraries. The number of bundles we would like to have mostly depends on our application structure and the usage patterns of our app. For example, if our app was built in a modular fashion, such that it is a collection of child-app/sections, then a ","id":1714},{"articleName":"JSPM Bundling","articleHref":"docs/build-systems/jspm/bundling","sectionName":"Bundling a JSPM v0.17 App","sectionId":"bundling-a-jspm-v017-app","text":" In a JSPM v0.17 style app, we have two separate config files: ","id":1715},{"articleName":"JSPM Bundling","articleHref":"docs/build-systems/jspm/bundling","sectionName":"Duplicate Modules in Multiple Bundles","sectionId":"duplicate-modules-in-multiple-bundles","text":" Creating multiple bundles requires us to be extra careful because multiple bundles may contain duplicate modules. Before explaining that, we need to understand how bundling works behind the scenes a bit. Let When we want to bundle  Let us now take a closer look at the  Please pay attention to the pattern  When the bundler analyzes this file it will find  Having  Our goal is to create a bundle of our application code only. We have to somehow instruct the bundler not to recursively trace the dependencies. Guess what?  [*.js]","id":1716},{"articleName":"JSPM Bundling","articleHref":"docs/build-systems/jspm/bundling","sectionName":"Bundle Configuration","sectionId":"bundle-configuration","text":" Here is a typical bundle configuration in all its glory: Warning","id":1717},{"articleName":"JSPM Bundling","articleHref":"docs/build-systems/jspm/bundling","sectionName":"Bundling HTML Imports","sectionId":"bundling-html-imports","text":" At this point, if you are thinking:  Now, let After the change  With this little change Aurelia Loader will now use  We will also change the first bundle a little bit to exclude all the  We have changed the source code (src/main.js), so we need to rebuild our app. The command below should do that: Info Now, let Warning Let The above pattern will bundle all the views in ","id":1718},{"articleName":"JSPM Bundling","articleHref":"docs/build-systems/jspm/bundling","sectionName":"Conclusion","sectionId":"conclusion","text":" In this article, you","id":1719},{"articleName":"Validation","articleHref":"docs/plugins/validation","sectionName":"Introduction","sectionId":"introduction","text":" This article covers the basics of validation with Aurelia To get started you If you aurelia-templating-resources If you","id":1720},{"articleName":"Validation","articleHref":"docs/plugins/validation","sectionName":"Defining Rules","sectionId":"defining-rules","text":" Aurelia Validation Selecting a property using  Selecting a property using  Associating rules with the property using  Associating rules with the property using  Customizing property rules using  Customizing property rules using  Sequencing rules using  Sequencing rules using  Applying the ruleset to a class or instance using  Applying the ruleset to a class or instance using  ensure To begin defining a ruleset, use the  displayName Once you Applying Rules After targeting a property with  required() required() matches(regex) matches(regex) email() email() minLength(length) minLength(length) minItems(count) minItems(count) equals(expectedValue) equals(expectedValue) satisfies((value: any, object?: any) => boolean|Promise<boolean>) the property the property the object the property belongs to. the object the property belongs to. satisfies((value: any, object?: any) => boolean|Promise<boolean>) withMessage All rules have a standard message that can be overriden on a case-by-case basis using  $displayName $displayName $propertyName $propertyName $value $value $object $object $config $config $getDisplayName $getDisplayName Here withMessageKey Another way to override messages on a case-by-case basis is to use the  Conditional Validation You may run into situations where you only want a rule to be evaluated when certain conditions are met. Use the  Sequencing Rule Evaluation Rules are evaluated in parallel. Use the  In the example above, the  Tagging Rules Use the  on Once your ruleset has been defined you can apply them to a class using the  .on There is no requirement to apply the rules directly to an object or class, you can capture the ruleset in a variable or property using ","id":1721},{"articleName":"Validation","articleHref":"docs/plugins/validation","sectionName":"Customizing Messages","sectionId":"customizing-messages","text":" The previous section showed how to customize the message of an individual property rule. You can override messages system-wide by replacing a rule You can override the  You can also override the ","id":1722},{"articleName":"Validation","articleHref":"docs/plugins/validation","sectionName":"Validation Controller","sectionId":"validation-controller","text":" The  Creating a Controller Validation controllers can be created using the  Or with the  Both techniques create a new instance of a  If you Setting the Validate Trigger Once you When the trigger is  Use the  validate  The promise will only reject when there is an unexpected application error. Be sure to catch these rejections like you would any other unexpected application error. You can force the validation controller to run validation by invoking the  Invoking the validate method with no arguments will validate all bindings and objects registered with the controller. You can supply a validate instruction to limit the validation to a specific object, property and ruleset: Most of the time you will use the  The opposite of the  addError  You may need to surface validation errors from other sources. Perhaps while attempting to save a change the server returned a business rule error. You can display the server error using the controller addRenderer  The validation controller renders errors by sending them to implementations of the  Events The validation controller has a ","id":1723},{"articleName":"Validation","articleHref":"docs/plugins/validation","sectionName":"Validator","sectionId":"validator","text":" Validator Creating a Validator Validators can be injected: Use the Validator instance","id":1724},{"articleName":"Validation","articleHref":"docs/plugins/validation","sectionName":"Validate Binding Behavior","sectionId":"validate-binding-behavior","text":" The  validate The  & validateOnBlur & validateOnBlur & validateOnChange & validateOnChange & validateOnChangeOrBlur & validateOnChangeOrBlur & validateManually & validateManually","id":1725},{"articleName":"Validation","articleHref":"docs/plugins/validation","sectionName":"Displaying Errors","sectionId":"displaying-errors","text":" The controller exposes properties that are useful for creating error UIs using standard Aurelia templating techniques: results results errors errors validating validating Assuming your view-model had a controller property you could add a simple error summary to your form using a repeat: To build more sophisticated error UIs you might need a list of errors specific to a particular binding or set of bindings. The  This first form-group div uses the  The ","id":1726},{"articleName":"Validation","articleHref":"docs/plugins/validation","sectionName":"Custom Renderers","sectionId":"custom-renderers","text":" The templating approaches described in the previous section may require more markup than you wish to include in your templates. If you would prefer use direct DOM manipulation to render validation errors you can implement a custom renderer. Custom renderers implement a one-method interface:  To use a custom renderer you Warning Here","id":1727},{"articleName":"Validation","articleHref":"docs/plugins/validation","sectionName":"Entity Validation","sectionId":"entity-validation","text":" The examples so far show the controller validating specific properties used in  You may have rules that are not associated with a single property. The fluent rule syntax has an ","id":1728},{"articleName":"Validation","articleHref":"docs/plugins/validation","sectionName":"Custom Rules","sectionId":"custom-rules","text":" The fluent API You will often need to pass arguments to your custom rule. Below is an example of an  You may have noticed the custom rule examples above consider  Rule reuse- if our  Rule reuse- if our  Messages Relevance- if our  Messages Relevance- if our  When you write a custom rule, the function should return  A common application of a custom rule is to confirm that two password entries match.  Here is a example showing how you can do that:","id":1729},{"articleName":"Validation","articleHref":"docs/plugins/validation","sectionName":"Multiple Validation Controllers","sectionId":"multiple-validation-controllers","text":" If you have two forms that need to be independently validated, it is of course recommended you implement them in separate components. However, it is technically possible to do two or more independant validations in the same component by creating multiple validation controllers. For instance: imagine you In your view you need to take care to associate each input with the correct validation controller: In the forms above you can see that each ","id":1730},{"articleName":"Validation","articleHref":"docs/plugins/validation","sectionName":"Integration With Other Libraries","sectionId":"integration-with-other-libraries","text":" In ","id":1731},{"articleName":"Validation","articleHref":"docs/plugins/validation","sectionName":"Integrating with Aurelia-I18N","sectionId":"integrating-with-aurelia-i18n","text":" aurelia-i18n Integrating  Here Creating the view and view-model Once you Here Translation Files Last but not least, create translation files that include translations for each propertyName and each validation message key. Below are the German and English files for the example above. Notice the ","id":1732},{"articleName":"Validation","articleHref":"docs/plugins/validation","sectionName":"Server-Side Validation","sectionId":"server-side-validation","text":" The fluent rule API and Validator API can be used server-side in a NodeJS application. todo: example","id":1733},{"articleName":"Basics","articleHref":"docs/cli/basics","sectionName":"Introduction","sectionId":"introduction","text":" The Aurelia CLI is the official command line tool for Aurelia. It can be used to create new projects, scaffold components and to bundle your application for release. It is the best way to get started on a new Aurelia project.","id":1734},{"articleName":"Basics","articleHref":"docs/cli/basics","sectionName":"Machine Setup","sectionId":"machine-setup","text":" The CLI itself has a couple of prerequisites that you must install first: Install NodeJS version 4.x or above. You can  You can  Install NodeJS version 4.x or above. Install a Git Client Here Here Here Here Install a Git Client Once you have the prerequisites installed, you can install the Aurelia CLI itself. From the command line, use npm to install the CLI globally: Info Warning","id":1735},{"articleName":"Basics","articleHref":"docs/cli/basics","sectionName":"Creating A New Aurelia Project","sectionId":"creating-a-new-aurelia-project","text":" To create a new project, you can run  Once you Once the dependencies are installed, your project is ready to go.","id":1736},{"articleName":"Basics","articleHref":"docs/cli/basics","sectionName":"Running Your Aurelia App","sectionId":"running-your-aurelia-app","text":" From inside your project folder, simply execute ","id":1737},{"articleName":"Basics","articleHref":"docs/cli/basics","sectionName":"Environments","sectionId":"environments","text":" The CLI build system understands that you might run your code in different environments. By default, you are set up with three:  When you do a build the ","id":1738},{"articleName":"Basics","articleHref":"docs/cli/basics","sectionName":"Building Your App","sectionId":"building-your-app","text":" Aurelia CLI apps always run in bundled mode, even during development. To build your app, simply run ","id":1739},{"articleName":"Basics","articleHref":"docs/cli/basics","sectionName":"Generators","sectionId":"generators","text":" resource Executing ","id":1740},{"articleName":"Basics","articleHref":"docs/cli/basics","sectionName":"Aurelia.json","sectionId":"aureliajson","text":" In the ","id":1741},{"articleName":"Basics","articleHref":"docs/cli/basics","sectionName":"Webpack vs SystemJS vs RequireJS","sectionId":"webpack-vs-systemjs-vs-requirejs","text":" When creating a new project using the Aurelia CLI you are presented with a wizard to select a module loader, bundler, CSS preprocessor and more. But what Webpack is a bundler whereas SystemJS and RequireJS are module loaders. Since a bundle of files loads more quickly in the browser than individual files, the CLI will use its own internal bundler when you decide to use the SystemJS or RequireJS module loader. If you choose to use Webpack then you typically don Webpack is a very powerful module bundler. Setting up Webpack from scratch could be a very daunting task though. Luckily the Aurelia CLI takes care of setting up a Webpack configuration for you, you just have to answer some questions when running the  SystemJS is a  RequireJS has been around for a long time. As opposed to SystemJS it is done and no large changes are made, which makes it a little bit more stable than SystemJS. With either module loader (RequireJS, SystemJS) you will be using the Aurelia CLI Bundler. Both SystemJS and RequireJS support loader plugins, such as  If you Please refer to the following websites for more information on Webpack, RequireJS and SystemJS. http://requirejs.org/ http://requirejs.org/ https://github.com/systemjs/systemjs/ https://github.com/systemjs/systemjs/ https://webpack.github.io/ https://webpack.github.io/","id":1742},{"articleName":"Basics","articleHref":"docs/cli/basics","sectionName":"What if I forget this stuff?","sectionId":"what-if-i-forget-this-stuff","text":" If you need your memory refreshed as to what the available options are, at any time you can execute ","id":1743},{"articleName":"Webpack","articleHref":"docs/cli/webpack","sectionName":"Introduction","sectionId":"introduction","text":" The Aurelia CLI fully supports Webpack. When you create a new project by running  The Aurelia CLI will generate a  The generated project makes use of the aurelia-webpack-plugin. As opposed to the Aurelia CLI Bundler, the bundle configuration is in the  If you would like to learn more about Webpack, take a look at the following resources: https://www.pluralsight.com/courses/webpack-fundamentals https://www.pluralsight.com/courses/webpack-fundamentals https://blog.madewithenvy.com/getting-started-with-webpack-2-ed2b86c68783 https://blog.madewithenvy.com/getting-started-with-webpack-2-ed2b86c68783 https://webpack.js.org/configuration/ https://webpack.js.org/configuration/","id":1744},{"articleName":"Webpack","articleHref":"docs/cli/webpack","sectionName":"Deploying Your App","sectionId":"deploying-your-app","text":" When your application is done, the next step is to deploy it. First you will want to create a production build with  If you","id":1745},{"articleName":"Webpack","articleHref":"docs/cli/webpack","sectionName":"Build options","sectionId":"build-options","text":" When you look in the  The configuration that The build and run tasks passes in these parameters. Most of these settings are defined in the  One is missing though: ","id":1746},{"articleName":"Webpack","articleHref":"docs/cli/webpack","sectionName":"Installing 3rd party dependencies","sectionId":"installing-3rd-party-dependencies","text":" Webpack is a powerful and smart bundler, which means that you often don Check out the ","id":1747},{"articleName":"Webpack","articleHref":"docs/cli/webpack","sectionName":"Unit Testing","sectionId":"unit-testing","text":" Depending on what you Jest Jest Karma Karma Protractor Protractor Jest can be launched using  Similarly, Karma can be started using  However, Protractor is a bit different. It has to be started through ","id":1748},{"articleName":"Webpack","articleHref":"docs/cli/webpack","sectionName":"ASP.NET Core","sectionId":"aspnet-core","text":" When developing an ASP.NET Core application you will want to set the ","id":1749},{"articleName":"Tasks","articleHref":"docs/cli/tasks","sectionName":"Introduction","sectionId":"introduction","text":" The Aurelia CLI allows you to execute Gulp tasks, and a few gulp tasks are provided out of the box that get you started. For any new project you need a task to build, run and test the application, so the CLI provides these tasks for you. These tasks can be found in the  Gulp tasks in a CLI application are plain Gulp v4 tasks. Gulp v4 brings gulp.series and gulp.parallel which makes Gulp tasks easier and cleaner. Typescript is entirely supported to be used in Gulp tasks. As is ES2017. The language you use in Gulp tasks is equivalent to the language in your source code and is determined from the ","id":1750},{"articleName":"Tasks","articleHref":"docs/cli/tasks","sectionName":"Task execution","sectionId":"task-execution","text":" A task can be executed with the  What When you execute the above task using the ","id":1751},{"articleName":"Tasks","articleHref":"docs/cli/tasks","sectionName":"Creating a new task","sectionId":"creating-a-new-task","text":" Cool thing about the task runner of the CLI is that you can create your own tasks as well, and run them using the  Just create a new ","id":1752},{"articleName":"Tasks","articleHref":"docs/cli/tasks","sectionName":"Task metadata","sectionId":"task-metadata","text":" The  For example, the  Any task that has such json file, will show up in  If the ","id":1753},{"articleName":"Migrating","articleHref":"docs/cli/migrating","sectionName":"Aurelia-CLI Bundler to Webpack","sectionId":"aurelia-cli-bundler-to-webpack","text":" There are differences between the Aurelia CLI bundler and the Webpack bundler. When you are migrating an existing application from the integrated bundler to Webpack there are a few things to keep in mind. The recommended way to migrate is to create a new Webpack application using the CLI, choosing similar technology as the project that you want to migrate. Then you would copy over the source code (in the  Webpack requires the use of  A few examples: in  in  for routes do  for routes do  @useView(PLATFORM.moduleName('my-view.html')) @useView(PLATFORM.moduleName('my-view.html')) .resources(PLATFORM.moduleName('resources/index')) .resources(PLATFORM.moduleName('resources/index')) when Webpack cannot find a module even though it exists, you likely are missing a PLATFORM.moduleName for that module when Webpack cannot find a module even though it exists, you likely are missing a PLATFORM.moduleName for that module The Aurelia CLI bundler gets its bundle configuration from the  If you use SASS or LESS, then you are going to have to import the stylesheets differently. When you include stylesheets and use the Aurelia CLI bundler, then your ","id":1754},{"articleName":"Aurelia-CLI Bundler","articleHref":"docs/cli/bundler","sectionName":"Introduction","sectionId":"introduction","text":" This part of the documentation is only relevant if you are using the Aurelia CLI Bundler. If you","id":1755},{"articleName":"Aurelia-CLI Bundler","articleHref":"docs/cli/bundler","sectionName":"ASP.NET Core","sectionId":"aspnet-core","text":" If you would like to use ASP.NET Core, first begin by using Visual Studio to create your ASP.NET Core project. Select whatever options make the most sense based on your .NET project plans. After you have created the project, open a command line and change directory into your web project Info When developing an ASP.NET Core application you will want to set the ","id":1756},{"articleName":"Aurelia-CLI Bundler","articleHref":"docs/cli/bundler","sectionName":"Deploying Your App","sectionId":"deploying-your-app","text":" Run the following build command: Then copy the file ","id":1757},{"articleName":"Aurelia-CLI Bundler","articleHref":"docs/cli/bundler","sectionName":"Unit Testing","sectionId":"unit-testing","text":" If you selected a project setup that includes unit tests, you can run your tests with ","id":1758},{"articleName":"Aurelia-CLI Bundler","articleHref":"docs/cli/bundler","sectionName":"Build Revisions","sectionId":"build-revisions","text":" To create builds with revision numbers, you must set  You are also able to set specific flags so that build revisions only take place while staging or in production. For example: Now, if you were to run  Modifying The Index File In order for your ","id":1759},{"articleName":"Aurelia-CLI Bundler","articleHref":"docs/cli/bundler","sectionName":"Bundling Your Project","sectionId":"bundling-your-project","text":" By default, the Aurelia CLI creates two bundles, an  In this setup, we","id":1760},{"articleName":"Aurelia-CLI Bundler","articleHref":"docs/cli/bundler","sectionName":"Adding Client Libraries to Your Project","sectionId":"adding-client-libraries-to-your-project","text":" The CLI provides two commands to help you add 3rd party client libraries,  Manual configuration Unfortunately, not all 3rd party libraries can be successfully configured automatically by the  Below is some guidance for how to manually configure several different common 3rd party library scenarios: A Single-File Module If the library you have installed is a single CommonJS or AMD file, you can add an entry similar to the following to the dependencies of your bundle: name name path path If the  A CommonJS Package Many modules installed through NPM are packages made up of multiple source files. Configuring a library like this is a bit different than the single-file scenario above. Here name name path path main main Info: Environment-Specific Dependencies A Legacy Library Libraries that predate module systems can be a pain because they often rely on global scripts which must be loaded before the library. These libraries also add their own global variables. An example of one such library is  name name path path main main deps deps exports exports and specifically at the beginning of the dependency list Notice first that we A Library with Additional Resources The Bootstrap example above results in the bundling of the JavaScript portions of the library. But, as you probably know, Bootstrap is mostly about CSS. The CSS files distributed with Bootstrap aren Notice that we The final step to make Bootstrap work is to copy the necessary font files to the  Now, the font files will be copied to the  Info: Setup for copying files If you run the application providing the  Info A Very Stubborn Legacy Library Sometimes you can You may want to prepend or append scripts based on the active environment. That The above configuration would prepend the  A Very Stubborn Legacy Library With Plugins Some legacy libraries may support plugins which you also want included in your bundle. In some cases these plugins depend on a global object defined by the main library, so it is important that the plugins exist later in the bundle than the main library scripts. These plugins can go in the  A note on NPM The CLI treats  So, for example, if you need to consume a scoped package in a CLI project, you need the following in your  Your imports must be scoped too: And this is an example of loading a  Reference packages outside of the node It is possible to use packages outside of the node The ","id":1761},{"articleName":"Aurelia-CLI Bundler","articleHref":"docs/cli/bundler","sectionName":"Configuring the Loader","sectionId":"configuring-the-loader","text":" You can configure the loader by adding a  Sometimes you may want to keep the scripts folder somewhere other than the default location, or move the index.html file a few folders up from the project root. In that case it is possible to set the  The script tag for the bundle in ","id":1762},{"articleName":"Aurelia-CLI Bundler","articleHref":"docs/cli/bundler","sectionName":"Styling your Application","sectionId":"styling-your-application","text":" There are many ways to style components in Aurelia. The CLI sets up your project to only process styles inside your application If you aren If you aren For projects that use a CSS preprocessor (chosen from the cli setup questions): Write your styles in the format you chose (styl, sass, less ...). Write your styles in the format you chose (styl, sass, less ...). Require the style by  Require the style by  For projects that use a CSS preprocessor (chosen from the cli setup questions): Bear in mind that you can always configure things any way you want by modifying the tasks in the ","id":1763},{"articleName":"Aurelia-CLI Bundler","articleHref":"docs/cli/bundler","sectionName":"Updating A Single Library","sectionId":"updating-a-single-library","text":" To update a single library use the command ","id":1764},{"articleName":"Aurelia-CLI Bundler","articleHref":"docs/cli/bundler","sectionName":"Updating Multiple Libraries","sectionId":"updating-multiple-libraries","text":" Add the following section to the project Add the following section to the project List the libraries on a single line separated by a space. List the libraries on a single line separated by a space. Include all of the libraries from the dependencies section of aurelia.json that you want to update. Include all of the libraries from the dependencies section of aurelia.json that you want to update. Use the command  Use the command ","id":1765},{"articleName":"Aurelia-CLI Bundler","articleHref":"docs/cli/bundler","sectionName":"Javascript Minification","sectionId":"javascript-minification","text":" The CLI will minify Javascript out of the box for the staging and production environments: These options can be found in the  The Aurelia-CLI uses ","id":1766},{"articleName":"Aurelia-CLI Bundler","articleHref":"docs/cli/bundler","sectionName":"Loader plugins","sectionId":"loader-plugins","text":" Since RequireJS and SystemJS support the notion of loader plugins, the Aurelia CLI allows you to use these in your application. The configuration of these plugins can be found in  The plugins array is the collection of all loader plugins that your application needs. By default this is only the  The  The stub property is an interesting one. If it Adding new plugins is usually a three step process. First you have to specify the plugin in the ","id":1767},{"articleName":"Aurelia-CLI Bundler","articleHref":"docs/cli/bundler","sectionName":"Path mappings","sectionId":"path-mappings","text":" Do you have import statements that look like  Consider creating a path mapping for the  Here That should make it work at runtime, but if you use Typescript it You might have to restart your editor to see the effect of these changes.","id":1768},{"articleName":"Recipes & Known Issues","articleHref":"docs/cli/recipes","sectionName":"Introduction","sectionId":"introduction","text":" In this section you can find examples of particular setups, known issues and possible workarounds","id":1769},{"articleName":"Recipes & Known Issues","articleHref":"docs/cli/recipes","sectionName":"Aurelia-CLI bundler + Docker","sectionId":"aurelia-cli-bundler-docker","text":" When using the Aurelia-CLI bundler together with Docker you might notice that the file watcher doesn In order to resolve this you can open up the  More information on this problem be found in ","id":1770},{"articleName":"Recipes & Known Issues","articleHref":"docs/cli/recipes","sectionName":"NPM uninstalling packages","sectionId":"npm-uninstalling-packages","text":" If you","id":1771},{"articleName":"Updating","articleHref":"docs/cli/updating","sectionName":"Updating the Aurelia CLI","sectionId":"updating-the-aurelia-cli","text":" There are a few steps involved to update the Aurelia CLI to a newer version. In this chapter these steps will be explained. Good thing to know is that Aurelia CLI is actually installed twice, once globally and once locally. The globally installed Aurelia CLI ( Since the CLI is installed both globally and locally, you need to update both. First run  We Always check out the release notes on the Aurelia blog as they may contain additional instructions for updating the CLI.","id":1772},{"articleName":"End-to-End Testing","articleHref":"docs/testing/end-to-end","sectionName":"What is E2E testing?","sectionId":"what-is-e2e-testing","text":" scenarios User Stories test suite End-To-End (E2E) testing is all about testing your application against specific  units With E2E testing you are not interacting with the app","id":1773},{"articleName":"End-to-End Testing","articleHref":"docs/testing/end-to-end","sectionName":"How are E2E tests different?","sectionId":"how-are-e2e-tests-different","text":" asynchronous code One of the key differences when working with E2E tests is that all of your work is located in the browser, which naturally leads to writing a lot of  Another important aspect already noted is the necessity to translate programmatic actions into browser understandable ones. Needless to say, variations exist between the different browsers... integration tests When performing E2E tests you also need to take into consideration that you are actually testing a real web page. So, compared to unit tests, you will additionally need your web page up and accessible by the browser during test execution. Keep in mind that E2E tests, sometimes also referred to as  Last but not least, there is a much higher test code maintenance cost, compared to unit tests. The reason is that now, not only one component is tested exclusively, but rather the whole system at once. Imagine trying to fill out an input element with the id ","id":1774},{"articleName":"End-to-End Testing","articleHref":"docs/testing/end-to-end","sectionName":"Protractor","sectionId":"protractor","text":" Although the previous section may sound depressing, there is hope for developers in  Info: Jasmine Protractor acts as a wrapper on top of the WebDriverJS-API, which is used to communicate with a Selenium Server, either local (standalone) or remote. The picture below depicts the whole process. Protractor communicates via the WebDriverJS-API (the way to talk to Selenium Now the interesting thing is that instead of manually testing your application in each of the major browsers, automated Protractor tests can run on multiple browsers at the same time, saving you valuable time and money. Support is wide-spread and even includes headless browsers like  Besides that, being a wrapper, it offers additional convenience features, not present in the vanilla WebDriverJS-API. One feature, perhaps the most important, is that it allows you to write asynchronous tests in a synchronous style. This means that Protractor will automatically execute the next task, the moment the previous pending tasks finish.","id":1775},{"articleName":"End-to-End Testing","articleHref":"docs/testing/end-to-end","sectionName":"A Basic Example","sectionId":"a-basic-example","text":" To get a basic idea of how this works, take a look at the following example. As you can see, the test utilizes Jasmine for BDD style testing which is placed in a separate JavaScript file and defines a scenario/suite by using a  But sometimes you need to wait for a certain action to happen in the future. Again we can leverage the general browser object and utilize it","id":1776},{"articleName":"End-to-End Testing","articleHref":"docs/testing/end-to-end","sectionName":"Accessing DOM Elements","sectionId":"accessing-dom-elements","text":" locator factory Great locator The first test is looking for an  tear down You may have noticed the method  locators Info: Protractor Locators","id":1777},{"articleName":"End-to-End Testing","articleHref":"docs/testing/end-to-end","sectionName":"Interacting with Forms","sectionId":"interacting-with-forms","text":" Now we know how to work with general elements, but what about inputs? Wouldn Aurelia Aurelia First we navigate to the page using ","id":1778},{"articleName":"End-to-End Testing","articleHref":"docs/testing/end-to-end","sectionName":"Protractor and Aurelia","sectionId":"protractor-and-aurelia","text":" In order to work with Protractor, there is a little configuration that is necessary. This is done in a configuration file, e.g. protractor.conf.js, which sets up the basic information for Protractor so it can find our test files, start the standalone Selenium server and wire up the  The first setting tells Protractor to directly connect to the Browser leveraging its WebDriver, in this case, Chrome, defined by the  The method  The property  Since we This helper uses a Protractor feature to listen for a DOM event fired by Aurelia after initial view composition. By placing this in a ","id":1779},{"articleName":"End-to-End Testing","articleHref":"docs/testing/end-to-end","sectionName":"Testing the Aurelia Skeleton Navigation App","sectionId":"testing-the-aurelia-skeleton-navigation-app","text":" Besides having the configuration file set up, the Skeleton Navigation App also defines a set of demo tests to help you get started with testing your own page. First you After that, open another console and hit the following command to start up the E2E test run: You will find the demo spec in the folder ","id":1780},{"articleName":"End-to-End Testing","articleHref":"docs/testing/end-to-end","sectionName":"Page Objects","sectionId":"page-objects","text":" Page Objects how To conclude this article we Since Aurelia promotes the use of ES6, our page objects are simple ES6 classes, exposing functionality through methods. These methods contain the logic for how to interact with Protractor. The following example shows our main Skeleton PO, which takes care of general application information like the page title and page navigation. One notable thing is the usage of the Aurelia specific function  The second PO is all about the Welcome page.","id":1781},{"articleName":"End-to-End Testing","articleHref":"docs/testing/end-to-end","sectionName":"Test Specification","sectionId":"test-specification","text":" The previously defined page objects can now be imported into our test specification by leveraging the ES6  Our page object methods, in combination with Jasmine","id":1782},{"articleName":"End-to-End Testing","articleHref":"docs/testing/end-to-end","sectionName":"Summary","sectionId":"summary","text":" We hope you enjoyed this introduction to E2E Testing with Protractor and the Aurelia Framework. Time to start writing some tests","id":1783},{"articleName":"Introduction to SSR","articleHref":"docs/ssr/introduction","sectionName":"What is Server Side Rendering?","sectionId":"what-is-server-side-rendering","text":" Server Side Rendering is a concept where the server gets more responsibilities, namely rendering the application on the server and sending the fully rendered page back to the client. By doing this the user will see a rendered page more quickly, before the bundles are loaded and the application has started client-side. Since the page that Server Side Rendering is only feasible because of something called isomorphism. An isomorphic framework allows you to run one application both on the client and the server. Aurelia is such a framework.","id":1784},{"articleName":"Introduction to SSR","articleHref":"docs/ssr/introduction","sectionName":"Caveats","sectionId":"caveats","text":" Even though Server Side Rendering can solve some problems of client side applications, there are some caveats that you should be aware of. The most important one is the fact that your application would run in two different environments: the browser and Node.js. This is possible mostly because of Aurelia Node.js is in some ways quite different from a browser environment. There is no (real) DOM,  Developing your application in a way so that it can be rendered both on the client and the server takes time and effort. Our recommendation is to only use Server Side Rendering if you can spend the time required to make your code work for both the client and server. Since the server will be doing more than just serving static files in a Server Side Rendering setup, more resources are used. So it is necessary to have enough memory and CPU resources available.","id":1785},{"articleName":"Introduction to SSR","articleHref":"docs/ssr/introduction","sectionName":"How It Works","sectionId":"how-it-works","text":" There are a three libraries that are used for Server Side Rendering: aurelia-middleware-koa aurelia-middleware-koa aurelia-ssr-bootstrapper-webpack aurelia-ssr-bootstrapper-webpack aurelia-ssr-engine aurelia-ssr-engine The  The  When a request hits the web server and the middleware kicks off the  When the client receives the HTML from the server, it can already render the entire page, so it is much quicker to render the initial content. After that initial render, the browser will fetch the client side bundles and start the Aurelia application on the client. There is a significant amount of time between the point where the browser has rendered the HTML it received from the server and the point where the browser has finished loading the bundles and starting the application. In this period of time the user can already click on buttons, write in text inputs and so forth, but there is no JavaScript to handle these events since the Aurelia application is not running yet. This is where a library called  Another interesting aspect is that there are two bundles, one for the client side application and one for the server side application. This allows you to have different entry points for client and server.","id":1786},{"articleName":"Introduction to SSR","articleHref":"docs/ssr/introduction","sectionName":"Isomorphic Code","sectionId":"isomorphic-code","text":" In order to use server side rendering it is necessary to write your code in a way so that it can run both on the client (a browser environment) and on the server (a Node.js environment). In a setup where there is no Server Side Rendering you could do the following without any issues: However, since there is no  Please refer to the API documentation of the ","id":1787},{"articleName":"Introduction to SSR","articleHref":"docs/ssr/introduction","sectionName":"Memory Management","sectionId":"memory-management","text":" Since the application will be executed on the server a lot of times, you Using timers like  Another thing to avoid are overrides of global prototypes. For example, overriding any function of ","id":1788},{"articleName":"Introduction to SSR","articleHref":"docs/ssr/introduction","sectionName":"Different Main Entry Points","sectionId":"different-main-entry-points","text":" In a non-SSR application you can have a main module ( While that configuration works when the application runs client-side, you might want a different configuration when the application starts up on the server side. To accomplish this you can create a  Then, in ","id":1789},{"articleName":"Introduction to SSR","articleHref":"docs/ssr/introduction","sectionName":"404 pages","sectionId":"404-pages","text":" When using Server Side Rendering you will likely want to take care of requests for non-existing routes. This can be done by mapping unknown routes to a 404 module: When a non-existing route is requested by a user, the server will render the 404 page just like any other page.","id":1790},{"articleName":"Introduction to SSR","articleHref":"docs/ssr/introduction","sectionName":"Skeleton with SSR Pre-Configured","sectionId":"skeleton-with-ssr-pre-configured","text":" In order to make it easy for you to get started with Server Side Rendering we have put together a skeleton application that already has Server Side Rendering configured. The pre-configured SSR skeleton can be found ","id":1791},{"articleName":"Testing Components","articleHref":"docs/testing/components","sectionName":"Introduction","sectionId":"introduction","text":" With the Component Tester you can easily stage a custom element or custom attribute in isolation inside a mini Aurelia application, assert how it responds to data-binding and assert its behavior throughout the component","id":1792},{"articleName":"Testing Components","articleHref":"docs/testing/components","sectionName":"Getting Started","sectionId":"getting-started","text":" If you are using JSPM: If you are using NPM: Once you","id":1793},{"articleName":"Testing Components","articleHref":"docs/testing/components","sectionName":"Testing a Custom Element","sectionId":"testing-a-custom-element","text":" Let In order to test that the component renders expected HTML, based on what the view is bound to, we can write following test: Running the test should result in the following html should be rendered  StageComponent StageComponent Info Next, we come to the actual test where we call  Finally, we call ","id":1794},{"articleName":"Testing Components","articleHref":"docs/testing/components","sectionName":"Manually handling lifecycle","sectionId":"manually-handling-lifecycle","text":" When testing a component sometimes you want to have tests run at certain points of the lifecycle.  To do this we can tell the component we created that we will manually handle the lifecycle methods - As you see, the test helper lets you easily push components through their lifecycle, testing various aspects of it at each point along the way.","id":1795},{"articleName":"Testing Components","articleHref":"docs/testing/components","sectionName":"Testing a Custom Attribute","sectionId":"testing-a-custom-attribute","text":" Testing a Custom Attribute is not much different than testing a Custom Element. Let Now, let As you can see, everything follows the same pattern we had for our custom element test. One exception is that we take advantage of the ","id":1796},{"articleName":"Testing Components","articleHref":"docs/testing/components","sectionName":"Testing custom component with a real view-model","sectionId":"testing-custom-component-with-a-real-view-model","text":" If you want to test a custom component with a real view-model, mocking If the view model has a dependency on a class called Service for all backend communication:","id":1797},{"articleName":"Testing Components","articleHref":"docs/testing/components","sectionName":"Using a Real Parent View-model","sectionId":"using-a-real-parent-view-model","text":" If you want to test using a custom element inside of a real parent view-model this can be done just as easily.  This can be really helpful when needing to test the state of a parent that is affected by the child custom element or attribute - Using this you can also use the  Or if your view-model has dependencies to load through DI - Now the service dependency for ","id":1798},{"articleName":"Testing Components","articleHref":"docs/testing/components","sectionName":"Improving Readability with Multi-line Strings","sectionId":"improving-readability-with-multi-line-strings","text":" You can improve the readability of your complex views by using template literals in your tests -","id":1799},{"articleName":"Testing Components","articleHref":"docs/testing/components","sectionName":"Helpful Properties and Functions","sectionId":"helpful-properties-and-functions","text":" The  element element viewModel viewModel configure configure dispose dispose bind bind unbind unbind attached attached detached detached waitForElement waitForElement","id":1800},{"articleName":"Testing Components","articleHref":"docs/testing/components","sectionName":"Testing complex components","sectionId":"testing-complex-components","text":" In some cases, the tested element is not rendered yet when the  Waiting for element(s) If you want to wait for elements that can be looked up in the DOM using a query passed to  ComponentTester.waitForElement ComponentTester.waitForElement waitForDocumentElement waitForDocumentElement All these methods and functions take 2 arguments: selector selector options present present interval interval timeout timeout options They all return a  Waiting for matches to complex queries ... or anything else If your query is complex (with non-trivial jQuery lookups for example), or you want to wait for the result of a callback to be something else than  waitFor(getter, options) Examples","id":1801},{"articleName":"Help","articleHref":"help","sectionName":"Books","sectionId":"books","text":" There are a number of books available to help you get started learning Modern JavaScript and Aurelia: <a href=\"https://leanpub.com/aurelia-for-real-world-applications\" target=\"_blank\">Aurelia For Real World Web Applications</a> <a href=\"https://leanpub.com/aurelia-for-real-world-applications\" target=\"_blank\">Aurelia For Real World Web Applications</a> <a href=\"https://www.manning.com/books/aurelia-in-action\" target=\"_blank\">Aurelia in Action</a> <a href=\"https://www.manning.com/books/aurelia-in-action\" target=\"_blank\">Aurelia in Action</a> <a href=\"https://www.packtpub.com/web-development/learning-aurelia\" target=\"_blank\">Learning Aurelia</a> <a href=\"https://www.packtpub.com/web-development/learning-aurelia\" target=\"_blank\">Learning Aurelia</a> <a href=\"https://www.apress.com/us/book/9781484234013\" target=\"_blank\">Practical App Development with Aurelia</a> <a href=\"https://www.apress.com/us/book/9781484234013\" target=\"_blank\">Practical App Development with Aurelia</a> <a href=\"https://www.syncfusion.com/resources/techportal/details/ebooks/aurelia_succinctly\" target=\"_blank\">Aurelia Succinctly</a> <a href=\"https://www.syncfusion.com/resources/techportal/details/ebooks/aurelia_succinctly\" target=\"_blank\">Aurelia Succinctly</a> <a href=\"https://leanpub.com/practical-aurelia\" target=\"_blank\">Practical Aurelia</a> <a href=\"https://leanpub.com/practical-aurelia\" target=\"_blank\">Practical Aurelia</a>","id":1802},{"articleName":"Help","articleHref":"help","sectionName":"Videos","sectionId":"videos","text":" If you are looking for online video courses to help you get started learning Modern JavaScript and Aurelia, there are several great options to choose from: <a href=\"https://www.udemy.com/introduction-to-aurelia-framework/\" target=\"_blank\">Introduction to Aurelia Framework</a> <a href=\"https://www.udemy.com/introduction-to-aurelia-framework/\" target=\"_blank\">Introduction to Aurelia Framework</a> <a href=\"https://vimeo.com/ondemand/modernjavascript\" target=\"_blank\">Modern JavaScript Development</a> <a href=\"https://vimeo.com/ondemand/modernjavascript\" target=\"_blank\">Modern JavaScript Development</a> <a href=\"https://vimeo.com/ondemand/beginningaurelia\" target=\"_blank\">Beginning Aurelia Development</a> <a href=\"https://vimeo.com/ondemand/beginningaurelia\" target=\"_blank\">Beginning Aurelia Development</a> <a href=\"https://vimeo.com/ondemand/intermediateaurelia\" target=\"_blank\">Intermediate Aurelia Development</a> <a href=\"https://vimeo.com/ondemand/intermediateaurelia\" target=\"_blank\">Intermediate Aurelia Development</a> <a href=\"https://www.packtpub.com/web-development/aurelia-web-development-part-1-video\" target=\"_blank\">Aurelia Web Development - Part 1</a> <a href=\"https://www.packtpub.com/web-development/aurelia-web-development-part-1-video\" target=\"_blank\">Aurelia Web Development - Part 1</a> <a href=\"https://www.pluralsight.com/courses/aurelia-fundamentals\" target=\"_blank\">Aurelia Fundamentals</a> <a href=\"https://www.pluralsight.com/courses/aurelia-fundamentals\" target=\"_blank\">Aurelia Fundamentals</a> <a href=\"https://app.pluralsight.com/library/courses/building-applications-aurelia/table-of-contents\" target=\"_blank\">Building Applications with Aurelia</a> <a href=\"https://app.pluralsight.com/library/courses/building-applications-aurelia/table-of-contents\" target=\"_blank\">Building Applications with Aurelia</a>","id":1803},{"articleName":"Help","articleHref":"help","sectionName":"Training","sectionId":"training","text":" We","id":1804},{"articleName":"Help","articleHref":"help","sectionName":"Consulting","sectionId":"consulting","text":" Our core team and partners are able to offer expert consulting on both large and small Aurelia applications. Whether you want to hire members of our team on a per-hour basis without any commitments or need to assemble a team to build out a full application, be confident in your success with the knowledge that your projects are being built by the experts. Have questions? Email ","id":1805},{"articleName":"Help","articleHref":"help","sectionName":"Support","sectionId":"support","text":" We offer enterprise service agreements that will give you and your team great peace of mind. You can know that when you need support, there will be a dedicated expert ready to help you. We believe in our customers and our community and we deeply desire to help ensure your success. For more information email  Info","id":1806}]},"api":{"data":[{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"AccessKeyed","id":1},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"key","ownerKind":"Class","ownerName":"AccessKeyed","id":2},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"object","ownerKind":"Class","ownerName":"AccessKeyed","id":3},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"accept","ownerKind":"Class","ownerName":"AccessKeyed","id":4},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"assign","ownerKind":"Class","ownerName":"AccessKeyed","id":5},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"connect","ownerKind":"Class","ownerName":"AccessKeyed","id":6},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"evaluate","ownerKind":"Class","ownerName":"AccessKeyed","id":7},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"AccessMember","id":8},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"name","ownerKind":"Class","ownerName":"AccessMember","id":9},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"object","ownerKind":"Class","ownerName":"AccessMember","id":10},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"accept","ownerKind":"Class","ownerName":"AccessMember","id":11},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"assign","ownerKind":"Class","ownerName":"AccessMember","id":12},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"connect","ownerKind":"Class","ownerName":"AccessMember","id":13},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"evaluate","ownerKind":"Class","ownerName":"AccessMember","id":14},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"AccessScope","id":15},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"ancestor","ownerKind":"Class","ownerName":"AccessScope","id":16},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"name","ownerKind":"Class","ownerName":"AccessScope","id":17},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"accept","ownerKind":"Class","ownerName":"AccessScope","id":18},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"assign","ownerKind":"Class","ownerName":"AccessScope","id":19},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"connect","ownerKind":"Class","ownerName":"AccessScope","id":20},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"evaluate","ownerKind":"Class","ownerName":"AccessScope","id":21},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"Binary","id":22},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"left","ownerKind":"Class","ownerName":"Binary","id":23},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"operation","ownerKind":"Class","ownerName":"Binary","id":24},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"right","ownerKind":"Class","ownerName":"Binary","id":25},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"accept","ownerKind":"Class","ownerName":"Binary","id":26},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"assign","ownerKind":"Class","ownerName":"Binary","id":27},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"connect","ownerKind":"Class","ownerName":"Binary","id":28},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"evaluate","ownerKind":"Class","ownerName":"Binary","id":29},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"BindingBehavior","id":30},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"args","ownerKind":"Class","ownerName":"BindingBehavior","id":31},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"expression","ownerKind":"Class","ownerName":"BindingBehavior","id":32},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"name","ownerKind":"Class","ownerName":"BindingBehavior","id":33},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"accept","ownerKind":"Class","ownerName":"BindingBehavior","id":34},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"assign","ownerKind":"Class","ownerName":"BindingBehavior","id":35},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"connect","ownerKind":"Class","ownerName":"BindingBehavior","id":36},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"evaluate","ownerKind":"Class","ownerName":"BindingBehavior","id":37},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"BindingBehaviorResource","id":38},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"initialize","ownerKind":"Class","ownerName":"BindingBehaviorResource","id":39},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"register","ownerKind":"Class","ownerName":"BindingBehaviorResource","id":40},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"convention","ownerKind":"Class","ownerName":"BindingBehaviorResource","id":41},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"BindingEngine","id":42},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"collectionObserver","ownerKind":"Class","ownerName":"BindingEngine","id":43},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"createBindingExpression","ownerKind":"Class","ownerName":"BindingEngine","id":44},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"expressionObserver","ownerKind":"Class","ownerName":"BindingEngine","id":45},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"parseExpression","ownerKind":"Class","ownerName":"BindingEngine","id":46},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"propertyObserver","ownerKind":"Class","ownerName":"BindingEngine","id":47},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"registerAdapter","ownerKind":"Class","ownerName":"BindingEngine","id":48},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"CallMember","id":49},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"args","ownerKind":"Class","ownerName":"CallMember","id":50},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"name","ownerKind":"Class","ownerName":"CallMember","id":51},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"object","ownerKind":"Class","ownerName":"CallMember","id":52},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"accept","ownerKind":"Class","ownerName":"CallMember","id":53},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"assign","ownerKind":"Class","ownerName":"CallMember","id":54},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"connect","ownerKind":"Class","ownerName":"CallMember","id":55},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"evaluate","ownerKind":"Class","ownerName":"CallMember","id":56},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"CheckedObserver","id":57},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"getValue","ownerKind":"Class","ownerName":"CheckedObserver","id":58},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"handleEvent","ownerKind":"Class","ownerName":"CheckedObserver","id":59},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"setValue","ownerKind":"Class","ownerName":"CheckedObserver","id":60},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"subscribe","ownerKind":"Class","ownerName":"CheckedObserver","id":61},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"unsubscribe","ownerKind":"Class","ownerName":"CheckedObserver","id":62},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"Conditional","id":63},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"condition","ownerKind":"Class","ownerName":"Conditional","id":64},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"no","ownerKind":"Class","ownerName":"Conditional","id":65},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"yes","ownerKind":"Class","ownerName":"Conditional","id":66},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"accept","ownerKind":"Class","ownerName":"Conditional","id":67},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"assign","ownerKind":"Class","ownerName":"Conditional","id":68},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"connect","ownerKind":"Class","ownerName":"Conditional","id":69},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"evaluate","ownerKind":"Class","ownerName":"Conditional","id":70},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"DataAttributeObserver","id":71},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"getValue","ownerKind":"Class","ownerName":"DataAttributeObserver","id":72},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"setValue","ownerKind":"Class","ownerName":"DataAttributeObserver","id":73},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"subscribe","ownerKind":"Class","ownerName":"DataAttributeObserver","id":74},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"unsubscribe","ownerKind":"Class","ownerName":"DataAttributeObserver","id":75},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"DirtyCheckProperty","id":76},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"getValue","ownerKind":"Class","ownerName":"DirtyCheckProperty","id":77},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"setValue","ownerKind":"Class","ownerName":"DirtyCheckProperty","id":78},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"subscribe","ownerKind":"Class","ownerName":"DirtyCheckProperty","id":79},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"unsubscribe","ownerKind":"Class","ownerName":"DirtyCheckProperty","id":80},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"EventManager","id":81},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"addEventListener","ownerKind":"Class","ownerName":"EventManager","id":82},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"registerElementConfig","ownerKind":"Class","ownerName":"EventManager","id":83},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"EventSubscriber","id":84},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"dispose","ownerKind":"Class","ownerName":"EventSubscriber","id":85},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"subscribe","ownerKind":"Class","ownerName":"EventSubscriber","id":86},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"Expression","id":87},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"accept","ownerKind":"Class","ownerName":"Expression","id":88},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"assign","ownerKind":"Class","ownerName":"Expression","id":89},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"connect","ownerKind":"Class","ownerName":"Expression","id":90},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"evaluate","ownerKind":"Class","ownerName":"Expression","id":91},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"ExpressionCloner","id":92},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"LiteralPrimitive","id":93},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"value","ownerKind":"Class","ownerName":"LiteralPrimitive","id":94},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"accept","ownerKind":"Class","ownerName":"LiteralPrimitive","id":95},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"assign","ownerKind":"Class","ownerName":"LiteralPrimitive","id":96},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"connect","ownerKind":"Class","ownerName":"LiteralPrimitive","id":97},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"evaluate","ownerKind":"Class","ownerName":"LiteralPrimitive","id":98},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"LiteralString","id":99},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"value","ownerKind":"Class","ownerName":"LiteralString","id":100},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"accept","ownerKind":"Class","ownerName":"LiteralString","id":101},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"assign","ownerKind":"Class","ownerName":"LiteralString","id":102},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"connect","ownerKind":"Class","ownerName":"LiteralString","id":103},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"evaluate","ownerKind":"Class","ownerName":"LiteralString","id":104},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"ObserverLocator","id":105},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"addAdapter","ownerKind":"Class","ownerName":"ObserverLocator","id":106},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"getArrayObserver","ownerKind":"Class","ownerName":"ObserverLocator","id":107},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"getMapObserver","ownerKind":"Class","ownerName":"ObserverLocator","id":108},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"getObserver","ownerKind":"Class","ownerName":"ObserverLocator","id":109},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"Parser","id":110},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"parse","ownerKind":"Class","ownerName":"Parser","id":111},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"SelectValueObserver","id":112},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"getValue","ownerKind":"Class","ownerName":"SelectValueObserver","id":113},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"handleEvent","ownerKind":"Class","ownerName":"SelectValueObserver","id":114},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"setValue","ownerKind":"Class","ownerName":"SelectValueObserver","id":115},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"subscribe","ownerKind":"Class","ownerName":"SelectValueObserver","id":116},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"unsubscribe","ownerKind":"Class","ownerName":"SelectValueObserver","id":117},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"Unparser","id":118},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"ValueAttributeObserver","id":119},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"getValue","ownerKind":"Class","ownerName":"ValueAttributeObserver","id":120},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"handleEvent","ownerKind":"Class","ownerName":"ValueAttributeObserver","id":121},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"setValue","ownerKind":"Class","ownerName":"ValueAttributeObserver","id":122},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"subscribe","ownerKind":"Class","ownerName":"ValueAttributeObserver","id":123},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"unsubscribe","ownerKind":"Class","ownerName":"ValueAttributeObserver","id":124},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"ValueConverter","id":125},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"allArgs","ownerKind":"Class","ownerName":"ValueConverter","id":126},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"args","ownerKind":"Class","ownerName":"ValueConverter","id":127},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"expression","ownerKind":"Class","ownerName":"ValueConverter","id":128},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"name","ownerKind":"Class","ownerName":"ValueConverter","id":129},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"accept","ownerKind":"Class","ownerName":"ValueConverter","id":130},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"assign","ownerKind":"Class","ownerName":"ValueConverter","id":131},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"connect","ownerKind":"Class","ownerName":"ValueConverter","id":132},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"evaluate","ownerKind":"Class","ownerName":"ValueConverter","id":133},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Class","apiName":"ValueConverterResource","id":134},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"initialize","ownerKind":"Class","ownerName":"ValueConverterResource","id":135},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"register","ownerKind":"Class","ownerName":"ValueConverterResource","id":136},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"convention","ownerKind":"Class","ownerName":"ValueConverterResource","id":137},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"Binding","id":138},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"isBound","ownerKind":"Interface","ownerName":"Binding","id":139},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"mode","ownerKind":"Interface","ownerName":"Binding","id":140},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"source","ownerKind":"Interface","ownerName":"Binding","id":141},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"sourceExpression","ownerKind":"Interface","ownerName":"Binding","id":142},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"bind","ownerKind":"Interface","ownerName":"Binding","id":143},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"callSource","ownerKind":"Interface","ownerName":"Binding","id":144},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"unbind","ownerKind":"Interface","ownerName":"Binding","id":145},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"updateSource","ownerKind":"Interface","ownerName":"Binding","id":146},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"updateTarget","ownerKind":"Interface","ownerName":"Binding","id":147},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"BindingExpression","id":148},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"createBinding","ownerKind":"Interface","ownerName":"BindingExpression","id":149},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"CallExpression","id":150},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"createBinding","ownerKind":"Interface","ownerName":"CallExpression","id":151},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"Callable","id":152},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"call","ownerKind":"Interface","ownerName":"Callable","id":153},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"CollectionObserver","id":154},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"subscribe","ownerKind":"Interface","ownerName":"CollectionObserver","id":155},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"Disposable","id":156},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"dispose","ownerKind":"Interface","ownerName":"Disposable","id":157},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"ExpressionVisitor","id":158},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"ICollectionObserverSplice","id":159},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"addedCount","ownerKind":"Interface","ownerName":"ICollectionObserverSplice","id":160},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"index","ownerKind":"Interface","ownerName":"ICollectionObserverSplice","id":161},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"removed","ownerKind":"Interface","ownerName":"ICollectionObserverSplice","id":162},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"InternalCollectionObserver","id":163},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"subscribe","ownerKind":"Interface","ownerName":"InternalCollectionObserver","id":164},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"unsubscribe","ownerKind":"Interface","ownerName":"InternalCollectionObserver","id":165},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"InternalPropertyObserver","id":166},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"getValue","ownerKind":"Interface","ownerName":"InternalPropertyObserver","id":167},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"setValue","ownerKind":"Interface","ownerName":"InternalPropertyObserver","id":168},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"subscribe","ownerKind":"Interface","ownerName":"InternalPropertyObserver","id":169},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"unsubscribe","ownerKind":"Interface","ownerName":"InternalPropertyObserver","id":170},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"ListenerExpression","id":171},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"createBinding","ownerKind":"Interface","ownerName":"ListenerExpression","id":172},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"LookupFunctions","id":173},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"bindingBehaviors","ownerKind":"Interface","ownerName":"LookupFunctions","id":174},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"valueConverters","ownerKind":"Interface","ownerName":"LookupFunctions","id":175},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"NameExpression","id":176},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"createBinding","ownerKind":"Interface","ownerName":"NameExpression","id":177},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"ObjectObservationAdapter","id":178},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"getObserver","ownerKind":"Interface","ownerName":"ObjectObservationAdapter","id":179},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"OverrideContext","id":180},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"bindingContext","ownerKind":"Interface","ownerName":"OverrideContext","id":181},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"parentOverrideContext","ownerKind":"Interface","ownerName":"OverrideContext","id":182},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"PropertyObserver","id":183},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"subscribe","ownerKind":"Interface","ownerName":"PropertyObserver","id":184},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"SVGAnalyzer","id":185},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Method","apiName":"isStandardSvgAttribute","ownerKind":"Interface","ownerName":"SVGAnalyzer","id":186},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Interface","apiName":"Scope","id":187},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"bindingContext","ownerKind":"Interface","ownerName":"Scope","id":188},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Property","apiName":"overrideContext","ownerKind":"Interface","ownerName":"Scope","id":189},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Constant","apiName":"sourceContext","id":190},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Constant","apiName":"targetContext","id":191},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"bindingBehavior","id":192},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"camelCase","id":193},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"computedFrom","id":194},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"connectBindingToSignal","id":195},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"connectable","id":196},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"createOverrideContext","id":197},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"createScopeForTest","id":198},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"declarePropertyDependencies","id":199},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"enqueueBindingConnect","id":200},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"getChangeRecords","id":201},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"getContextFor","id":202},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"hasDeclaredDependencies","id":203},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"mergeSplice","id":204},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"observable","id":205},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"signalBindings","id":206},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"subscriberCollection","id":207},{"libraryName":"Binding","libraryHref":"docs/api/binding","apiKind":"Function","apiName":"valueConverter","id":208},{"libraryName":"Bootstrapper","libraryHref":"docs/api/bootstrapper","apiKind":"Constant","apiName":"starting","id":209},{"libraryName":"Bootstrapper","libraryHref":"docs/api/bootstrapper","apiKind":"Function","apiName":"bootstrap","id":210},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Class","apiName":"All","id":211},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"get","ownerKind":"Class","ownerName":"All","id":212},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"of","ownerKind":"Class","ownerName":"All","id":213},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Class","apiName":"Container","id":214},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Property","apiName":"parent","ownerKind":"Class","ownerName":"Container","id":215},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Property","apiName":"root","ownerKind":"Class","ownerName":"Container","id":216},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Property","apiName":"instance","ownerKind":"Class","ownerName":"Container","id":217},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"_createInvocationHandler","ownerKind":"Class","ownerName":"Container","id":218},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"_get","ownerKind":"Class","ownerName":"Container","id":219},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"autoRegister","ownerKind":"Class","ownerName":"Container","id":220},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"autoRegisterAll","ownerKind":"Class","ownerName":"Container","id":221},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"createChild","ownerKind":"Class","ownerName":"Container","id":222},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"get","ownerKind":"Class","ownerName":"Container","id":223},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"getAll","ownerKind":"Class","ownerName":"Container","id":224},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"getResolver","ownerKind":"Class","ownerName":"Container","id":225},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"hasResolver","ownerKind":"Class","ownerName":"Container","id":226},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"invoke","ownerKind":"Class","ownerName":"Container","id":227},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"makeGlobal","ownerKind":"Class","ownerName":"Container","id":228},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"registerAlias","ownerKind":"Class","ownerName":"Container","id":229},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"registerHandler","ownerKind":"Class","ownerName":"Container","id":230},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"registerInstance","ownerKind":"Class","ownerName":"Container","id":231},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"registerResolver","ownerKind":"Class","ownerName":"Container","id":232},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"registerSingleton","ownerKind":"Class","ownerName":"Container","id":233},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"registerTransient","ownerKind":"Class","ownerName":"Container","id":234},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"setHandlerCreatedCallback","ownerKind":"Class","ownerName":"Container","id":235},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"unregister","ownerKind":"Class","ownerName":"Container","id":236},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Class","apiName":"Factory","id":237},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"get","ownerKind":"Class","ownerName":"Factory","id":238},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"of","ownerKind":"Class","ownerName":"Factory","id":239},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Class","apiName":"FactoryInvoker","id":240},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Property","apiName":"instance","ownerKind":"Class","ownerName":"FactoryInvoker","id":241},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"invoke","ownerKind":"Class","ownerName":"FactoryInvoker","id":242},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"invokeWithDynamicDependencies","ownerKind":"Class","ownerName":"FactoryInvoker","id":243},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Class","apiName":"InvocationHandler","id":244},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Property","apiName":"dependencies","ownerKind":"Class","ownerName":"InvocationHandler","id":245},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Property","apiName":"fn","ownerKind":"Class","ownerName":"InvocationHandler","id":246},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Property","apiName":"invoker","ownerKind":"Class","ownerName":"InvocationHandler","id":247},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"invoke","ownerKind":"Class","ownerName":"InvocationHandler","id":248},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Class","apiName":"Lazy","id":249},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"get","ownerKind":"Class","ownerName":"Lazy","id":250},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"of","ownerKind":"Class","ownerName":"Lazy","id":251},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Class","apiName":"NewInstance","id":252},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Property","apiName":"asKey","ownerKind":"Class","ownerName":"NewInstance","id":253},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Property","apiName":"key","ownerKind":"Class","ownerName":"NewInstance","id":254},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"as","ownerKind":"Class","ownerName":"NewInstance","id":255},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"get","ownerKind":"Class","ownerName":"NewInstance","id":256},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"of","ownerKind":"Class","ownerName":"NewInstance","id":257},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Class","apiName":"Optional","id":258},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"get","ownerKind":"Class","ownerName":"Optional","id":259},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"of","ownerKind":"Class","ownerName":"Optional","id":260},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Class","apiName":"Parent","id":261},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"get","ownerKind":"Class","ownerName":"Parent","id":262},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"of","ownerKind":"Class","ownerName":"Parent","id":263},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Class","apiName":"SingletonRegistration","id":264},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"registerResolver","ownerKind":"Class","ownerName":"SingletonRegistration","id":265},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Class","apiName":"StrategyResolver","id":266},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Property","apiName":"state","ownerKind":"Class","ownerName":"StrategyResolver","id":267},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Property","apiName":"strategy","ownerKind":"Class","ownerName":"StrategyResolver","id":268},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"get","ownerKind":"Class","ownerName":"StrategyResolver","id":269},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Class","apiName":"TransientRegistration","id":270},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"registerResolver","ownerKind":"Class","ownerName":"TransientRegistration","id":271},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Interface","apiName":"ContainerConfiguration","id":272},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Property","apiName":"handlers","ownerKind":"Interface","ownerName":"ContainerConfiguration","id":273},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Property","apiName":"onHandlerCreated","ownerKind":"Interface","ownerName":"ContainerConfiguration","id":274},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Interface","apiName":"Invoker","id":275},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"invoke","ownerKind":"Interface","ownerName":"Invoker","id":276},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"invokeWithDynamicDependencies","ownerKind":"Interface","ownerName":"Invoker","id":277},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Interface","apiName":"Registration","id":278},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"registerResolver","ownerKind":"Interface","ownerName":"Registration","id":279},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Interface","apiName":"Resolver","id":280},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Method","apiName":"get","ownerKind":"Interface","ownerName":"Resolver","id":281},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Constant","apiName":"_emptyParameters","id":282},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Constant","apiName":"resolver","id":283},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Function","apiName":"all","id":284},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Function","apiName":"autoinject","id":285},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Function","apiName":"factory","id":286},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Function","apiName":"getDecoratorDependencies","id":287},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Function","apiName":"inject","id":288},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Function","apiName":"invokeAsFactory","id":289},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Function","apiName":"invoker","id":290},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Function","apiName":"lazy","id":291},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Function","apiName":"newInstance","id":292},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Function","apiName":"optional","id":293},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Function","apiName":"parent","id":294},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Function","apiName":"registration","id":295},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Function","apiName":"singleton","id":296},{"libraryName":"Dependency Injection","libraryHref":"docs/api/dependency-injection","apiKind":"Function","apiName":"transient","id":297},{"libraryName":"Event Aggregator","libraryHref":"docs/api/event-aggregator","apiKind":"Class","apiName":"EventAggregator","id":298},{"libraryName":"Event Aggregator","libraryHref":"docs/api/event-aggregator","apiKind":"Method","apiName":"publish","ownerKind":"Class","ownerName":"EventAggregator","id":299},{"libraryName":"Event Aggregator","libraryHref":"docs/api/event-aggregator","apiKind":"Method","apiName":"subscribe","ownerKind":"Class","ownerName":"EventAggregator","id":300},{"libraryName":"Event Aggregator","libraryHref":"docs/api/event-aggregator","apiKind":"Method","apiName":"subscribeOnce","ownerKind":"Class","ownerName":"EventAggregator","id":301},{"libraryName":"Event Aggregator","libraryHref":"docs/api/event-aggregator","apiKind":"Interface","apiName":"Subscription","id":302},{"libraryName":"Event Aggregator","libraryHref":"docs/api/event-aggregator","apiKind":"Method","apiName":"dispose","ownerKind":"Interface","ownerName":"Subscription","id":303},{"libraryName":"Event Aggregator","libraryHref":"docs/api/event-aggregator","apiKind":"Function","apiName":"configure","id":304},{"libraryName":"Event Aggregator","libraryHref":"docs/api/event-aggregator","apiKind":"Function","apiName":"includeEventsIn","id":305},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Class","apiName":"HttpClient","id":306},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"activeRequestCount","ownerKind":"Class","ownerName":"HttpClient","id":307},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"baseUrl","ownerKind":"Class","ownerName":"HttpClient","id":308},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"defaults","ownerKind":"Class","ownerName":"HttpClient","id":309},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"interceptors","ownerKind":"Class","ownerName":"HttpClient","id":310},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"isConfigured","ownerKind":"Class","ownerName":"HttpClient","id":311},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"isRequesting","ownerKind":"Class","ownerName":"HttpClient","id":312},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Method","apiName":"configure","ownerKind":"Class","ownerName":"HttpClient","id":313},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Method","apiName":"fetch","ownerKind":"Class","ownerName":"HttpClient","id":314},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Class","apiName":"HttpClientConfiguration","id":315},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"baseUrl","ownerKind":"Class","ownerName":"HttpClientConfiguration","id":316},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"defaults","ownerKind":"Class","ownerName":"HttpClientConfiguration","id":317},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"interceptors","ownerKind":"Class","ownerName":"HttpClientConfiguration","id":318},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Method","apiName":"rejectErrorResponses","ownerKind":"Class","ownerName":"HttpClientConfiguration","id":319},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Method","apiName":"useStandardConfiguration","ownerKind":"Class","ownerName":"HttpClientConfiguration","id":320},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Method","apiName":"withBaseUrl","ownerKind":"Class","ownerName":"HttpClientConfiguration","id":321},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Method","apiName":"withDefaults","ownerKind":"Class","ownerName":"HttpClientConfiguration","id":322},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Method","apiName":"withInterceptor","ownerKind":"Class","ownerName":"HttpClientConfiguration","id":323},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Interface","apiName":"Interceptor","id":324},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"request","ownerKind":"Interface","ownerName":"Interceptor","id":325},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"requestError","ownerKind":"Interface","ownerName":"Interceptor","id":326},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"response","ownerKind":"Interface","ownerName":"Interceptor","id":327},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"responseError","ownerKind":"Interface","ownerName":"Interceptor","id":328},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Interface","apiName":"RequestInit","id":329},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"body","ownerKind":"Interface","ownerName":"RequestInit","id":330},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"cache","ownerKind":"Interface","ownerName":"RequestInit","id":331},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"credentials","ownerKind":"Interface","ownerName":"RequestInit","id":332},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"headers","ownerKind":"Interface","ownerName":"RequestInit","id":333},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"integrity","ownerKind":"Interface","ownerName":"RequestInit","id":334},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"method","ownerKind":"Interface","ownerName":"RequestInit","id":335},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"mode","ownerKind":"Interface","ownerName":"RequestInit","id":336},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"redirect","ownerKind":"Interface","ownerName":"RequestInit","id":337},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Property","apiName":"referrer","ownerKind":"Interface","ownerName":"RequestInit","id":338},{"libraryName":"Fetch","libraryHref":"docs/api/fetch-client","apiKind":"Function","apiName":"json","id":339},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Class","apiName":"Aurelia","id":340},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Property","apiName":"container","ownerKind":"Class","ownerName":"Aurelia","id":341},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Property","apiName":"host","ownerKind":"Class","ownerName":"Aurelia","id":342},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Property","apiName":"loader","ownerKind":"Class","ownerName":"Aurelia","id":343},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Property","apiName":"resources","ownerKind":"Class","ownerName":"Aurelia","id":344},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Property","apiName":"use","ownerKind":"Class","ownerName":"Aurelia","id":345},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"enhance","ownerKind":"Class","ownerName":"Aurelia","id":346},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"setRoot","ownerKind":"Class","ownerName":"Aurelia","id":347},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"start","ownerKind":"Class","ownerName":"Aurelia","id":348},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Class","apiName":"FrameworkConfiguration","id":349},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Property","apiName":"aurelia","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":350},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Property","apiName":"container","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":351},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"apply","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":352},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"basicConfiguration","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":353},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"defaultBindingLanguage","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":354},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"defaultResources","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":355},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"developmentLogging","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":356},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"eventAggregator","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":357},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"feature","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":358},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"globalName","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":359},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"globalResources","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":360},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"history","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":361},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"instance","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":362},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"plugin","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":363},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"postTask","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":364},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"preTask","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":365},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"router","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":366},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"singleton","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":367},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"standardConfiguration","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":368},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Method","apiName":"transient","ownerKind":"Class","ownerName":"FrameworkConfiguration","id":369},{"libraryName":"Framework","libraryHref":"docs/api/framework","apiKind":"Constant","apiName":"LogManager","id":370},{"libraryName":"History","libraryHref":"docs/api/history","apiKind":"Class","apiName":"History","id":371},{"libraryName":"History","libraryHref":"docs/api/history","apiKind":"Method","apiName":"activate","ownerKind":"Class","ownerName":"History","id":372},{"libraryName":"History","libraryHref":"docs/api/history","apiKind":"Method","apiName":"deactivate","ownerKind":"Class","ownerName":"History","id":373},{"libraryName":"History","libraryHref":"docs/api/history","apiKind":"Method","apiName":"getAbsoluteRoot","ownerKind":"Class","ownerName":"History","id":374},{"libraryName":"History","libraryHref":"docs/api/history","apiKind":"Method","apiName":"getState","ownerKind":"Class","ownerName":"History","id":375},{"libraryName":"History","libraryHref":"docs/api/history","apiKind":"Method","apiName":"navigate","ownerKind":"Class","ownerName":"History","id":376},{"libraryName":"History","libraryHref":"docs/api/history","apiKind":"Method","apiName":"navigateBack","ownerKind":"Class","ownerName":"History","id":377},{"libraryName":"History","libraryHref":"docs/api/history","apiKind":"Method","apiName":"setState","ownerKind":"Class","ownerName":"History","id":378},{"libraryName":"History","libraryHref":"docs/api/history","apiKind":"Method","apiName":"setTitle","ownerKind":"Class","ownerName":"History","id":379},{"libraryName":"History","libraryHref":"docs/api/history","apiKind":"Interface","apiName":"NavigationOptions","id":380},{"libraryName":"History","libraryHref":"docs/api/history","apiKind":"Property","apiName":"replace","ownerKind":"Interface","ownerName":"NavigationOptions","id":381},{"libraryName":"History","libraryHref":"docs/api/history","apiKind":"Property","apiName":"trigger","ownerKind":"Interface","ownerName":"NavigationOptions","id":382},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Class","apiName":"BrowserHistory","id":383},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Property","apiName":"inject","ownerKind":"Class","ownerName":"BrowserHistory","id":384},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Method","apiName":"activate","ownerKind":"Class","ownerName":"BrowserHistory","id":385},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Method","apiName":"deactivate","ownerKind":"Class","ownerName":"BrowserHistory","id":386},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Method","apiName":"getAbsoluteRoot","ownerKind":"Class","ownerName":"BrowserHistory","id":387},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Method","apiName":"getState","ownerKind":"Class","ownerName":"BrowserHistory","id":388},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Method","apiName":"navigate","ownerKind":"Class","ownerName":"BrowserHistory","id":389},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Method","apiName":"navigateBack","ownerKind":"Class","ownerName":"BrowserHistory","id":390},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Method","apiName":"setState","ownerKind":"Class","ownerName":"BrowserHistory","id":391},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Method","apiName":"setTitle","ownerKind":"Class","ownerName":"BrowserHistory","id":392},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Class","apiName":"DefaultLinkHandler","id":393},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Method","apiName":"activate","ownerKind":"Class","ownerName":"DefaultLinkHandler","id":394},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Method","apiName":"deactivate","ownerKind":"Class","ownerName":"DefaultLinkHandler","id":395},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Method","apiName":"findClosestAnchor","ownerKind":"Class","ownerName":"DefaultLinkHandler","id":396},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Method","apiName":"getEventInfo","ownerKind":"Class","ownerName":"DefaultLinkHandler","id":397},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Method","apiName":"targetIsThisWindow","ownerKind":"Class","ownerName":"DefaultLinkHandler","id":398},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Class","apiName":"LinkHandler","id":399},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Method","apiName":"activate","ownerKind":"Class","ownerName":"LinkHandler","id":400},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Method","apiName":"deactivate","ownerKind":"Class","ownerName":"LinkHandler","id":401},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Interface","apiName":"AnchorEventInfo","id":402},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Property","apiName":"anchor","ownerKind":"Interface","ownerName":"AnchorEventInfo","id":403},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Property","apiName":"href","ownerKind":"Interface","ownerName":"AnchorEventInfo","id":404},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Property","apiName":"shouldHandleEvent","ownerKind":"Interface","ownerName":"AnchorEventInfo","id":405},{"libraryName":"History-Browser","libraryHref":"docs/api/history-browser","apiKind":"Function","apiName":"configure","id":406},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Class","apiName":"Backend","id":407},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Property","apiName":"loader","ownerKind":"Class","ownerName":"Backend","id":408},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"create","ownerKind":"Class","ownerName":"Backend","id":409},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"init","ownerKind":"Class","ownerName":"Backend","id":410},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"loadUrl","ownerKind":"Class","ownerName":"Backend","id":411},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"read","ownerKind":"Class","ownerName":"Backend","id":412},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"readMulti","ownerKind":"Class","ownerName":"Backend","id":413},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"with","ownerKind":"Class","ownerName":"Backend","id":414},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Class","apiName":"BaseI18N","id":415},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Property","apiName":"inject","ownerKind":"Class","ownerName":"BaseI18N","id":416},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"attached","ownerKind":"Class","ownerName":"BaseI18N","id":417},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"detached","ownerKind":"Class","ownerName":"BaseI18N","id":418},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Class","apiName":"DfBindingBehavior","id":419},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"DfBindingBehavior","id":420},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"DfBindingBehavior","id":421},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"inject","ownerKind":"Class","ownerName":"DfBindingBehavior","id":422},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Class","apiName":"DfValueConverter","id":423},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"toView","ownerKind":"Class","ownerName":"DfValueConverter","id":424},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"inject","ownerKind":"Class","ownerName":"DfValueConverter","id":425},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Class","apiName":"I18N","id":426},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Property","apiName":"ea","ownerKind":"Class","ownerName":"I18N","id":427},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Property","apiName":"globalVars","ownerKind":"Class","ownerName":"I18N","id":428},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Property","apiName":"i18next","ownerKind":"Class","ownerName":"I18N","id":429},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Property","apiName":"i18nextDefered","ownerKind":"Class","ownerName":"I18N","id":430},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Property","apiName":"params","ownerKind":"Class","ownerName":"I18N","id":431},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Property","apiName":"inject","ownerKind":"Class","ownerName":"I18N","id":432},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"df","ownerKind":"Class","ownerName":"I18N","id":433},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"getLocale","ownerKind":"Class","ownerName":"I18N","id":434},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"i18nextReady","ownerKind":"Class","ownerName":"I18N","id":435},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"nf","ownerKind":"Class","ownerName":"I18N","id":436},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"registerGlobalVariable","ownerKind":"Class","ownerName":"I18N","id":437},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"setLocale","ownerKind":"Class","ownerName":"I18N","id":438},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"setup","ownerKind":"Class","ownerName":"I18N","id":439},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"tr","ownerKind":"Class","ownerName":"I18N","id":440},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"uf","ownerKind":"Class","ownerName":"I18N","id":441},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"unregisterGlobalVariable","ownerKind":"Class","ownerName":"I18N","id":442},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"updateTranslations","ownerKind":"Class","ownerName":"I18N","id":443},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"updateValue","ownerKind":"Class","ownerName":"I18N","id":444},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Class","apiName":"LazyOptional","id":445},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"get","ownerKind":"Class","ownerName":"LazyOptional","id":446},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"of","ownerKind":"Class","ownerName":"LazyOptional","id":447},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Class","apiName":"NfBindingBehavior","id":448},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"NfBindingBehavior","id":449},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"NfBindingBehavior","id":450},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"inject","ownerKind":"Class","ownerName":"NfBindingBehavior","id":451},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Class","apiName":"NfValueConverter","id":452},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"toView","ownerKind":"Class","ownerName":"NfValueConverter","id":453},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"inject","ownerKind":"Class","ownerName":"NfValueConverter","id":454},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Class","apiName":"RelativeTime","id":455},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"addTranslationResource","ownerKind":"Class","ownerName":"RelativeTime","id":456},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"getRelativeTime","ownerKind":"Class","ownerName":"RelativeTime","id":457},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"getTimeDiffDescription","ownerKind":"Class","ownerName":"RelativeTime","id":458},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"setup","ownerKind":"Class","ownerName":"RelativeTime","id":459},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"inject","ownerKind":"Class","ownerName":"RelativeTime","id":460},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Class","apiName":"RtBindingBehavior","id":461},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"RtBindingBehavior","id":462},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"RtBindingBehavior","id":463},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"inject","ownerKind":"Class","ownerName":"RtBindingBehavior","id":464},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Class","apiName":"RtValueConverter","id":465},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"toView","ownerKind":"Class","ownerName":"RtValueConverter","id":466},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"inject","ownerKind":"Class","ownerName":"RtValueConverter","id":467},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Class","apiName":"TBindingBehavior","id":468},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Property","apiName":"inject","ownerKind":"Class","ownerName":"TBindingBehavior","id":469},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"TBindingBehavior","id":470},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"TBindingBehavior","id":471},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Class","apiName":"TCustomAttribute","id":472},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Property","apiName":"inject","ownerKind":"Class","ownerName":"TCustomAttribute","id":473},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"TCustomAttribute","id":474},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"paramsChanged","ownerKind":"Class","ownerName":"TCustomAttribute","id":475},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"TCustomAttribute","id":476},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"valueChanged","ownerKind":"Class","ownerName":"TCustomAttribute","id":477},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"configureAliases","ownerKind":"Class","ownerName":"TCustomAttribute","id":478},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Class","apiName":"TParamsCustomAttribute","id":479},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Property","apiName":"service","ownerKind":"Class","ownerName":"TParamsCustomAttribute","id":480},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Property","apiName":"inject","ownerKind":"Class","ownerName":"TParamsCustomAttribute","id":481},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"valueChanged","ownerKind":"Class","ownerName":"TParamsCustomAttribute","id":482},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"configureAliases","ownerKind":"Class","ownerName":"TParamsCustomAttribute","id":483},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Class","apiName":"TValueConverter","id":484},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"toView","ownerKind":"Class","ownerName":"TValueConverter","id":485},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Method","apiName":"inject","ownerKind":"Class","ownerName":"TValueConverter","id":486},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Constant","apiName":"assignObjectToKeys","id":487},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Constant","apiName":"extend","id":488},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Constant","apiName":"isInteger","id":489},{"libraryName":"I18N","libraryHref":"docs/api/i18n","apiKind":"Constant","apiName":"translations","id":490},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Class","apiName":"Loader","id":491},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Method","apiName":"addPlugin","ownerKind":"Class","ownerName":"Loader","id":492},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Method","apiName":"applyPluginToUrl","ownerKind":"Class","ownerName":"Loader","id":493},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Method","apiName":"getOrCreateTemplateRegistryEntry","ownerKind":"Class","ownerName":"Loader","id":494},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Method","apiName":"loadAllModules","ownerKind":"Class","ownerName":"Loader","id":495},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Method","apiName":"loadModule","ownerKind":"Class","ownerName":"Loader","id":496},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Method","apiName":"loadTemplate","ownerKind":"Class","ownerName":"Loader","id":497},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Method","apiName":"loadText","ownerKind":"Class","ownerName":"Loader","id":498},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Method","apiName":"map","ownerKind":"Class","ownerName":"Loader","id":499},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Method","apiName":"normalize","ownerKind":"Class","ownerName":"Loader","id":500},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Method","apiName":"normalizeSync","ownerKind":"Class","ownerName":"Loader","id":501},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Class","apiName":"TemplateDependency","id":502},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Property","apiName":"name","ownerKind":"Class","ownerName":"TemplateDependency","id":503},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Property","apiName":"src","ownerKind":"Class","ownerName":"TemplateDependency","id":504},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Class","apiName":"TemplateRegistryEntry","id":505},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Property","apiName":"address","ownerKind":"Class","ownerName":"TemplateRegistryEntry","id":506},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Property","apiName":"dependencies","ownerKind":"Class","ownerName":"TemplateRegistryEntry","id":507},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Property","apiName":"factory","ownerKind":"Class","ownerName":"TemplateRegistryEntry","id":508},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Property","apiName":"factoryIsReady","ownerKind":"Class","ownerName":"TemplateRegistryEntry","id":509},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Property","apiName":"resources","ownerKind":"Class","ownerName":"TemplateRegistryEntry","id":510},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Property","apiName":"template","ownerKind":"Class","ownerName":"TemplateRegistryEntry","id":511},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Property","apiName":"templateIsLoaded","ownerKind":"Class","ownerName":"TemplateRegistryEntry","id":512},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Method","apiName":"addDependency","ownerKind":"Class","ownerName":"TemplateRegistryEntry","id":513},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Interface","apiName":"LoaderPlugin","id":514},{"libraryName":"Loader","libraryHref":"docs/api/loader","apiKind":"Method","apiName":"fetch","ownerKind":"Interface","ownerName":"LoaderPlugin","id":515},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Class","apiName":"DefaultLoader","id":516},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Property","apiName":"textPluginName","ownerKind":"Class","ownerName":"DefaultLoader","id":517},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Method","apiName":"addPlugin","ownerKind":"Class","ownerName":"DefaultLoader","id":518},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Method","apiName":"applyPluginToUrl","ownerKind":"Class","ownerName":"DefaultLoader","id":519},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Method","apiName":"getOrCreateTemplateRegistryEntry","ownerKind":"Class","ownerName":"DefaultLoader","id":520},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Method","apiName":"loadAllModules","ownerKind":"Class","ownerName":"DefaultLoader","id":521},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Method","apiName":"loadModule","ownerKind":"Class","ownerName":"DefaultLoader","id":522},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Method","apiName":"loadTemplate","ownerKind":"Class","ownerName":"DefaultLoader","id":523},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Method","apiName":"loadText","ownerKind":"Class","ownerName":"DefaultLoader","id":524},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Method","apiName":"map","ownerKind":"Class","ownerName":"DefaultLoader","id":525},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Method","apiName":"normalize","ownerKind":"Class","ownerName":"DefaultLoader","id":526},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Method","apiName":"normalizeSync","ownerKind":"Class","ownerName":"DefaultLoader","id":527},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Method","apiName":"useTemplateLoader","ownerKind":"Class","ownerName":"DefaultLoader","id":528},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Class","apiName":"TextTemplateLoader","id":529},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Method","apiName":"loadTemplate","ownerKind":"Class","ownerName":"TextTemplateLoader","id":530},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Interface","apiName":"TemplateLoader","id":531},{"libraryName":"Loader-Default","libraryHref":"docs/api/loader-default","apiKind":"Method","apiName":"loadTemplate","ownerKind":"Interface","ownerName":"TemplateLoader","id":532},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Class","apiName":"Logger","id":533},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Property","apiName":"id","ownerKind":"Class","ownerName":"Logger","id":534},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Property","apiName":"level","ownerKind":"Class","ownerName":"Logger","id":535},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Method","apiName":"debug","ownerKind":"Class","ownerName":"Logger","id":536},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Method","apiName":"error","ownerKind":"Class","ownerName":"Logger","id":537},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Method","apiName":"info","ownerKind":"Class","ownerName":"Logger","id":538},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Method","apiName":"setLevel","ownerKind":"Class","ownerName":"Logger","id":539},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Method","apiName":"warn","ownerKind":"Class","ownerName":"Logger","id":540},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Interface","apiName":"Appender","id":541},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Method","apiName":"debug","ownerKind":"Interface","ownerName":"Appender","id":542},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Method","apiName":"error","ownerKind":"Interface","ownerName":"Appender","id":543},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Method","apiName":"info","ownerKind":"Interface","ownerName":"Appender","id":544},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Method","apiName":"warn","ownerKind":"Interface","ownerName":"Appender","id":545},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Interface","apiName":"LogLevel","id":546},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Property","apiName":"debug","ownerKind":"Interface","ownerName":"LogLevel","id":547},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Property","apiName":"error","ownerKind":"Interface","ownerName":"LogLevel","id":548},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Property","apiName":"info","ownerKind":"Interface","ownerName":"LogLevel","id":549},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Property","apiName":"none","ownerKind":"Interface","ownerName":"LogLevel","id":550},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Property","apiName":"warn","ownerKind":"Interface","ownerName":"LogLevel","id":551},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Constant","apiName":"logLevel","id":552},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Function","apiName":"addAppender","id":553},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Function","apiName":"addCustomLevel","id":554},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Function","apiName":"clearAppenders","id":555},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Function","apiName":"getAppenders","id":556},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Function","apiName":"getLevel","id":557},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Function","apiName":"getLogger","id":558},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Function","apiName":"removeAppender","id":559},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Function","apiName":"removeCustomLevel","id":560},{"libraryName":"Logging","libraryHref":"docs/api/logging","apiKind":"Function","apiName":"setLevel","id":561},{"libraryName":"Logging-Console","libraryHref":"docs/api/logging-console","apiKind":"Class","apiName":"ConsoleAppender","id":562},{"libraryName":"Logging-Console","libraryHref":"docs/api/logging-console","apiKind":"Method","apiName":"debug","ownerKind":"Class","ownerName":"ConsoleAppender","id":563},{"libraryName":"Logging-Console","libraryHref":"docs/api/logging-console","apiKind":"Method","apiName":"error","ownerKind":"Class","ownerName":"ConsoleAppender","id":564},{"libraryName":"Logging-Console","libraryHref":"docs/api/logging-console","apiKind":"Method","apiName":"info","ownerKind":"Class","ownerName":"ConsoleAppender","id":565},{"libraryName":"Logging-Console","libraryHref":"docs/api/logging-console","apiKind":"Method","apiName":"warn","ownerKind":"Class","ownerName":"ConsoleAppender","id":566},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Class","apiName":"Origin","id":567},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Property","apiName":"moduleId","ownerKind":"Class","ownerName":"Origin","id":568},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Property","apiName":"moduleMember","ownerKind":"Class","ownerName":"Origin","id":569},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Method","apiName":"get","ownerKind":"Class","ownerName":"Origin","id":570},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Method","apiName":"set","ownerKind":"Class","ownerName":"Origin","id":571},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Interface","apiName":"DecoratorApplicator","id":572},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Method","apiName":"on","ownerKind":"Interface","ownerName":"DecoratorApplicator","id":573},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Interface","apiName":"DeprecatedOptions","id":574},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Property","apiName":"error","ownerKind":"Interface","ownerName":"DeprecatedOptions","id":575},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Property","apiName":"message","ownerKind":"Interface","ownerName":"DeprecatedOptions","id":576},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Interface","apiName":"MetadataType","id":577},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Property","apiName":"paramTypes","ownerKind":"Interface","ownerName":"MetadataType","id":578},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Property","apiName":"properties","ownerKind":"Interface","ownerName":"MetadataType","id":579},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Property","apiName":"propertyType","ownerKind":"Interface","ownerName":"MetadataType","id":580},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Property","apiName":"resource","ownerKind":"Interface","ownerName":"MetadataType","id":581},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Method","apiName":"define","ownerKind":"Interface","ownerName":"MetadataType","id":582},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Method","apiName":"get","ownerKind":"Interface","ownerName":"MetadataType","id":583},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Method","apiName":"getOrCreateOwn","ownerKind":"Interface","ownerName":"MetadataType","id":584},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Method","apiName":"getOwn","ownerKind":"Interface","ownerName":"MetadataType","id":585},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Interface","apiName":"ProtocolOptions","id":586},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Property","apiName":"compose","ownerKind":"Interface","ownerName":"ProtocolOptions","id":587},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Property","apiName":"validate","ownerKind":"Interface","ownerName":"ProtocolOptions","id":588},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Constant","apiName":"metadata","id":589},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Function","apiName":"decorators","id":590},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Function","apiName":"deprecated","id":591},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Function","apiName":"mixin","id":592},{"libraryName":"Metadata","libraryHref":"docs/api/metadata","apiKind":"Function","apiName":"protocol","id":593},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Interface","apiName":"Dom","id":594},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"Element","ownerKind":"Interface","ownerName":"Dom","id":595},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"NodeList","ownerKind":"Interface","ownerName":"Dom","id":596},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"SVGElement","ownerKind":"Interface","ownerName":"Dom","id":597},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"activeElement","ownerKind":"Interface","ownerName":"Dom","id":598},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"boundary","ownerKind":"Interface","ownerName":"Dom","id":599},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"title","ownerKind":"Interface","ownerName":"Dom","id":600},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"addEventListener","ownerKind":"Interface","ownerName":"Dom","id":601},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"adoptNode","ownerKind":"Interface","ownerName":"Dom","id":602},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"appendNode","ownerKind":"Interface","ownerName":"Dom","id":603},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"createAttribute","ownerKind":"Interface","ownerName":"Dom","id":604},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"createComment","ownerKind":"Interface","ownerName":"Dom","id":605},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"createCustomEvent","ownerKind":"Interface","ownerName":"Dom","id":606},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"createDocumentFragment","ownerKind":"Interface","ownerName":"Dom","id":607},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"createElement","ownerKind":"Interface","ownerName":"Dom","id":608},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"createMutationObserver","ownerKind":"Interface","ownerName":"Dom","id":609},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"createTemplateElement","ownerKind":"Interface","ownerName":"Dom","id":610},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"createTemplateFromMarkup","ownerKind":"Interface","ownerName":"Dom","id":611},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"createTextNode","ownerKind":"Interface","ownerName":"Dom","id":612},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"dispatchEvent","ownerKind":"Interface","ownerName":"Dom","id":613},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"getComputedStyle","ownerKind":"Interface","ownerName":"Dom","id":614},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"getElementById","ownerKind":"Interface","ownerName":"Dom","id":615},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"injectStyles","ownerKind":"Interface","ownerName":"Dom","id":616},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"nextElementSibling","ownerKind":"Interface","ownerName":"Dom","id":617},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"querySelectorAll","ownerKind":"Interface","ownerName":"Dom","id":618},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"removeEventListener","ownerKind":"Interface","ownerName":"Dom","id":619},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"removeNode","ownerKind":"Interface","ownerName":"Dom","id":620},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"replaceNode","ownerKind":"Interface","ownerName":"Dom","id":621},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Interface","apiName":"Feature","id":622},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"htmlTemplateElement","ownerKind":"Interface","ownerName":"Feature","id":623},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"mutationObserver","ownerKind":"Interface","ownerName":"Feature","id":624},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"scopedCSS","ownerKind":"Interface","ownerName":"Feature","id":625},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"shadowDOM","ownerKind":"Interface","ownerName":"Feature","id":626},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Interface","apiName":"ModuleNameOptions","id":627},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"chunk","ownerKind":"Interface","ownerName":"ModuleNameOptions","id":628},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"exports","ownerKind":"Interface","ownerName":"ModuleNameOptions","id":629},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Interface","apiName":"Performance","id":630},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"clearMarks","ownerKind":"Interface","ownerName":"Performance","id":631},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"clearMeasures","ownerKind":"Interface","ownerName":"Performance","id":632},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"getEntriesByName","ownerKind":"Interface","ownerName":"Performance","id":633},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"getEntriesByType","ownerKind":"Interface","ownerName":"Performance","id":634},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"mark","ownerKind":"Interface","ownerName":"Performance","id":635},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"measure","ownerKind":"Interface","ownerName":"Performance","id":636},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"now","ownerKind":"Interface","ownerName":"Performance","id":637},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Interface","apiName":"Platform","id":638},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"Loader","ownerKind":"Interface","ownerName":"Platform","id":639},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"XMLHttpRequest","ownerKind":"Interface","ownerName":"Platform","id":640},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"global","ownerKind":"Interface","ownerName":"Platform","id":641},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"history","ownerKind":"Interface","ownerName":"Platform","id":642},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"location","ownerKind":"Interface","ownerName":"Platform","id":643},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"noop","ownerKind":"Interface","ownerName":"Platform","id":644},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Property","apiName":"performance","ownerKind":"Interface","ownerName":"Platform","id":645},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"addEventListener","ownerKind":"Interface","ownerName":"Platform","id":646},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"eachModule","ownerKind":"Interface","ownerName":"Platform","id":647},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"moduleName","ownerKind":"Interface","ownerName":"Platform","id":648},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"removeEventListener","ownerKind":"Interface","ownerName":"Platform","id":649},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Method","apiName":"requestAnimationFrame","ownerKind":"Interface","ownerName":"Platform","id":650},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Constant","apiName":"DOM","id":651},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Constant","apiName":"FEATURE","id":652},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Constant","apiName":"PLATFORM","id":653},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Constant","apiName":"isInitialized","id":654},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Function","apiName":"AggregateError","id":655},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Function","apiName":"initializePAL","id":656},{"libraryName":"Platform Abstraction Layer (PAL)","libraryHref":"docs/api/pal","apiKind":"Function","apiName":"reset","id":657},{"libraryName":"PAL-Browser","libraryHref":"docs/api/pal-browser","apiKind":"Function","apiName":"initialize","id":658},{"libraryName":"Path","libraryHref":"docs/api/path","apiKind":"Function","apiName":"buildQueryString","id":659},{"libraryName":"Path","libraryHref":"docs/api/path","apiKind":"Function","apiName":"join","id":660},{"libraryName":"Path","libraryHref":"docs/api/path","apiKind":"Function","apiName":"parseQueryString","id":661},{"libraryName":"Path","libraryHref":"docs/api/path","apiKind":"Function","apiName":"relativeToFile","id":662},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Class","apiName":"DynamicSegment","id":663},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"eachChar","ownerKind":"Class","ownerName":"DynamicSegment","id":664},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"generate","ownerKind":"Class","ownerName":"DynamicSegment","id":665},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"regex","ownerKind":"Class","ownerName":"DynamicSegment","id":666},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Class","apiName":"EpsilonSegment","id":667},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"eachChar","ownerKind":"Class","ownerName":"EpsilonSegment","id":668},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"generate","ownerKind":"Class","ownerName":"EpsilonSegment","id":669},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"regex","ownerKind":"Class","ownerName":"EpsilonSegment","id":670},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Class","apiName":"RouteRecognizer","id":671},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"add","ownerKind":"Class","ownerName":"RouteRecognizer","id":672},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"generate","ownerKind":"Class","ownerName":"RouteRecognizer","id":673},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"handlersFor","ownerKind":"Class","ownerName":"RouteRecognizer","id":674},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"hasRoute","ownerKind":"Class","ownerName":"RouteRecognizer","id":675},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"recognize","ownerKind":"Class","ownerName":"RouteRecognizer","id":676},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Class","apiName":"StarSegment","id":677},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"eachChar","ownerKind":"Class","ownerName":"StarSegment","id":678},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"generate","ownerKind":"Class","ownerName":"StarSegment","id":679},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"regex","ownerKind":"Class","ownerName":"StarSegment","id":680},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Class","apiName":"State","id":681},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"get","ownerKind":"Class","ownerName":"State","id":682},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"match","ownerKind":"Class","ownerName":"State","id":683},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"put","ownerKind":"Class","ownerName":"State","id":684},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Class","apiName":"StaticSegment","id":685},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"eachChar","ownerKind":"Class","ownerName":"StaticSegment","id":686},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"generate","ownerKind":"Class","ownerName":"StaticSegment","id":687},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Method","apiName":"regex","ownerKind":"Class","ownerName":"StaticSegment","id":688},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Interface","apiName":"CharSpec","id":689},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Property","apiName":"invalidChars","ownerKind":"Interface","ownerName":"CharSpec","id":690},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Property","apiName":"repeat","ownerKind":"Interface","ownerName":"CharSpec","id":691},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Property","apiName":"validChars","ownerKind":"Interface","ownerName":"CharSpec","id":692},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Interface","apiName":"ConfigurableRoute","id":693},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Property","apiName":"caseSensitive","ownerKind":"Interface","ownerName":"ConfigurableRoute","id":694},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Property","apiName":"handler","ownerKind":"Interface","ownerName":"ConfigurableRoute","id":695},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Property","apiName":"path","ownerKind":"Interface","ownerName":"ConfigurableRoute","id":696},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Interface","apiName":"HandlerEntry","id":697},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Property","apiName":"handler","ownerKind":"Interface","ownerName":"HandlerEntry","id":698},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Property","apiName":"names","ownerKind":"Interface","ownerName":"HandlerEntry","id":699},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Interface","apiName":"RecognizedRoute","id":700},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Property","apiName":"handler","ownerKind":"Interface","ownerName":"RecognizedRoute","id":701},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Property","apiName":"isDynamic","ownerKind":"Interface","ownerName":"RecognizedRoute","id":702},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Property","apiName":"params","ownerKind":"Interface","ownerName":"RecognizedRoute","id":703},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Interface","apiName":"RouteHandler","id":704},{"libraryName":"Route Recognizer","libraryHref":"docs/api/route-recognizer","apiKind":"Property","apiName":"name","ownerKind":"Interface","ownerName":"RouteHandler","id":705},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"ActivateNextStep","id":706},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"run","ownerKind":"Class","ownerName":"ActivateNextStep","id":707},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"AppRouter","id":708},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"baseUrl","ownerKind":"Class","ownerName":"AppRouter","id":709},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"container","ownerKind":"Class","ownerName":"AppRouter","id":710},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"currentInstruction","ownerKind":"Class","ownerName":"AppRouter","id":711},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"currentNavigationTracker","ownerKind":"Class","ownerName":"AppRouter","id":712},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"history","ownerKind":"Class","ownerName":"AppRouter","id":713},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isConfigured","ownerKind":"Class","ownerName":"AppRouter","id":714},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isExplicitNavigation","ownerKind":"Class","ownerName":"AppRouter","id":715},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isExplicitNavigationBack","ownerKind":"Class","ownerName":"AppRouter","id":716},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isNavigating","ownerKind":"Class","ownerName":"AppRouter","id":717},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isNavigatingBack","ownerKind":"Class","ownerName":"AppRouter","id":718},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isNavigatingFirst","ownerKind":"Class","ownerName":"AppRouter","id":719},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isNavigatingForward","ownerKind":"Class","ownerName":"AppRouter","id":720},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isNavigatingNew","ownerKind":"Class","ownerName":"AppRouter","id":721},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isNavigatingRefresh","ownerKind":"Class","ownerName":"AppRouter","id":722},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isRoot","ownerKind":"Class","ownerName":"AppRouter","id":723},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"navigation","ownerKind":"Class","ownerName":"AppRouter","id":724},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"options","ownerKind":"Class","ownerName":"AppRouter","id":725},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"parent","ownerKind":"Class","ownerName":"AppRouter","id":726},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"routes","ownerKind":"Class","ownerName":"AppRouter","id":727},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"transformTitle","ownerKind":"Class","ownerName":"AppRouter","id":728},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"viewPortDefaults","ownerKind":"Class","ownerName":"AppRouter","id":729},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"viewPorts","ownerKind":"Class","ownerName":"AppRouter","id":730},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"activate","ownerKind":"Class","ownerName":"AppRouter","id":731},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"addRoute","ownerKind":"Class","ownerName":"AppRouter","id":732},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"configure","ownerKind":"Class","ownerName":"AppRouter","id":733},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"createChild","ownerKind":"Class","ownerName":"AppRouter","id":734},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"createNavModel","ownerKind":"Class","ownerName":"AppRouter","id":735},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"deactivate","ownerKind":"Class","ownerName":"AppRouter","id":736},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"ensureConfigured","ownerKind":"Class","ownerName":"AppRouter","id":737},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"generate","ownerKind":"Class","ownerName":"AppRouter","id":738},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"handleUnknownRoutes","ownerKind":"Class","ownerName":"AppRouter","id":739},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"hasOwnRoute","ownerKind":"Class","ownerName":"AppRouter","id":740},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"hasRoute","ownerKind":"Class","ownerName":"AppRouter","id":741},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"loadUrl","ownerKind":"Class","ownerName":"AppRouter","id":742},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"navigate","ownerKind":"Class","ownerName":"AppRouter","id":743},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"navigateBack","ownerKind":"Class","ownerName":"AppRouter","id":744},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"navigateToRoute","ownerKind":"Class","ownerName":"AppRouter","id":745},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"refreshNavigation","ownerKind":"Class","ownerName":"AppRouter","id":746},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"registerViewPort","ownerKind":"Class","ownerName":"AppRouter","id":747},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"reset","ownerKind":"Class","ownerName":"AppRouter","id":748},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"updateTitle","ownerKind":"Class","ownerName":"AppRouter","id":749},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"useViewPortDefaults","ownerKind":"Class","ownerName":"AppRouter","id":750},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"inject","ownerKind":"Class","ownerName":"AppRouter","id":751},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"BuildNavigationPlanStep","id":752},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"run","ownerKind":"Class","ownerName":"BuildNavigationPlanStep","id":753},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"CanActivateNextStep","id":754},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"run","ownerKind":"Class","ownerName":"CanActivateNextStep","id":755},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"CanDeactivatePreviousStep","id":756},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"run","ownerKind":"Class","ownerName":"CanDeactivatePreviousStep","id":757},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"CommitChangesStep","id":758},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"run","ownerKind":"Class","ownerName":"CommitChangesStep","id":759},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"DeactivatePreviousStep","id":760},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"run","ownerKind":"Class","ownerName":"DeactivatePreviousStep","id":761},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"LoadRouteStep","id":762},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"run","ownerKind":"Class","ownerName":"LoadRouteStep","id":763},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"inject","ownerKind":"Class","ownerName":"LoadRouteStep","id":764},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"NavModel","id":765},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"config","ownerKind":"Class","ownerName":"NavModel","id":766},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"href","ownerKind":"Class","ownerName":"NavModel","id":767},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isActive","ownerKind":"Class","ownerName":"NavModel","id":768},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"relativeHref","ownerKind":"Class","ownerName":"NavModel","id":769},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"router","ownerKind":"Class","ownerName":"NavModel","id":770},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"settings","ownerKind":"Class","ownerName":"NavModel","id":771},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"title","ownerKind":"Class","ownerName":"NavModel","id":772},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"setTitle","ownerKind":"Class","ownerName":"NavModel","id":773},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"NavigationInstruction","id":774},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"config","ownerKind":"Class","ownerName":"NavigationInstruction","id":775},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"fragment","ownerKind":"Class","ownerName":"NavigationInstruction","id":776},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"options","ownerKind":"Class","ownerName":"NavigationInstruction","id":777},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"params","ownerKind":"Class","ownerName":"NavigationInstruction","id":778},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"parentInstruction","ownerKind":"Class","ownerName":"NavigationInstruction","id":779},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"plan","ownerKind":"Class","ownerName":"NavigationInstruction","id":780},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"previousInstruction","ownerKind":"Class","ownerName":"NavigationInstruction","id":781},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"queryParams","ownerKind":"Class","ownerName":"NavigationInstruction","id":782},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"queryString","ownerKind":"Class","ownerName":"NavigationInstruction","id":783},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"router","ownerKind":"Class","ownerName":"NavigationInstruction","id":784},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"viewPortInstructions","ownerKind":"Class","ownerName":"NavigationInstruction","id":785},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"addViewPortInstruction","ownerKind":"Class","ownerName":"NavigationInstruction","id":786},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"getAllInstructions","ownerKind":"Class","ownerName":"NavigationInstruction","id":787},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"getAllPreviousInstructions","ownerKind":"Class","ownerName":"NavigationInstruction","id":788},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"getBaseUrl","ownerKind":"Class","ownerName":"NavigationInstruction","id":789},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"getWildCardName","ownerKind":"Class","ownerName":"NavigationInstruction","id":790},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"getWildcardPath","ownerKind":"Class","ownerName":"NavigationInstruction","id":791},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"Pipeline","id":792},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"steps","ownerKind":"Class","ownerName":"Pipeline","id":793},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"addStep","ownerKind":"Class","ownerName":"Pipeline","id":794},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"run","ownerKind":"Class","ownerName":"Pipeline","id":795},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"PipelineProvider","id":796},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"addStep","ownerKind":"Class","ownerName":"PipelineProvider","id":797},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"createPipeline","ownerKind":"Class","ownerName":"PipelineProvider","id":798},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"removeStep","ownerKind":"Class","ownerName":"PipelineProvider","id":799},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"reset","ownerKind":"Class","ownerName":"PipelineProvider","id":800},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"inject","ownerKind":"Class","ownerName":"PipelineProvider","id":801},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"Redirect","id":802},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"navigate","ownerKind":"Class","ownerName":"Redirect","id":803},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"setRouter","ownerKind":"Class","ownerName":"Redirect","id":804},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"RedirectToRoute","id":805},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"navigate","ownerKind":"Class","ownerName":"RedirectToRoute","id":806},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"setRouter","ownerKind":"Class","ownerName":"RedirectToRoute","id":807},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"RouteLoader","id":808},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"loadRoute","ownerKind":"Class","ownerName":"RouteLoader","id":809},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"Router","id":810},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"baseUrl","ownerKind":"Class","ownerName":"Router","id":811},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"container","ownerKind":"Class","ownerName":"Router","id":812},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"currentInstruction","ownerKind":"Class","ownerName":"Router","id":813},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"currentNavigationTracker","ownerKind":"Class","ownerName":"Router","id":814},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"history","ownerKind":"Class","ownerName":"Router","id":815},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isConfigured","ownerKind":"Class","ownerName":"Router","id":816},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isExplicitNavigation","ownerKind":"Class","ownerName":"Router","id":817},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isExplicitNavigationBack","ownerKind":"Class","ownerName":"Router","id":818},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isNavigating","ownerKind":"Class","ownerName":"Router","id":819},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isNavigatingBack","ownerKind":"Class","ownerName":"Router","id":820},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isNavigatingFirst","ownerKind":"Class","ownerName":"Router","id":821},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isNavigatingForward","ownerKind":"Class","ownerName":"Router","id":822},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isNavigatingNew","ownerKind":"Class","ownerName":"Router","id":823},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isNavigatingRefresh","ownerKind":"Class","ownerName":"Router","id":824},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"isRoot","ownerKind":"Class","ownerName":"Router","id":825},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"navigation","ownerKind":"Class","ownerName":"Router","id":826},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"options","ownerKind":"Class","ownerName":"Router","id":827},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"parent","ownerKind":"Class","ownerName":"Router","id":828},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"routes","ownerKind":"Class","ownerName":"Router","id":829},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"transformTitle","ownerKind":"Class","ownerName":"Router","id":830},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"viewPortDefaults","ownerKind":"Class","ownerName":"Router","id":831},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"viewPorts","ownerKind":"Class","ownerName":"Router","id":832},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"addRoute","ownerKind":"Class","ownerName":"Router","id":833},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"configure","ownerKind":"Class","ownerName":"Router","id":834},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"createChild","ownerKind":"Class","ownerName":"Router","id":835},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"createNavModel","ownerKind":"Class","ownerName":"Router","id":836},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"ensureConfigured","ownerKind":"Class","ownerName":"Router","id":837},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"generate","ownerKind":"Class","ownerName":"Router","id":838},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"handleUnknownRoutes","ownerKind":"Class","ownerName":"Router","id":839},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"hasOwnRoute","ownerKind":"Class","ownerName":"Router","id":840},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"hasRoute","ownerKind":"Class","ownerName":"Router","id":841},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"navigate","ownerKind":"Class","ownerName":"Router","id":842},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"navigateBack","ownerKind":"Class","ownerName":"Router","id":843},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"navigateToRoute","ownerKind":"Class","ownerName":"Router","id":844},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"refreshNavigation","ownerKind":"Class","ownerName":"Router","id":845},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"registerViewPort","ownerKind":"Class","ownerName":"Router","id":846},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"reset","ownerKind":"Class","ownerName":"Router","id":847},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"updateTitle","ownerKind":"Class","ownerName":"Router","id":848},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"useViewPortDefaults","ownerKind":"Class","ownerName":"Router","id":849},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Class","apiName":"RouterConfiguration","id":850},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"instructions","ownerKind":"Class","ownerName":"RouterConfiguration","id":851},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"options","ownerKind":"Class","ownerName":"RouterConfiguration","id":852},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"pipelineSteps","ownerKind":"Class","ownerName":"RouterConfiguration","id":853},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"title","ownerKind":"Class","ownerName":"RouterConfiguration","id":854},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"unknownRouteConfig","ownerKind":"Class","ownerName":"RouterConfiguration","id":855},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"viewPortDefaults","ownerKind":"Class","ownerName":"RouterConfiguration","id":856},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"addAuthorizeStep","ownerKind":"Class","ownerName":"RouterConfiguration","id":857},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"addPipelineStep","ownerKind":"Class","ownerName":"RouterConfiguration","id":858},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"addPostRenderStep","ownerKind":"Class","ownerName":"RouterConfiguration","id":859},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"addPreActivateStep","ownerKind":"Class","ownerName":"RouterConfiguration","id":860},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"addPreRenderStep","ownerKind":"Class","ownerName":"RouterConfiguration","id":861},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"exportToRouter","ownerKind":"Class","ownerName":"RouterConfiguration","id":862},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"fallbackRoute","ownerKind":"Class","ownerName":"RouterConfiguration","id":863},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"map","ownerKind":"Class","ownerName":"RouterConfiguration","id":864},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"mapRoute","ownerKind":"Class","ownerName":"RouterConfiguration","id":865},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"mapUnknownRoutes","ownerKind":"Class","ownerName":"RouterConfiguration","id":866},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"useViewPortDefaults","ownerKind":"Class","ownerName":"RouterConfiguration","id":867},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Interface","apiName":"ActivationStrategy","id":868},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"invokeLifecycle","ownerKind":"Interface","ownerName":"ActivationStrategy","id":869},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"noChange","ownerKind":"Interface","ownerName":"ActivationStrategy","id":870},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"replace","ownerKind":"Interface","ownerName":"ActivationStrategy","id":871},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Interface","apiName":"ConfiguresRouter","id":872},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"configureRouter","ownerKind":"Interface","ownerName":"ConfiguresRouter","id":873},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Interface","apiName":"IObservable","id":874},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"subscribe","ownerKind":"Interface","ownerName":"IObservable","id":875},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Interface","apiName":"ISubscription","id":876},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"unsubscribe","ownerKind":"Interface","ownerName":"ISubscription","id":877},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Interface","apiName":"NavigationCommand","id":878},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"navigate","ownerKind":"Interface","ownerName":"NavigationCommand","id":879},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Interface","apiName":"NavigationInstructionInit","id":880},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"config","ownerKind":"Interface","ownerName":"NavigationInstructionInit","id":881},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"fragment","ownerKind":"Interface","ownerName":"NavigationInstructionInit","id":882},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"options","ownerKind":"Interface","ownerName":"NavigationInstructionInit","id":883},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"params","ownerKind":"Interface","ownerName":"NavigationInstructionInit","id":884},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"parentInstruction","ownerKind":"Interface","ownerName":"NavigationInstructionInit","id":885},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"previousInstruction","ownerKind":"Interface","ownerName":"NavigationInstructionInit","id":886},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"queryParams","ownerKind":"Interface","ownerName":"NavigationInstructionInit","id":887},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"queryString","ownerKind":"Interface","ownerName":"NavigationInstructionInit","id":888},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"router","ownerKind":"Interface","ownerName":"NavigationInstructionInit","id":889},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Interface","apiName":"Next","id":890},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"cancel","ownerKind":"Interface","ownerName":"Next","id":891},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"complete","ownerKind":"Interface","ownerName":"Next","id":892},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"reject","ownerKind":"Interface","ownerName":"Next","id":893},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Interface","apiName":"PipelineResult","id":894},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"completed","ownerKind":"Interface","ownerName":"PipelineResult","id":895},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"instruction","ownerKind":"Interface","ownerName":"PipelineResult","id":896},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"output","ownerKind":"Interface","ownerName":"PipelineResult","id":897},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"status","ownerKind":"Interface","ownerName":"PipelineResult","id":898},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Interface","apiName":"PipelineStep","id":899},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"run","ownerKind":"Interface","ownerName":"PipelineStep","id":900},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Interface","apiName":"RoutableComponentActivate","id":901},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"activate","ownerKind":"Interface","ownerName":"RoutableComponentActivate","id":902},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Interface","apiName":"RoutableComponentCanActivate","id":903},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"canActivate","ownerKind":"Interface","ownerName":"RoutableComponentCanActivate","id":904},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Interface","apiName":"RoutableComponentCanDeactivate","id":905},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"canDeactivate","ownerKind":"Interface","ownerName":"RoutableComponentCanDeactivate","id":906},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Interface","apiName":"RoutableComponentDeactivate","id":907},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"deactivate","ownerKind":"Interface","ownerName":"RoutableComponentDeactivate","id":908},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Interface","apiName":"RoutableComponentDetermineActivationStrategy","id":909},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Method","apiName":"determineActivationStrategy","ownerKind":"Interface","ownerName":"RoutableComponentDetermineActivationStrategy","id":910},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Interface","apiName":"RouteConfig","id":911},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"activationStrategy","ownerKind":"Interface","ownerName":"RouteConfig","id":912},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"caseSensitive","ownerKind":"Interface","ownerName":"RouteConfig","id":913},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"generationUsesHref","ownerKind":"Interface","ownerName":"RouteConfig","id":914},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"href","ownerKind":"Interface","ownerName":"RouteConfig","id":915},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"layoutModel","ownerKind":"Interface","ownerName":"RouteConfig","id":916},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"layoutView","ownerKind":"Interface","ownerName":"RouteConfig","id":917},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"layoutViewModel","ownerKind":"Interface","ownerName":"RouteConfig","id":918},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"moduleId","ownerKind":"Interface","ownerName":"RouteConfig","id":919},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"name","ownerKind":"Interface","ownerName":"RouteConfig","id":920},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"nav","ownerKind":"Interface","ownerName":"RouteConfig","id":921},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"navModel","ownerKind":"Interface","ownerName":"RouteConfig","id":922},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"navigationStrategy","ownerKind":"Interface","ownerName":"RouteConfig","id":923},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"redirect","ownerKind":"Interface","ownerName":"RouteConfig","id":924},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"route","ownerKind":"Interface","ownerName":"RouteConfig","id":925},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"settings","ownerKind":"Interface","ownerName":"RouteConfig","id":926},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"title","ownerKind":"Interface","ownerName":"RouteConfig","id":927},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Property","apiName":"viewPorts","ownerKind":"Interface","ownerName":"RouteConfig","id":928},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Constant","apiName":"activationStrategy","id":929},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Constant","apiName":"pipelineStatus","id":930},{"libraryName":"Router","libraryHref":"docs/api/router","apiKind":"Function","apiName":"isNavigationCommand","id":931},{"libraryName":"Task Queue","libraryHref":"docs/api/task-queue","apiKind":"Class","apiName":"TaskQueue","id":932},{"libraryName":"Task Queue","libraryHref":"docs/api/task-queue","apiKind":"Property","apiName":"flushing","ownerKind":"Class","ownerName":"TaskQueue","id":933},{"libraryName":"Task Queue","libraryHref":"docs/api/task-queue","apiKind":"Property","apiName":"longStacks","ownerKind":"Class","ownerName":"TaskQueue","id":934},{"libraryName":"Task Queue","libraryHref":"docs/api/task-queue","apiKind":"Method","apiName":"flushMicroTaskQueue","ownerKind":"Class","ownerName":"TaskQueue","id":935},{"libraryName":"Task Queue","libraryHref":"docs/api/task-queue","apiKind":"Method","apiName":"flushTaskQueue","ownerKind":"Class","ownerName":"TaskQueue","id":936},{"libraryName":"Task Queue","libraryHref":"docs/api/task-queue","apiKind":"Method","apiName":"prepareQueueStack","ownerKind":"Class","ownerName":"TaskQueue","id":937},{"libraryName":"Task Queue","libraryHref":"docs/api/task-queue","apiKind":"Method","apiName":"queueMicroTask","ownerKind":"Class","ownerName":"TaskQueue","id":938},{"libraryName":"Task Queue","libraryHref":"docs/api/task-queue","apiKind":"Method","apiName":"queueTask","ownerKind":"Class","ownerName":"TaskQueue","id":939},{"libraryName":"Task Queue","libraryHref":"docs/api/task-queue","apiKind":"Interface","apiName":"Task","id":940},{"libraryName":"Task Queue","libraryHref":"docs/api/task-queue","apiKind":"Method","apiName":"call","ownerKind":"Interface","ownerName":"Task","id":941},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"Animator","id":942},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"addClass","ownerKind":"Class","ownerName":"Animator","id":943},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"animate","ownerKind":"Class","ownerName":"Animator","id":944},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"enter","ownerKind":"Class","ownerName":"Animator","id":945},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"leave","ownerKind":"Class","ownerName":"Animator","id":946},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"registerEffect","ownerKind":"Class","ownerName":"Animator","id":947},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"removeClass","ownerKind":"Class","ownerName":"Animator","id":948},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"runSequence","ownerKind":"Class","ownerName":"Animator","id":949},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"unregisterEffect","ownerKind":"Class","ownerName":"Animator","id":950},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"BehaviorInstruction","id":951},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"anchorIsContainer","ownerKind":"Class","ownerName":"BehaviorInstruction","id":952},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"attrName","ownerKind":"Class","ownerName":"BehaviorInstruction","id":953},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"attributes","ownerKind":"Class","ownerName":"BehaviorInstruction","id":954},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"contentFactory","ownerKind":"Class","ownerName":"BehaviorInstruction","id":955},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"enhance","ownerKind":"Class","ownerName":"BehaviorInstruction","id":956},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"host","ownerKind":"Class","ownerName":"BehaviorInstruction","id":957},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"inheritBindingContext","ownerKind":"Class","ownerName":"BehaviorInstruction","id":958},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"initiatedByBehavior","ownerKind":"Class","ownerName":"BehaviorInstruction","id":959},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"originalAttrName","ownerKind":"Class","ownerName":"BehaviorInstruction","id":960},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"partReplacements","ownerKind":"Class","ownerName":"BehaviorInstruction","id":961},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"skipContentProcessing","ownerKind":"Class","ownerName":"BehaviorInstruction","id":962},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"type","ownerKind":"Class","ownerName":"BehaviorInstruction","id":963},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"viewFactory","ownerKind":"Class","ownerName":"BehaviorInstruction","id":964},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"viewModel","ownerKind":"Class","ownerName":"BehaviorInstruction","id":965},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"normal","ownerKind":"Class","ownerName":"BehaviorInstruction","id":966},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"attribute","ownerKind":"Class","ownerName":"BehaviorInstruction","id":967},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"dynamic","ownerKind":"Class","ownerName":"BehaviorInstruction","id":968},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"element","ownerKind":"Class","ownerName":"BehaviorInstruction","id":969},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"enhance","ownerKind":"Class","ownerName":"BehaviorInstruction","id":970},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"unitTest","ownerKind":"Class","ownerName":"BehaviorInstruction","id":971},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"BehaviorPropertyObserver","id":972},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"call","ownerKind":"Class","ownerName":"BehaviorPropertyObserver","id":973},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"getValue","ownerKind":"Class","ownerName":"BehaviorPropertyObserver","id":974},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"setValue","ownerKind":"Class","ownerName":"BehaviorPropertyObserver","id":975},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"subscribe","ownerKind":"Class","ownerName":"BehaviorPropertyObserver","id":976},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"unsubscribe","ownerKind":"Class","ownerName":"BehaviorPropertyObserver","id":977},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"BindableProperty","id":978},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"createObserver","ownerKind":"Class","ownerName":"BindableProperty","id":979},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"defineOn","ownerKind":"Class","ownerName":"BindableProperty","id":980},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"registerWith","ownerKind":"Class","ownerName":"BindableProperty","id":981},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"BindingLanguage","id":982},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"createAttributeInstruction","ownerKind":"Class","ownerName":"BindingLanguage","id":983},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"inspectAttribute","ownerKind":"Class","ownerName":"BindingLanguage","id":984},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"inspectTextContent","ownerKind":"Class","ownerName":"BindingLanguage","id":985},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"BoundViewFactory","id":986},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"isCaching","ownerKind":"Class","ownerName":"BoundViewFactory","id":987},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"create","ownerKind":"Class","ownerName":"BoundViewFactory","id":988},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"getCachedView","ownerKind":"Class","ownerName":"BoundViewFactory","id":989},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"returnViewToCache","ownerKind":"Class","ownerName":"BoundViewFactory","id":990},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"setCacheSize","ownerKind":"Class","ownerName":"BoundViewFactory","id":991},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"CompositionEngine","id":992},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"compose","ownerKind":"Class","ownerName":"CompositionEngine","id":993},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"createController","ownerKind":"Class","ownerName":"CompositionEngine","id":994},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"ensureViewModel","ownerKind":"Class","ownerName":"CompositionEngine","id":995},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"CompositionTransaction","id":996},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"enlist","ownerKind":"Class","ownerName":"CompositionTransaction","id":997},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"tryCapture","ownerKind":"Class","ownerName":"CompositionTransaction","id":998},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"CompositionTransactionNotifier","id":999},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"done","ownerKind":"Class","ownerName":"CompositionTransactionNotifier","id":1000},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"CompositionTransactionOwnershipToken","id":1001},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"resolve","ownerKind":"Class","ownerName":"CompositionTransactionOwnershipToken","id":1002},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"waitForCompositionComplete","ownerKind":"Class","ownerName":"CompositionTransactionOwnershipToken","id":1003},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"Controller","id":1004},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"behavior","ownerKind":"Class","ownerName":"Controller","id":1005},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"view","ownerKind":"Class","ownerName":"Controller","id":1006},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"viewModel","ownerKind":"Class","ownerName":"Controller","id":1007},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"attached","ownerKind":"Class","ownerName":"Controller","id":1008},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"automate","ownerKind":"Class","ownerName":"Controller","id":1009},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"Controller","id":1010},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"created","ownerKind":"Class","ownerName":"Controller","id":1011},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"detached","ownerKind":"Class","ownerName":"Controller","id":1012},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"Controller","id":1013},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ConventionalViewStrategy","id":1014},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"loadViewFactory","ownerKind":"Class","ownerName":"ConventionalViewStrategy","id":1015},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ElementConfigResource","id":1016},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"initialize","ownerKind":"Class","ownerName":"ElementConfigResource","id":1017},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"load","ownerKind":"Class","ownerName":"ElementConfigResource","id":1018},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"register","ownerKind":"Class","ownerName":"ElementConfigResource","id":1019},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ElementEvents","id":1020},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"dispose","ownerKind":"Class","ownerName":"ElementEvents","id":1021},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"disposeAll","ownerKind":"Class","ownerName":"ElementEvents","id":1022},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"publish","ownerKind":"Class","ownerName":"ElementEvents","id":1023},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"subscribe","ownerKind":"Class","ownerName":"ElementEvents","id":1024},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"subscribeOnce","ownerKind":"Class","ownerName":"ElementEvents","id":1025},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"HtmlBehaviorResource","id":1026},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"addChildBinding","ownerKind":"Class","ownerName":"HtmlBehaviorResource","id":1027},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"compile","ownerKind":"Class","ownerName":"HtmlBehaviorResource","id":1028},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"create","ownerKind":"Class","ownerName":"HtmlBehaviorResource","id":1029},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"initialize","ownerKind":"Class","ownerName":"HtmlBehaviorResource","id":1030},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"load","ownerKind":"Class","ownerName":"HtmlBehaviorResource","id":1031},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"register","ownerKind":"Class","ownerName":"HtmlBehaviorResource","id":1032},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"convention","ownerKind":"Class","ownerName":"HtmlBehaviorResource","id":1033},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"InlineViewStrategy","id":1034},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"loadViewFactory","ownerKind":"Class","ownerName":"InlineViewStrategy","id":1035},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ModuleAnalyzer","id":1036},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"analyze","ownerKind":"Class","ownerName":"ModuleAnalyzer","id":1037},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"getAnalysis","ownerKind":"Class","ownerName":"ModuleAnalyzer","id":1038},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"NoViewStrategy","id":1039},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"loadViewFactory","ownerKind":"Class","ownerName":"NoViewStrategy","id":1040},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"PassThroughSlot","id":1041},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"needsFallbackRendering","ownerKind":"Class","ownerName":"PassThroughSlot","id":1042},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"addNode","ownerKind":"Class","ownerName":"PassThroughSlot","id":1043},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"attached","ownerKind":"Class","ownerName":"PassThroughSlot","id":1044},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"PassThroughSlot","id":1045},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"created","ownerKind":"Class","ownerName":"PassThroughSlot","id":1046},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"detached","ownerKind":"Class","ownerName":"PassThroughSlot","id":1047},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"passThroughTo","ownerKind":"Class","ownerName":"PassThroughSlot","id":1048},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"projectFrom","ownerKind":"Class","ownerName":"PassThroughSlot","id":1049},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"removeAll","ownerKind":"Class","ownerName":"PassThroughSlot","id":1050},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"removeView","ownerKind":"Class","ownerName":"PassThroughSlot","id":1051},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"renderFallbackContent","ownerKind":"Class","ownerName":"PassThroughSlot","id":1052},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"PassThroughSlot","id":1053},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"RelativeViewStrategy","id":1054},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"loadViewFactory","ownerKind":"Class","ownerName":"RelativeViewStrategy","id":1055},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"makeRelativeTo","ownerKind":"Class","ownerName":"RelativeViewStrategy","id":1056},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ResourceDescription","id":1057},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"initialize","ownerKind":"Class","ownerName":"ResourceDescription","id":1058},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"load","ownerKind":"Class","ownerName":"ResourceDescription","id":1059},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"register","ownerKind":"Class","ownerName":"ResourceDescription","id":1060},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ResourceLoadContext","id":1061},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"dependencies","ownerKind":"Class","ownerName":"ResourceLoadContext","id":1062},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"addDependency","ownerKind":"Class","ownerName":"ResourceLoadContext","id":1063},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"hasDependency","ownerKind":"Class","ownerName":"ResourceLoadContext","id":1064},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ResourceModule","id":1065},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"initialize","ownerKind":"Class","ownerName":"ResourceModule","id":1066},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"load","ownerKind":"Class","ownerName":"ResourceModule","id":1067},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"register","ownerKind":"Class","ownerName":"ResourceModule","id":1068},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ShadowDOM","id":1069},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"defaultSlotKey","ownerKind":"Class","ownerName":"ShadowDOM","id":1070},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"distributeNodes","ownerKind":"Class","ownerName":"ShadowDOM","id":1071},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"distributeView","ownerKind":"Class","ownerName":"ShadowDOM","id":1072},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"getSlotName","ownerKind":"Class","ownerName":"ShadowDOM","id":1073},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"undistributeAll","ownerKind":"Class","ownerName":"ShadowDOM","id":1074},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"undistributeView","ownerKind":"Class","ownerName":"ShadowDOM","id":1075},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ShadowSlot","id":1076},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"needsFallbackRendering","ownerKind":"Class","ownerName":"ShadowSlot","id":1077},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"addNode","ownerKind":"Class","ownerName":"ShadowSlot","id":1078},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"attached","ownerKind":"Class","ownerName":"ShadowSlot","id":1079},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"ShadowSlot","id":1080},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"created","ownerKind":"Class","ownerName":"ShadowSlot","id":1081},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"detached","ownerKind":"Class","ownerName":"ShadowSlot","id":1082},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"projectFrom","ownerKind":"Class","ownerName":"ShadowSlot","id":1083},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"projectTo","ownerKind":"Class","ownerName":"ShadowSlot","id":1084},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"removeAll","ownerKind":"Class","ownerName":"ShadowSlot","id":1085},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"removeView","ownerKind":"Class","ownerName":"ShadowSlot","id":1086},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"renderFallbackContent","ownerKind":"Class","ownerName":"ShadowSlot","id":1087},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"ShadowSlot","id":1088},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"SlotCustomAttribute","id":1089},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"valueChanged","ownerKind":"Class","ownerName":"SlotCustomAttribute","id":1090},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"TargetInstruction","id":1091},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"anchorIsContainer","ownerKind":"Class","ownerName":"TargetInstruction","id":1092},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"behaviorInstructions","ownerKind":"Class","ownerName":"TargetInstruction","id":1093},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"contentExpression","ownerKind":"Class","ownerName":"TargetInstruction","id":1094},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"elementInstruction","ownerKind":"Class","ownerName":"TargetInstruction","id":1095},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"expressions","ownerKind":"Class","ownerName":"TargetInstruction","id":1096},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"injectorId","ownerKind":"Class","ownerName":"TargetInstruction","id":1097},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"lifting","ownerKind":"Class","ownerName":"TargetInstruction","id":1098},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"parentInjectorId","ownerKind":"Class","ownerName":"TargetInstruction","id":1099},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"providers","ownerKind":"Class","ownerName":"TargetInstruction","id":1100},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"shadowSlot","ownerKind":"Class","ownerName":"TargetInstruction","id":1101},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"slotFallbackFactory","ownerKind":"Class","ownerName":"TargetInstruction","id":1102},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"slotName","ownerKind":"Class","ownerName":"TargetInstruction","id":1103},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"values","ownerKind":"Class","ownerName":"TargetInstruction","id":1104},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"viewFactory","ownerKind":"Class","ownerName":"TargetInstruction","id":1105},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"noExpressions","ownerKind":"Class","ownerName":"TargetInstruction","id":1106},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"contentExpression","ownerKind":"Class","ownerName":"TargetInstruction","id":1107},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"lifting","ownerKind":"Class","ownerName":"TargetInstruction","id":1108},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"normal","ownerKind":"Class","ownerName":"TargetInstruction","id":1109},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"shadowSlot","ownerKind":"Class","ownerName":"TargetInstruction","id":1110},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"surrogate","ownerKind":"Class","ownerName":"TargetInstruction","id":1111},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"TemplateRegistryViewStrategy","id":1112},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"loadViewFactory","ownerKind":"Class","ownerName":"TemplateRegistryViewStrategy","id":1113},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"TemplatingEngine","id":1114},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"compose","ownerKind":"Class","ownerName":"TemplatingEngine","id":1115},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"configureAnimator","ownerKind":"Class","ownerName":"TemplatingEngine","id":1116},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"enhance","ownerKind":"Class","ownerName":"TemplatingEngine","id":1117},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"View","id":1118},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"bindingContext","ownerKind":"Class","ownerName":"View","id":1119},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"container","ownerKind":"Class","ownerName":"View","id":1120},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"controller","ownerKind":"Class","ownerName":"View","id":1121},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"fragment","ownerKind":"Class","ownerName":"View","id":1122},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"overrideContext","ownerKind":"Class","ownerName":"View","id":1123},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"viewFactory","ownerKind":"Class","ownerName":"View","id":1124},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"addBinding","ownerKind":"Class","ownerName":"View","id":1125},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"appendNodesTo","ownerKind":"Class","ownerName":"View","id":1126},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"attached","ownerKind":"Class","ownerName":"View","id":1127},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"View","id":1128},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"created","ownerKind":"Class","ownerName":"View","id":1129},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"detached","ownerKind":"Class","ownerName":"View","id":1130},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"insertNodesBefore","ownerKind":"Class","ownerName":"View","id":1131},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"removeNodes","ownerKind":"Class","ownerName":"View","id":1132},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"returnToCache","ownerKind":"Class","ownerName":"View","id":1133},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"View","id":1134},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ViewCompileInstruction","id":1135},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"associatedModuleId","ownerKind":"Class","ownerName":"ViewCompileInstruction","id":1136},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"compileSurrogate","ownerKind":"Class","ownerName":"ViewCompileInstruction","id":1137},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"targetShadowDOM","ownerKind":"Class","ownerName":"ViewCompileInstruction","id":1138},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"normal","ownerKind":"Class","ownerName":"ViewCompileInstruction","id":1139},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ViewCompiler","id":1140},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"compile","ownerKind":"Class","ownerName":"ViewCompiler","id":1141},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ViewEngine","id":1142},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"viewModelRequireMetadataKey","ownerKind":"Class","ownerName":"ViewEngine","id":1143},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"addResourcePlugin","ownerKind":"Class","ownerName":"ViewEngine","id":1144},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"importViewModelResource","ownerKind":"Class","ownerName":"ViewEngine","id":1145},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"importViewResources","ownerKind":"Class","ownerName":"ViewEngine","id":1146},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"loadTemplateResources","ownerKind":"Class","ownerName":"ViewEngine","id":1147},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"loadViewFactory","ownerKind":"Class","ownerName":"ViewEngine","id":1148},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ViewEngineHooksResource","id":1149},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"initialize","ownerKind":"Class","ownerName":"ViewEngineHooksResource","id":1150},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"load","ownerKind":"Class","ownerName":"ViewEngineHooksResource","id":1151},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"register","ownerKind":"Class","ownerName":"ViewEngineHooksResource","id":1152},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"convention","ownerKind":"Class","ownerName":"ViewEngineHooksResource","id":1153},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ViewFactory","id":1154},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"isCaching","ownerKind":"Class","ownerName":"ViewFactory","id":1155},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"create","ownerKind":"Class","ownerName":"ViewFactory","id":1156},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"getCachedView","ownerKind":"Class","ownerName":"ViewFactory","id":1157},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"returnViewToCache","ownerKind":"Class","ownerName":"ViewFactory","id":1158},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"setCacheSize","ownerKind":"Class","ownerName":"ViewFactory","id":1159},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ViewLocator","id":1160},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"viewStrategyMetadataKey","ownerKind":"Class","ownerName":"ViewLocator","id":1161},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"convertOriginToViewUrl","ownerKind":"Class","ownerName":"ViewLocator","id":1162},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"createFallbackViewStrategy","ownerKind":"Class","ownerName":"ViewLocator","id":1163},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"getViewStrategy","ownerKind":"Class","ownerName":"ViewLocator","id":1164},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ViewResources","id":1165},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"bindingLanguage","ownerKind":"Class","ownerName":"ViewResources","id":1166},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"getAttribute","ownerKind":"Class","ownerName":"ViewResources","id":1167},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"getBindingBehavior","ownerKind":"Class","ownerName":"ViewResources","id":1168},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"getBindingLanguage","ownerKind":"Class","ownerName":"ViewResources","id":1169},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"getElement","ownerKind":"Class","ownerName":"ViewResources","id":1170},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"getValue","ownerKind":"Class","ownerName":"ViewResources","id":1171},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"getValueConverter","ownerKind":"Class","ownerName":"ViewResources","id":1172},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"mapAttribute","ownerKind":"Class","ownerName":"ViewResources","id":1173},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"patchInParent","ownerKind":"Class","ownerName":"ViewResources","id":1174},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"registerAttribute","ownerKind":"Class","ownerName":"ViewResources","id":1175},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"registerBindingBehavior","ownerKind":"Class","ownerName":"ViewResources","id":1176},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"registerElement","ownerKind":"Class","ownerName":"ViewResources","id":1177},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"registerValue","ownerKind":"Class","ownerName":"ViewResources","id":1178},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"registerValueConverter","ownerKind":"Class","ownerName":"ViewResources","id":1179},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"registerViewEngineHooks","ownerKind":"Class","ownerName":"ViewResources","id":1180},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"relativeToView","ownerKind":"Class","ownerName":"ViewResources","id":1181},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Class","apiName":"ViewSlot","id":1182},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"add","ownerKind":"Class","ownerName":"ViewSlot","id":1183},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"animateView","ownerKind":"Class","ownerName":"ViewSlot","id":1184},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"attached","ownerKind":"Class","ownerName":"ViewSlot","id":1185},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"ViewSlot","id":1186},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"detached","ownerKind":"Class","ownerName":"ViewSlot","id":1187},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"insert","ownerKind":"Class","ownerName":"ViewSlot","id":1188},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"move","ownerKind":"Class","ownerName":"ViewSlot","id":1189},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"projectTo","ownerKind":"Class","ownerName":"ViewSlot","id":1190},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"remove","ownerKind":"Class","ownerName":"ViewSlot","id":1191},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"removeAll","ownerKind":"Class","ownerName":"ViewSlot","id":1192},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"removeAt","ownerKind":"Class","ownerName":"ViewSlot","id":1193},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"removeMany","ownerKind":"Class","ownerName":"ViewSlot","id":1194},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"transformChildNodesIntoView","ownerKind":"Class","ownerName":"ViewSlot","id":1195},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"ViewSlot","id":1196},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Interface","apiName":"ComponentAttached","id":1197},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"attached","ownerKind":"Interface","ownerName":"ComponentAttached","id":1198},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Interface","apiName":"ComponentBind","id":1199},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"bind","ownerKind":"Interface","ownerName":"ComponentBind","id":1200},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Interface","apiName":"ComponentCreated","id":1201},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"created","ownerKind":"Interface","ownerName":"ComponentCreated","id":1202},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Interface","apiName":"ComponentDetached","id":1203},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"detached","ownerKind":"Interface","ownerName":"ComponentDetached","id":1204},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Interface","apiName":"ComponentUnbind","id":1205},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"unbind","ownerKind":"Interface","ownerName":"ComponentUnbind","id":1206},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Interface","apiName":"CompositionContext","id":1207},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"bindingContext","ownerKind":"Interface","ownerName":"CompositionContext","id":1208},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"childContainer","ownerKind":"Interface","ownerName":"CompositionContext","id":1209},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"container","ownerKind":"Interface","ownerName":"CompositionContext","id":1210},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"host","ownerKind":"Interface","ownerName":"CompositionContext","id":1211},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"model","ownerKind":"Interface","ownerName":"CompositionContext","id":1212},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"overrideContext","ownerKind":"Interface","ownerName":"CompositionContext","id":1213},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"owningView","ownerKind":"Interface","ownerName":"CompositionContext","id":1214},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"skipActivation","ownerKind":"Interface","ownerName":"CompositionContext","id":1215},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"view","ownerKind":"Interface","ownerName":"CompositionContext","id":1216},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"viewModel","ownerKind":"Interface","ownerName":"CompositionContext","id":1217},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"viewModelResource","ownerKind":"Interface","ownerName":"CompositionContext","id":1218},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"viewResources","ownerKind":"Interface","ownerName":"CompositionContext","id":1219},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"viewSlot","ownerKind":"Interface","ownerName":"CompositionContext","id":1220},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Interface","apiName":"DynamicComponentGetViewStrategy","id":1221},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"getViewStrategy","ownerKind":"Interface","ownerName":"DynamicComponentGetViewStrategy","id":1222},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Interface","apiName":"EnhanceInstruction","id":1223},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"bindingContext","ownerKind":"Interface","ownerName":"EnhanceInstruction","id":1224},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"container","ownerKind":"Interface","ownerName":"EnhanceInstruction","id":1225},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"element","ownerKind":"Interface","ownerName":"EnhanceInstruction","id":1226},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"overrideContext","ownerKind":"Interface","ownerName":"EnhanceInstruction","id":1227},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"resources","ownerKind":"Interface","ownerName":"EnhanceInstruction","id":1228},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Interface","apiName":"EventHandler","id":1229},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"bubbles","ownerKind":"Interface","ownerName":"EventHandler","id":1230},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"capture","ownerKind":"Interface","ownerName":"EventHandler","id":1231},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"dispose","ownerKind":"Interface","ownerName":"EventHandler","id":1232},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"eventName","ownerKind":"Interface","ownerName":"EventHandler","id":1233},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"handler","ownerKind":"Interface","ownerName":"EventHandler","id":1234},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Interface","apiName":"ViewCreateInstruction","id":1235},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"enhance","ownerKind":"Interface","ownerName":"ViewCreateInstruction","id":1236},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"partReplacements","ownerKind":"Interface","ownerName":"ViewCreateInstruction","id":1237},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Interface","apiName":"ViewEngineHooks","id":1238},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"afterCompile","ownerKind":"Interface","ownerName":"ViewEngineHooks","id":1239},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"afterCreate","ownerKind":"Interface","ownerName":"ViewEngineHooks","id":1240},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"beforeBind","ownerKind":"Interface","ownerName":"ViewEngineHooks","id":1241},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"beforeCompile","ownerKind":"Interface","ownerName":"ViewEngineHooks","id":1242},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"beforeCreate","ownerKind":"Interface","ownerName":"ViewEngineHooks","id":1243},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Property","apiName":"beforeUnbind","ownerKind":"Interface","ownerName":"ViewEngineHooks","id":1244},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Interface","apiName":"ViewNode","id":1245},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"attached","ownerKind":"Interface","ownerName":"ViewNode","id":1246},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"bind","ownerKind":"Interface","ownerName":"ViewNode","id":1247},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"detached","ownerKind":"Interface","ownerName":"ViewNode","id":1248},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"unbind","ownerKind":"Interface","ownerName":"ViewNode","id":1249},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Interface","apiName":"ViewStrategy","id":1250},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Method","apiName":"loadViewFactory","ownerKind":"Interface","ownerName":"ViewStrategy","id":1251},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Constant","apiName":"SwapStrategies","id":1252},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Constant","apiName":"animationEvent","id":1253},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Constant","apiName":"viewStrategy","id":1254},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"behavior","id":1255},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"bindable","id":1256},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"child","id":1257},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"children","id":1258},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"containerless","id":1259},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"customAttribute","id":1260},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"customElement","id":1261},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"dynamicOptions","id":1262},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"elementConfig","id":1263},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"inlineView","id":1264},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"noView","id":1265},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"processAttributes","id":1266},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"processContent","id":1267},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"resource","id":1268},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"templateController","id":1269},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"useShadowDOM","id":1270},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"useView","id":1271},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"useViewStrategy","id":1272},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"viewEngineHooks","id":1273},{"libraryName":"Templating","libraryHref":"docs/api/templating","apiKind":"Function","apiName":"viewResources","id":1274},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Class","apiName":"AttributeMap","id":1275},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Property","apiName":"allElements","ownerKind":"Class","ownerName":"AttributeMap","id":1276},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Property","apiName":"elements","ownerKind":"Class","ownerName":"AttributeMap","id":1277},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Property","apiName":"inject","ownerKind":"Class","ownerName":"AttributeMap","id":1278},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"map","ownerKind":"Class","ownerName":"AttributeMap","id":1279},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"register","ownerKind":"Class","ownerName":"AttributeMap","id":1280},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"registerUniversal","ownerKind":"Class","ownerName":"AttributeMap","id":1281},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Class","apiName":"ChildInterpolationBinding","id":1282},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"ChildInterpolationBinding","id":1283},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"call","ownerKind":"Class","ownerName":"ChildInterpolationBinding","id":1284},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"connect","ownerKind":"Class","ownerName":"ChildInterpolationBinding","id":1285},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"ChildInterpolationBinding","id":1286},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"updateTarget","ownerKind":"Class","ownerName":"ChildInterpolationBinding","id":1287},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Class","apiName":"InterpolationBinding","id":1288},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"InterpolationBinding","id":1289},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"interpolate","ownerKind":"Class","ownerName":"InterpolationBinding","id":1290},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"InterpolationBinding","id":1291},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"updateOneTimeBindings","ownerKind":"Class","ownerName":"InterpolationBinding","id":1292},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Class","apiName":"InterpolationBindingExpression","id":1293},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"createBinding","ownerKind":"Class","ownerName":"InterpolationBindingExpression","id":1294},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Class","apiName":"SyntaxInterpreter","id":1295},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Property","apiName":"inject","ownerKind":"Class","ownerName":"SyntaxInterpreter","id":1296},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"SyntaxInterpreter","id":1297},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"call","ownerKind":"Class","ownerName":"SyntaxInterpreter","id":1298},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"capture","ownerKind":"Class","ownerName":"SyntaxInterpreter","id":1299},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"delegate","ownerKind":"Class","ownerName":"SyntaxInterpreter","id":1300},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"determineDefaultBindingMode","ownerKind":"Class","ownerName":"SyntaxInterpreter","id":1301},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"for","ownerKind":"Class","ownerName":"SyntaxInterpreter","id":1302},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"from-view","ownerKind":"Class","ownerName":"SyntaxInterpreter","id":1303},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"handleUnknownCommand","ownerKind":"Class","ownerName":"SyntaxInterpreter","id":1304},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"interpret","ownerKind":"Class","ownerName":"SyntaxInterpreter","id":1305},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"one-time","ownerKind":"Class","ownerName":"SyntaxInterpreter","id":1306},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"options","ownerKind":"Class","ownerName":"SyntaxInterpreter","id":1307},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"to-view","ownerKind":"Class","ownerName":"SyntaxInterpreter","id":1308},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"trigger","ownerKind":"Class","ownerName":"SyntaxInterpreter","id":1309},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"two-way","ownerKind":"Class","ownerName":"SyntaxInterpreter","id":1310},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Class","apiName":"TemplatingBindingLanguage","id":1311},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Property","apiName":"inject","ownerKind":"Class","ownerName":"TemplatingBindingLanguage","id":1312},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"createAttributeInstruction","ownerKind":"Class","ownerName":"TemplatingBindingLanguage","id":1313},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"inspectAttribute","ownerKind":"Class","ownerName":"TemplatingBindingLanguage","id":1314},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"inspectTextContent","ownerKind":"Class","ownerName":"TemplatingBindingLanguage","id":1315},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Method","apiName":"parseInterpolation","ownerKind":"Class","ownerName":"TemplatingBindingLanguage","id":1316},{"libraryName":"Templating-Binding","libraryHref":"docs/api/templating-binding","apiKind":"Function","apiName":"configure","id":1317},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"AbstractRepeater","id":1318},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"addView","ownerKind":"Class","ownerName":"AbstractRepeater","id":1319},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"insertView","ownerKind":"Class","ownerName":"AbstractRepeater","id":1320},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"matcher","ownerKind":"Class","ownerName":"AbstractRepeater","id":1321},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"moveView","ownerKind":"Class","ownerName":"AbstractRepeater","id":1322},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"removeAllViews","ownerKind":"Class","ownerName":"AbstractRepeater","id":1323},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"removeView","ownerKind":"Class","ownerName":"AbstractRepeater","id":1324},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"removeViews","ownerKind":"Class","ownerName":"AbstractRepeater","id":1325},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"updateBindings","ownerKind":"Class","ownerName":"AbstractRepeater","id":1326},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"view","ownerKind":"Class","ownerName":"AbstractRepeater","id":1327},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"viewCount","ownerKind":"Class","ownerName":"AbstractRepeater","id":1328},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"views","ownerKind":"Class","ownerName":"AbstractRepeater","id":1329},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"ArrayRepeatStrategy","id":1330},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"getCollectionObserver","ownerKind":"Class","ownerName":"ArrayRepeatStrategy","id":1331},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"instanceChanged","ownerKind":"Class","ownerName":"ArrayRepeatStrategy","id":1332},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"instanceMutated","ownerKind":"Class","ownerName":"ArrayRepeatStrategy","id":1333},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"AttrBindingBehavior","id":1334},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"AttrBindingBehavior","id":1335},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"AttrBindingBehavior","id":1336},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"BindingSignaler","id":1337},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Property","apiName":"signals","ownerKind":"Class","ownerName":"BindingSignaler","id":1338},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"signal","ownerKind":"Class","ownerName":"BindingSignaler","id":1339},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"Compose","id":1340},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Property","apiName":"model","ownerKind":"Class","ownerName":"Compose","id":1341},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Property","apiName":"swapOrder","ownerKind":"Class","ownerName":"Compose","id":1342},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Property","apiName":"view","ownerKind":"Class","ownerName":"Compose","id":1343},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Property","apiName":"viewModel","ownerKind":"Class","ownerName":"Compose","id":1344},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"Compose","id":1345},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"created","ownerKind":"Class","ownerName":"Compose","id":1346},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"modelChanged","ownerKind":"Class","ownerName":"Compose","id":1347},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"Compose","id":1348},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"viewChanged","ownerKind":"Class","ownerName":"Compose","id":1349},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"viewModelChanged","ownerKind":"Class","ownerName":"Compose","id":1350},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"DebounceBindingBehavior","id":1351},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"DebounceBindingBehavior","id":1352},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"DebounceBindingBehavior","id":1353},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"Else","id":1354},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"Else","id":1355},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"Else","id":1356},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"Focus","id":1357},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"attached","ownerKind":"Class","ownerName":"Focus","id":1358},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"detached","ownerKind":"Class","ownerName":"Focus","id":1359},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"handleEvent","ownerKind":"Class","ownerName":"Focus","id":1360},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"valueChanged","ownerKind":"Class","ownerName":"Focus","id":1361},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"HTMLSanitizer","id":1362},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"sanitize","ownerKind":"Class","ownerName":"HTMLSanitizer","id":1363},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"Hide","id":1364},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"Hide","id":1365},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"created","ownerKind":"Class","ownerName":"Hide","id":1366},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"valueChanged","ownerKind":"Class","ownerName":"Hide","id":1367},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"If","id":1368},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Property","apiName":"condition","ownerKind":"Class","ownerName":"If","id":1369},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Property","apiName":"swapOrder","ownerKind":"Class","ownerName":"If","id":1370},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"If","id":1371},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"conditionChanged","ownerKind":"Class","ownerName":"If","id":1372},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"If","id":1373},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"IfCore","id":1374},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"IfCore","id":1375},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"IfCore","id":1376},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"MapRepeatStrategy","id":1377},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"getCollectionObserver","ownerKind":"Class","ownerName":"MapRepeatStrategy","id":1378},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"instanceChanged","ownerKind":"Class","ownerName":"MapRepeatStrategy","id":1379},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"instanceMutated","ownerKind":"Class","ownerName":"MapRepeatStrategy","id":1380},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"NullRepeatStrategy","id":1381},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"getCollectionObserver","ownerKind":"Class","ownerName":"NullRepeatStrategy","id":1382},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"instanceChanged","ownerKind":"Class","ownerName":"NullRepeatStrategy","id":1383},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"NumberRepeatStrategy","id":1384},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"getCollectionObserver","ownerKind":"Class","ownerName":"NumberRepeatStrategy","id":1385},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"instanceChanged","ownerKind":"Class","ownerName":"NumberRepeatStrategy","id":1386},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"OneTimeBindingBehavior","id":1387},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"OneWayBindingBehavior","id":1388},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"Repeat","id":1389},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Property","apiName":"items","ownerKind":"Class","ownerName":"Repeat","id":1390},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Property","apiName":"key","ownerKind":"Class","ownerName":"Repeat","id":1391},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Property","apiName":"local","ownerKind":"Class","ownerName":"Repeat","id":1392},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Property","apiName":"value","ownerKind":"Class","ownerName":"Repeat","id":1393},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"addView","ownerKind":"Class","ownerName":"Repeat","id":1394},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"Repeat","id":1395},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"call","ownerKind":"Class","ownerName":"Repeat","id":1396},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"handleCollectionMutated","ownerKind":"Class","ownerName":"Repeat","id":1397},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"handleInnerCollectionMutated","ownerKind":"Class","ownerName":"Repeat","id":1398},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"insertView","ownerKind":"Class","ownerName":"Repeat","id":1399},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"itemsChanged","ownerKind":"Class","ownerName":"Repeat","id":1400},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"matcher","ownerKind":"Class","ownerName":"Repeat","id":1401},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"moveView","ownerKind":"Class","ownerName":"Repeat","id":1402},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"removeAllViews","ownerKind":"Class","ownerName":"Repeat","id":1403},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"removeView","ownerKind":"Class","ownerName":"Repeat","id":1404},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"removeViews","ownerKind":"Class","ownerName":"Repeat","id":1405},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"Repeat","id":1406},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"updateBindings","ownerKind":"Class","ownerName":"Repeat","id":1407},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"view","ownerKind":"Class","ownerName":"Repeat","id":1408},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"viewCount","ownerKind":"Class","ownerName":"Repeat","id":1409},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"views","ownerKind":"Class","ownerName":"Repeat","id":1410},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"RepeatStrategyLocator","id":1411},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"addStrategy","ownerKind":"Class","ownerName":"RepeatStrategyLocator","id":1412},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"getStrategy","ownerKind":"Class","ownerName":"RepeatStrategyLocator","id":1413},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"Replaceable","id":1414},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"Replaceable","id":1415},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"Replaceable","id":1416},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"SanitizeHTMLValueConverter","id":1417},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"toView","ownerKind":"Class","ownerName":"SanitizeHTMLValueConverter","id":1418},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"SelfBindingBehavior","id":1419},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"SelfBindingBehavior","id":1420},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"SelfBindingBehavior","id":1421},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"SetRepeatStrategy","id":1422},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"getCollectionObserver","ownerKind":"Class","ownerName":"SetRepeatStrategy","id":1423},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"instanceChanged","ownerKind":"Class","ownerName":"SetRepeatStrategy","id":1424},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"instanceMutated","ownerKind":"Class","ownerName":"SetRepeatStrategy","id":1425},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"Show","id":1426},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"Show","id":1427},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"created","ownerKind":"Class","ownerName":"Show","id":1428},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"valueChanged","ownerKind":"Class","ownerName":"Show","id":1429},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"SignalBindingBehavior","id":1430},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Property","apiName":"signals","ownerKind":"Class","ownerName":"SignalBindingBehavior","id":1431},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"SignalBindingBehavior","id":1432},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"SignalBindingBehavior","id":1433},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"inject","ownerKind":"Class","ownerName":"SignalBindingBehavior","id":1434},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"ThrottleBindingBehavior","id":1435},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"ThrottleBindingBehavior","id":1436},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"ThrottleBindingBehavior","id":1437},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"TwoWayBindingBehavior","id":1438},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"UpdateTriggerBindingBehavior","id":1439},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"UpdateTriggerBindingBehavior","id":1440},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"UpdateTriggerBindingBehavior","id":1441},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Class","apiName":"With","id":1442},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"With","id":1443},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"With","id":1444},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"valueChanged","ownerKind":"Class","ownerName":"With","id":1445},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Interface","apiName":"RepeatStrategy","id":1446},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"getCollectionObserver","ownerKind":"Interface","ownerName":"RepeatStrategy","id":1447},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"instanceChanged","ownerKind":"Interface","ownerName":"RepeatStrategy","id":1448},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Method","apiName":"instanceMutated","ownerKind":"Interface","ownerName":"RepeatStrategy","id":1449},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Constant","apiName":"aureliaHideClassName","id":1450},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Constant","apiName":"lifecycleOptionalBehaviors","id":1451},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Function","apiName":"configure","id":1452},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Function","apiName":"createFullOverrideContext","id":1453},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Function","apiName":"getElementName","id":1454},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Function","apiName":"getItemsSourceExpression","id":1455},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Function","apiName":"indexOf","id":1456},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Function","apiName":"injectAureliaHideStyleAtBoundary","id":1457},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Function","apiName":"injectAureliaHideStyleAtHead","id":1458},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Function","apiName":"isOneTime","id":1459},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Function","apiName":"unwrapExpression","id":1460},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Function","apiName":"updateOneTimeBinding","id":1461},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Function","apiName":"updateOverrideContext","id":1462},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Function","apiName":"updateOverrideContexts","id":1463},{"libraryName":"Templating-Resources","libraryHref":"docs/api/templating-resources","apiKind":"Function","apiName":"viewsRequireLifecycle","id":1464},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Class","apiName":"RouteHref","id":1465},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Method","apiName":"attributeChanged","ownerKind":"Class","ownerName":"RouteHref","id":1466},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"RouteHref","id":1467},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Method","apiName":"processChange","ownerKind":"Class","ownerName":"RouteHref","id":1468},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Method","apiName":"unbind","ownerKind":"Class","ownerName":"RouteHref","id":1469},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Class","apiName":"RouterView","id":1470},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Property","apiName":"element","ownerKind":"Class","ownerName":"RouterView","id":1471},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Property","apiName":"layoutModel","ownerKind":"Class","ownerName":"RouterView","id":1472},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Property","apiName":"layoutView","ownerKind":"Class","ownerName":"RouterView","id":1473},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Property","apiName":"layoutViewModel","ownerKind":"Class","ownerName":"RouterView","id":1474},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Property","apiName":"swapOrder","ownerKind":"Class","ownerName":"RouterView","id":1475},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Method","apiName":"bind","ownerKind":"Class","ownerName":"RouterView","id":1476},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Method","apiName":"created","ownerKind":"Class","ownerName":"RouterView","id":1477},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Method","apiName":"process","ownerKind":"Class","ownerName":"RouterView","id":1478},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Method","apiName":"swap","ownerKind":"Class","ownerName":"RouterView","id":1479},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Class","apiName":"RouterViewLocator","id":1480},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Method","apiName":"findNearest","ownerKind":"Class","ownerName":"RouterViewLocator","id":1481},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Class","apiName":"TemplatingRouteLoader","id":1482},{"libraryName":"Templating-Router","libraryHref":"docs/api/templating-router","apiKind":"Method","apiName":"loadRoute","ownerKind":"Class","ownerName":"TemplatingRouteLoader","id":1483},{"libraryName":"Testing","libraryHref":"docs/api/testing","apiKind":"Function","apiName":"configure","id":1484}]}}