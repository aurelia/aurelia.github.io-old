{"name":"Release Update - 9/22/2016","description":"Today's release contains some new features for routing, path parsing and the cli, along with various bug fixes in other places.","author":{"name":"AureliaEffect"},"links":{"static":"blog/2016/9/22/release-update-9-22-2016","html":"blog/2016/9/22/release-update-9-22-2016/index.html","fragment":"blog/2016/9/22/release-update-9-22-2016/index-fragment.html","self":"blog/2016/9/22/release-update-9-22-2016/index.json"},"content":"\r\nToday's release contains some new features for routing, path parsing and the cli, along with various bug fixes in other places.\r\n\r\nJust a reminder, since Aurelia uses [semver](http://http://semver.org), libraries that contain new features will have their *minor* version number bumped.\r\n\r\n#### Routing\r\n\r\nThe pattern-matching capabilities of the Router are handled by the `aurelia-route-recognizer` library. A long-time feature request of Aurelia's router is to support *optional* parameters. With the `1.1.0` release of the recognizer we now have support for this much-requested feature, thanks to the community contributions of Github member [jods4](https://github.com/jods4). To use optional parameters, simply append a `?` to the parameter name, E.g. `:customerId?`.\r\n\r\n#### Path\r\n\r\nThe `aurelia-path` library handles all path manipulation and parsing, including query strings. Up until now, we've only supported query strings with the more modern formatting. Thanks to the work of community member [Thomas Schlage](https://github.com/fragsalat) we now also support traditional query string formats. To use traditional parsing, simply pass `true` as the final parameter to any of the query string-related utility methods.\r\n\r\n### CLI\r\n\r\nWe've had a number of important bug fixes to the CLI. Thanks to all the community members who have been jumping in and helping out with this! We also now support two new features:\r\n\r\n* Bundle Revision Numbers - Thanks to the work of Aurelia Core Team member [Andrew Stoker](https://github.com/astoker) we can now generate hash-based revision numbers on any generated bundle.\r\n* Arbitrary Module Loader Configuration - Community member [Julien Enselme](https://github.com/Jenselme) implemented a way to pass custom module loader-specific config through to the bundling system.\r\n\r\nThanks to these community members and everyone who has been contributing to the Aurelia project! As usual, you can read the full changelog below.\r\n\r\n## Release Notes\r\n\r\n### [aurelia-route-recognizer 1.1.0](https://github.com/aurelia/route-recognizer/compare/1.0.0...v1.1.0) (2016-09-22)\r\n\r\n#### Features\r\n\r\n* Support Optional Parameters with :paramName?\r\n\r\n### [aurelia-animator-velocity 1.0.1](https://github.com/aurelia/animator-velocity/compare/1.0.0...v1.0.1) (2016-09-22)\r\n\r\n#### Bug Fixes\r\n\r\n* Make enter and leave animations optional\r\n* Enable anim-enter and anim-leave values to work correctly\r\n\r\n### [aurelia-path 1.1.0](https://github.com/aurelia/path/compare/1.0.0...v1.1.0) (2016-09-22)\r\n\r\n#### Features\r\n\r\n* **queries:** Build and parse queries also in traditional style\r\n\r\n### [aurelia-loader-webpack 1.0.3](https://github.com/aurelia/loader-webpack/compare/1.0.2...v1.0.3) (2016-09-22)\r\n\r\n#### Bug Fixes\r\n\r\n* **index:** delete the empty cache element if failed to __webpack_require__ ([13fb8b8](https://github.com/aurelia/loader-webpack/commit/13fb8b8)), closes [#18](https://github.com/aurelia/loader-webpack/issues/18)\r\n\r\n### aurelia-cli 0.20.0\r\n\r\n#### Features\r\n\r\n* Support bundle revision numbers.\r\n* Support arbitrary module loader configuration.\r\n\r\n#### Bug Fixes\r\n\r\n* Don't add .vscode settings unless the VS Code editor is selected.\r\n* Update NPM dependency to prevent event emitter warnings.\r\n* Use path.root for Karma tests\r\n* Always ensure directory structure exists before creating files\r\n* Erroneous source module inclusing resulting in empty/broken bundled modules"}