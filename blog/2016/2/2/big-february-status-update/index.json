{"name":"Aurelia Big February Status Update","description":"We've released updates for all Aurelia libraries, and made a major step towards our Beta 2. We'll talk about what's in these patches and what is in store next below. If you have high level questions not covered here, we'd love for you to join us in our first ever Aurelia AMA [https://hashnode.com/ama/with-aurelia-team-cijv67apt000o535313ewe3qo?utm_source=AMA%20Reminder%20Email&utm_medium=email&utm_campaign=Notification%20Email], starting shortly at 2pm Eastern.","author":{"name":"AureliaEffect"},"links":{"static":"blog/2016/2/2/big-february-status-update","html":"blog/2016/2/2/big-february-status-update/index.html","fragment":"blog/2016/2/2/big-february-status-update/index-fragment.html","self":"blog/2016/2/2/big-february-status-update/index.json"},"content":"\nWe've released updates for all Aurelia libraries, and made a major step towards our Beta 2. We'll talk about what's in these patches and what is in store next below. If you have high level questions not covered here, we'd love for you to join us in our first ever [Aurelia AMA](https://hashnode.com/ama/with-aurelia-team-cijv67apt000o535313ewe3qo?utm_source=AMA%20Reminder%20Email&utm_medium=email&utm_campaign=Notification%20Email), starting shortly at 2pm Eastern.\n\n## The Patches\n\nAs usual, these patch releases contain bug fixes and a few minor new features (such as es6 shorthand object initialization in binding expressions). However, the most important aspect of this release is that we've begun moving towards supporting jspm 0.17.x beta. This was one of our main goals in moving towards Beta 2 and now that the new jspm is available, we've been able to get that moving ahead.\n\nThere are no breaking changes in Aurelia. The jspm changes were all related to configuration across our libraries. For the moment, we would like to ask that our community not use jspm 0.17.x just yet. We've made this big update so that we can begin doing thorough testing of 0.17.x ourselves, while allowing the community to remain on 0.16.x. Once we are satisfied, we'll post asking you to upgrade to 0.17.x. A couple weeks after that we will release some new patches to Aurelia which will require jspm users to be on 0.17.x. So, in this way, we can smoothly move the community over.\n\n> There are some bugs in jspm, both 0.16 and 0.17 that we've discovered. If you are starting a new project, you are going to want to use 0.16.15 to properly install. If you already have a project that is set up with Aurelia, just make sure you are on the latest 0.16.x and you should be able to update just fine. Again, do not use 0.17.x yet.\n\n## Update on Beta 2\n\nAurelia is solid and we've had no breaking changes since Beta 1 release. We've been working steadily on improving performance, with some amazing results. We've also been addressing bugs and adding a few new features. All of this will continue through Beta and past release into 1.1, 1.2, etc. These sorts of tasks are ongoing.\n\nSo, why aren't we in Beta 2 or released yet?\n\nThis is almost entirely related to synchronizing with external libraries, tools and standards. I'd like to discuss below the remaining milestones we want to hit before we announce Beta 2.\n\n### JSPM and the Standard Loader\n\nAs mentioned, we wanted to be compatible with jspm 0.17.x or above and the latest accompanying version of SystemJS before our Beta 2. These updates to the package manager and loader are significant and we wanted to get them in before our official v1 release. They have just become available in the beta channel recently, so we have started moving ahead with that.\n\nAlong these lines, the API of the standard module loader is changing. Aurelia will shield you from that entirely via its loader abstraction. The only place you may see the API is in your initial bootstrapping from your HTML page. In order to prevent breaking changes we are now showing the SystemJS specific API in our docs and starter kits which will shield you 100% from changes to the underlying spec.\n\nAfter we help the community migrate to JSPM 0.17.x everyone should be shielded from any major changes for quite a while.\n\n### Babel 6 and Decorators\n\nWe've discussed Babel 6 in the past. It's the latest major upgrade to the compiler we use to compile Aurelia and that many members of our community use to compile their apps. The initial release of Babel 6 had some issues that prevented many code-bases from being updated, including Aurelia. We've been tracking progress on Babel 6 and the tools we need that surround that. We're running experiments now and we hope to be able to update everything to Babel 6 soon. Once that is done we can check off another major requirement for our Beta 2.\n\nAurelia and our community relies on the ES 2016 Decorators spec. That specification is changing. Unfortunately, that process is going slowly. We are skeptical that it will be done in time for a Beta 2 or even our Release. Our plan is to use Babel 6 with a special plugin that supports the current spec and to continue to use that until both Babel and TypeScript update to the new spec. Fortunately, this shouldn't affect Aurelia app developers. The way that decorators are used doesn't appear to be changing, just the way they are implemented. So, this wouldn't constitute a breaking change to your app, but we would need to update our own internal implementations and once we do we would then require specific Babel plugins or a specific version of TypeScript. When that time comes, we'll communicate very clearly about that process and help ensure a smooth transition.\n\n### Shadow DOM v1\n\nWhen we released our Beta 1, we mentioned that there were changes coming to the Shadow DOM Web Components specification. We provided some guidance about how to use Aurelia so that it would be easy to migrate when our Beta 2 released with the Shadow DOM update. Now that the Shadow DOM v1 spec has reached consensus, it's almost time for us to make this update. Since this is the only real API-breaking change planned for Beta 2, it will be the last work we do. We'll begin this development after the move to JSPM 0.17 and Babel 6 are complete. Design work on this implementation is already in progress.\n\n### CoreJS\n\nCurrently almost all of our libraries have a hard dependency on CoreJS. We don't think that's the best way to handle polyfills so we are planning to remove all these hard dependencies. Instead, each library will use our platform abstraction layer to assert the presence of a necessary standard implementation. The developer will then have the flexibility to choose how he wishes to meet these requirements. For exmaple, perhaps the only browsers being targeted already support all the necessary APIs. In that case, no polyfill is necessary. Perhaps the developer wishes to use ES6Shim instead of CoreJS. They will be free to do so. The Aurelia team may even craete our own, minimal polyfill, so that broad browser reach can be supported, without having to take the almost 100k hit to include CoreJS. Of course, if you want a full ES 2015 library polyfill, you would always still have the flexibility to choose CoreJS, and for compatibility reasons, that will remain our default configuration for v1.\n\n## Update on Aurelia Interface\n\nWhen we released the Beta we also previewed a component library we are working on called *Aurelia Interface*. I'm happy to report that development of the library is going very well. We've made massive improvements in the last couple months and our APIs and feature-set are finally stabilizing. This week we started to put together a \"skeleton\" that takes our standard navigation skeleton and re-builds it with Aurelia Interface. With no changes to JavaScript code and only changing the HTML to use Aurelia Interface elements in place of basic elements, we're able to create a simple Material Design-based app in just a few minutes. Here's a screenshot:\n\n![skeleton-interface](/content/images/2016/02/skelton-interface.png)\n\nAnd here's the markup that we used to create the welcome screen:\n\n\n<code-listing>\n  <source-code lang=\"HTML\">\n    <template>\n      <section class=\"au-animate\" halign-center>\n        <ai-card z=\"8dp\">\n          <header>\n            <h2>${heading}</h2>\n          </header>\n          <form role=\"form\" submit.delegate=\"submit()\">\n            <ai-switch checked.bind=\"edit\">\n              <label>Edit</label>\n            </ai-switch>\n            <ai-input name=\"firstName\" value.bind=\"firstName\" if.bind=\"edit\">\n              <label float>First Name</label>\n              <help>Please input your first name</help>\n            </ai-input>\n            <ai-input name=\"lastName\" value.bind=\"lastName\" if.bind=\"edit\">\n              <label float>Last Name</label>\n              <help>Please input your last name</help>\n            </ai-input>\n            <footer flex-column>\n              <p>${fullName | upper}</p>\n              <ai-button if.bind=\"edit\" type=\"submit\">Submit</ai-button>\n            </footer>\n          </form>\n        </ai-card>\n      </section>\n    </template>\n  </source-code>\n</code-listing>\n\nHopefully you can see that Aurelia Interface is going to be just as simple to use as normal HTML and that you'll be able to make beautiful applications with ease.\n\nWe'll have more information about Aurelia Interface as we get close to release. We're not quite ready to announce the release date or the price but we're getting close. Stay tuned...\n\n## What else are you working on?\n\nWe've been real busy lately. We've got a number of interesting things that the core team is working on. Here are just a few things...\n\n### aurelia-validation\n\nSome of you have been using the aurelia-validation plugin since the early days. Unfortunately, I've got a bit of bad news. The developer who originally joined the team to work on validation left the team several months ago and hasn't really been heard from since. When that happened we attempted to shuffle team members around to continue development of aurelia-validation since we have always wanted a strong validation library. Over the last couple of months we've come to realize that in order for us to continue development of aurelia-validation, we're going to have to re-write it.\n\nWe'd like to ask for your patience in this matter. We're beginning efforts to author a new validation library this week and I'm confident we'll be able to build something even better without taking too long. We're going to use the documentation for the existing library as a guide to help us build something that meets and exceeds the current feature set. However, we're going to solve a bunch of problems that exist in the current library...problems we found that we couldn't really address incrementally.\n\n* The current test suite is constructed in a very non-traditional way and is hard to understand. We're going to have a simple, clear set of tests for the new library that will make it easier to manage and extend.\n* The current library is strongly-coupled to Aurelia's templating engine. We're going to split the valiation library into multiple parts so that the validation portion will be usable in Node apps on the server, independent of Aurelia. There will then be a plugin for Aurelia that enables the validation engine to talk to the View to display validation errors.\n* The current library doesn't interact with Views using a mechanism that is based on Aurelia's knowledge of bindings. Rather, it uses some very non-standard mechanisms that aren't always sure to work. The new version will enable connecting validation rules based on the Aurelia view engine's own internal data structures and knowledge of binding.\n* The refactoring and re-design is going to enable us to get more re-use out of various portions of the library allowing it to integrate with other solutions better such as BreezeJS and Aurelia Interface.\n* And much more...\n\nWhile the aurelia-validation library was not yet released to Beta...and was technically still subject to major break changes, we still deeply regret that we have to do this. We're going to try hard to build a nice API, one that either matches the current API or that is easy to migrate to.\n\nThanks for your understanding and your patience. This is a *top priority* item for us. We'll keep you posted along the way.\n\n### aurelia-cache\n\nAn important plugin we've been missing is a simple cache. It's common to want to cache data client-side or cache responses from backend services. Often times you want that data to be cached for certain amounts of time or to be stored in different ways. We're working on a nice solution to this and hope to have something to show you soon.\n\n### aurelia-web-components\n\nAurelia supports various Web Component specs already. For example, all views are created using the HTML Template Element and you can optionally have your component's view rendered into ShadowDOM. You can also use any 3rd party Web Components Custom Element inside an Aurelia app. However, Aurelia's native custom elements don't use the Web Components Custom Element spec. There are various reasons for this...but the simplest explanation is that, within the context of an application framework, it's easier and more efficient to handle custom elements directly. That said, we've always planned from the beginning to support taking any Aurelia custom element and \"exporting\" it as a Web Component Custom Element. That would enable any custom element written in Aurelia to be used inside plain web pages or even inside other frameworks. We've started the work on a plugin to enable this and we expect to have a first version ready pretty soon.\n\n### aurelia-testing\n\nSupporting unit testing with Aurelia has always been important. If your architecture is based on the MVVM pattern, you can easily test your view-models just like any other class. However, if you want to unit test a custom component in its entirety, including checking the view for state and structural changes, that's been a little bit more difficult. Recently we've been putting together a pretty cool component test helper that we're excited about. It lets you create components in a test environment and assert how they respond to databinding and lifecycle changes, taking into account the async nature of these processes. Here's a quick sample of the API we're working on:\n\n\n<code-listing>\n  <source-code lang=\"JavaScript\">\n    describe('my component', () => {\n      let component;\n    \n      beforeAll(() => \n        component = StageComponent\n          .withResources('src/my-component')\n          .usedAs('<my-component foo.bind=\"firstName\"></my-component>')\n          .boundTo({ firstName: 'Rob' });\n      });\n    \n      it('does something...', done => {\n        component.create()\n          .then(() => expect(....))\n          .then(() => component.bind())\n          .then(() => {\n               expect(....);\n               expect(....);\n          })\n          .then(() => component.attach())\n          ...\n          .then(() => component.detach())\n          ...\n          .then(() => component.unbind())\n          ...\n          .then(() => component.bind())\n          .then(done);\n      });\n    });\n  </source-code>\n</code-listing>\n\nIt's not quote ready yet, but we expect to have an initial release pretty soon.\n\n### aurelia-ui-virtualization\n\nWhat if you wanted to use Aurelia's `repeat.for` over an array with tens of thousands of data items or more? Any framework would struggle to generate such a list quickly and to enable performant scrolling. For large lists, we've created a new plugin `ui-virtualization` that enables \"virtualization\" of list through a new `virtual-repeat.for`. When used, the list \"virtually\" as tens of thousands of rows, but the DOM only actually has rows for what is visible...so it could be only tens of items. This allows rendering of massive lists of data with amazing performance. It works exactly like `repeat.for`, it just creates a scrolling area and manages the list using UI virtualization techniques.\n\nThis plugin has not yet been released to its initial version, but we are really excited about the progress and expect an initial usable release very soon. Stay tuned!\n\n## Cool Community Work\n\nNot only is the core team doing a bunch of great work, but there have been some amazing developments in the community.\n\n### Aurelia UI Toolkits\n\nLast week [we had a guest post from the team that created the Aurelia UI Toolkits](http://blog.durandal.io/2016/01/28/aurelia-and-kendo-ui/). They've been doing some fantastic work to bring Kendo UI components to Aurelia as native Aurelia components. They're also working on other popular UI toolkits like Materialize. It's very cool stuff. So, keep an eye on them.\n\n### Webpack\n\nIn the last few weeks a group of developers from the community have begun working on getting Aurelia working with Webpack, as a modern alternative to jspm/system.js. We're really excited about the work they are doing and the progress they are making. We're hoping to integrate their work in the future so that Webpack can become an officially supported solution.\n\n### Hashnode AMA\n\nToday, at 2pm Eastern Time, members of the Aurelia team [will be participating in an \"Ask Me Anything\" session on Hashnode](https://hashnode.com/ama/with-aurelia-team-cijv67apt000o535313ewe3qo). We'd love it if you can come out. If you can't make it, I'm sure you'll be able to review the Q&A afterwards. It should be fun.\n\n## Conclusion\n\nAs you can see...there's lots going on. New releases, new plugins, great community contributions and more. We're quite excited about what 2016 means for Aurelia and the Aurelia community. Seeing what has already happened in January gives you a just a little hint of the fun things to come...\n\n## Change Log\n\n### aurelia-pal 1.0.0-beta.1.1.0\n\n* add typings\n\n### aurelia-pal-browser 1.0.0-beta.1.1.0\n\n#### Bug Fixes\n\n* **index:** add core-js import ([162cfbf3](http://github.com/aurelia/pal-browser/commit/162cfbf3208b0123a9860f4a3b2dbfd4559d9b40), closes [#2](http://github.com/aurelia/pal-browser/issues/2))\n\n#### Features\n\n* **all:** update for jspm; update core-js and aurelia deps ([9d870d29](http://github.com/aurelia/pal-browser/commit/9d870d2948ba93706fce9053c979bf8ebe5a5b0b))\n* **feature:** add mutation observer feature detection ([3add002e](http://github.com/aurelia/pal-browser/commit/3add002e5531401cf7e97f46d411225c6ad9621e))\n\n### aurelia-logging 1.0.0-beta.1.1.0\n\n#### Features\n\n* **all:** update for jspm and core-js ([d71d0a4a](http://github.com/aurelia/logging/commit/d71d0a4aa5db4e5697f91dc16e021c0796cf8fa5))\n\n### aurelia-logging-console 1.0.0-beta.1.1.0\n\n#### Features\n\n* **all:**  update for jspm; update core-js ([baa3622a](http://github.com/aurelia/logging-console/commit/baa3622aa2a907eaee6cdea8306eab66503966be))\n\n### aurelia-metadata 1.0.0-beta.1.1.0\n\n#### Features\n\n* **all:** update for jspm; update core-js; update aurelia deps ([01aa7e40](https://github.com/aurelia/metadata/commit/01aa7e404834a5d1824501108fc17bce98536a8c))\n\n### aurelia-dependency-injection 1.0.0-beta.1.1.0\n\n#### Bug Fixes\n\n* **container:** correct inconsistent return type from getAll ([bbbef9e5](http://github.com/aurelia/dependency-injection/commit/bbbef9e582e4a81497db5655c7a7e9d2d1e5c10a), closes [#71](http://github.com/aurelia/dependency-injection/issues/71))\n\n#### Features\n\n* **all:** update for jspm; update core-js; update aurelia deps ([11d16867](http://github.com/aurelia/dependency-injection/commit/11d1686765c626896dbb3d5edb7f5b40da9dd5ca))\n\n### aurelia-history 1.0.0-beta.1.1.0\n\n#### Bug Fixes\n\n* **package:** update metadata for jspm ([e754d509](http://github.com/aurelia/history/commit/e754d509beacbdf41799db73e9490a069de3ff76))\n\n## aurelia-http-client 1.0.0-beta.1.1.0\n\n#### Features\n\n* **package:** update metadata for jspm; core-js; deps ([9b0e4272](http://github.com/aurelia/http-client/commit/9b0e4272ac4b784642d49aba87f206a949023868))\n\n### aurelia-fetch 1.0.0-beta.1.1.0\n\n\n#### Bug Fixes\n\n* **http-client:** ensure default content-type is respected ([f001ebaf](http://github.com/aurelia/fetch-client/commit/f001ebafe47ecc0ebbc74f597ac7ee904194b734), closes [#32](http://github.com/aurelia/fetch-client/issues/32))\n\n\n#### Features\n\n* **all:** update jspm meta; core-js ([dd62f230](http://github.com/aurelia/fetch-client/commit/dd62f23099f3e6851eb394b57de6d4da121a241c))\n* **interceptors:** provide Request to response interceptors ([2d24beaa](http://github.com/aurelia/fetch-client/commit/2d24beaa39104074a3c094f5544afc3d7d8ace75), closes [#33](http://github.com/aurelia/fetch-client/issues/33))\n\n### aurelia-loader 1.0.0-beta.1.1.0\n\n* update jspm metadata; core-js; aurelia-deps\n\n### aurelia-loader-default 1.0.0-beta.1.1.0\n\n#### Features\n\n* **all:** update jspm meta; core-js; aurelia deps ([7777dfcc](http://github.com/aurelia/loader-default/commit/7777dfcca39fb610b7dd66bad868133b2d0c9962))\n\n### aurelia-event-aggregator 1.0.0-beta.1.1.0\n\n#### Features\n\n* **all:** update jspm meta; core-js; aurelia deps ([05e6674d](http://github.com/aurelia/event-aggregator/commit/05e6674d13d393e6813dda656a8e79ba75b85aa8))\n\n### aurelia-task-queue 1.0.0-beta.1.1.0\n\n#### Bug Fixes\n\n* **index:** enable running without mutation observers ([7d0c1336](http://github.com/aurelia/task-queue/commit/7d0c133647f06f0ce81b833342f514f567c9f8b1), closes [#10](http://github.com/aurelia/task-queue/issues/10))\n* **package:** correct missed dependency update ([896972b3](http://github.com/aurelia/task-queue/commit/896972b36c814e0140c7f4106586ab0866099517))\n\n#### Features\n\n* **all:** update jspm meta; core-js; aurelia deps ([38b78a66](http://github.com/aurelia/task-queue/commit/38b78a66c643d0056efdcd0abf5a0ac0a83a3b84))\n\n### aurelia-route-recognizer 1.0.0-beta.1.1.0\n\n#### Features\n\n* **all:** update jspm meta; core-js; aurelia deps ([59b29532](http://github.com/aurelia/route-recognizer/commit/59b295320c66d2757cbeda708f09e2c49940214f))\n\n### aurelia-binding 1.0.0-beta.1.1.0\n\n#### Bug Fixes\n\n* **AccessKeyed:** avoid dirty-checking keyed array access ([7d01567a](http://github.com/aurelia/binding/commit/7d01567a00f5b0bb334b48614300273f7a99caed), closes [#289](http://github.com/aurelia/binding/issues/289))\n* **StyleObserver:** set style properties individually ([8e9a2eb5](http://github.com/aurelia/binding/commit/8e9a2eb5b55106c32d6c4b1c6d60af5de6d9f4b1), closes [#290](http://github.com/aurelia/binding/issues/290))\n* **choice-observers:** notify on setValue ([86722faf](http://github.com/aurelia/binding/commit/86722faf435ca9b667c28d0ced4235b06c88e30c), closes [#251](http://github.com/aurelia/binding/issues/251))\n* **definitions:** no implicit any ([eff3162e](http://github.com/aurelia/binding/commit/eff3162efedff7af4ef1b772e61ff49ce6f28460), closes [#286](http://github.com/aurelia/binding/issues/286))\n\n#### Features\n\n* **Parser:** parse es6 shorthand initializers ([0d28ff91](http://github.com/aurelia/binding/commit/0d28ff91686853baacb583fa824618409ed4d1d4))\n* **all:** update jspm meta; core-js; aurelia deps ([b93daa46](http://github.com/aurelia/binding/commit/b93daa4681ea970b5310fa5bef3e63a55788cc3e))\n\n### aurelia-router 1.0.0-beta.1.1.0\n\n#### Features\n\n* **all:** update jspm meta; core-js; aurelia deps ([b473fec1](http://github.com/aurelia/router/commit/b473fec110d27e5572c1e094f20755fd5eeb7fd6))\n\n### aurelia-templating 1.0.0-beta.1.1.0\n\n#### Bug Fixes\n\n* **Controller:** handle scope inheritance in template part with repeat Related to #244 ([9a488c44](http://github.com/aurelia/templating/commit/9a488c44e86872c91b2f86953519c8ef7308a262))\n* **controller:** stop element from inheriting scope ([a3ced53d](http://github.com/aurelia/templating/commit/a3ced53d67749244a6ea61d5193b04330e392bfc))\n\n#### Features\n\n* **all:** update jspm meta; core-js; aurelia-deps ([bdff3232](http://github.com/aurelia/templating/commit/bdff323282ebd7228063cb08a961a3258215fcea))\n\n### aurelia-templating-binding 1.0.0-beta.1.1.0\n\n#### Features\n\n* **all:**  update jspm meta; core-js; aurelia deps ([de63b6c5](http://github.com/aurelia/templating-binding/commit/de63b6c594b31505f2f4f7fabf093fb6b0c6c06c))\n\n### aurelia-templating-resources 1.0.0-beta.1.1.0\n\n#### Features\n\n* **all:** update jspm meta; core-js; aurelia deps ([c30927e3](http://github.com/aurelia/templating-resources/commit/c30927e3c81818daaefdc47fe418ca13611bfed9))\n* **hide:** add hide binding ([38760b6b](http://github.com/aurelia/templating-resources/commit/38760b6ba00774a7e75572baef0021d8c1c45096))\n\n### aurelia-templating-router 1.0.0-beta.1.1.0 (2016-01-29)\n\n#### Features\n\n* **all:** update jspm meta; core-js; aurelia-dps ([e26b67e7](http://github.com/aurelia/templating-router/commit/e26b67e7ef9a4a6e66ebef8b01eb154e63ce21ba))\n\n### aurelia-framework 1.0.0-beta.1.1.0\n\n#### Bug Fixes\n\n* bundle config ([1bb9e69b](http://github.com/aurelia/framework/commit/1bb9e69b8b209690c20812a5b24d0a0f7c9e4a8a))\n* **docs:** fix GiHub typo ([6adea363](http://github.com/aurelia/framework/commit/6adea3637f2c1da64cc76f9b0fba3973bb3c726f))\n\n#### Features\n\n* **all:** update jspm meta; core-js; aurelia deps ([be9776e3](http://github.com/aurelia/framework/commit/be9776e3fb0ce94fe8c1539965112ee16fb2d323))\n\n### aurelia-bootstrapper 1.0.0-beta.1.1.0 (2016-01-29)\n\n#### Bug Fixes\n\n* **index:** change loader detection to work in more environments ([9a5c169a](http://github.com/aurelia/bootstrapper/commit/9a5c169afa1d72814c9b04c735b3e448d5e3430f))\n\n#### Features\n\n* **all:** update jspm meta; core-js; aurelia deps ([65079e91](http://github.com/aurelia/bootstrapper/commit/65079e9135576a7a71226034f2af6ed728946e16))\n\n### aurelia-animator-css 1.0.0-beta.1.1.0\n\n#### Features\n\n* **all:** update jspm meta; core-js; aurelia deps ([b6f0a247](https://github.com/aurelia/animator-css/commit/b6f0a247f73264d21f2d23f960fe7c3263bab121))\n\n### aurelia-animator-velocity 1.0.0-beta.1.1.0\n\n#### Bug Fixes\n\n* **animator:** mark animate params as optional ([b6888ba6](https://github.com/aurelia/animator-velocity/commit/b6888ba645810911ac490d7b8ee121574500700d))\n\n#### Features\n\n* **all:** update jspm meta; core-js; aurelia deps ([aa84d30d](https://github.com/aurelia/animator-velocity/commit/aa84d30d3cc1b63eee633d105289af768eb4deaf))\n\n### aurelia-html-import-template-loader 1.0.0-beta.1.1.0\n\n#### Features\n\n* **all:** update jspm meta; core-js; aurelia deps ([b4faa50e](http://github.com/aurelia/html-import-template-loader/commit/b4faa50ee4457710e6d488d66fba373479b4b96b))\n\n### aurelia-i18n 0.4.7 (2016-01-29)\n\n#### Bug Fixes\n\n* **attribute:** removed timeout usage ([019fd7bd](http://github.com/aurelia/i18n/commit/019fd7bd6b21f917f8e59b2adda81e5c5784d1e0))\n* **i18next:** missing default export ([3aafbded](http://github.com/aurelia/i18n/commit/3aafbdeda6c1653efe7aa4db3dcebd74df2ededa))\n\n#### Features\n\n* **all:** update jspm meta; core-js; aurelia deps ([8360ceaf](http://github.com/aurelia/i18n/commit/8360ceaf4426efde40bfa9222663c0c21d6d2dcc))\n* **unformat:** unformat numbers using locale ([1da0817c](http://github.com/aurelia/i18n/commit/1da0817c4588059d67ef93d1606235f637f30d95))\n\n## aurelia-dialog 0.5.4\n\n* feat(all): update jspm meta; core-js; aurelia deps\n* fix(deps): move aurelia-pal to dev-dep\n* disable pointer events on ai-dialog-container\n* fix(dialog): use CSS auto margins instead of JS\n\n### aurelia-validation 0.6.1\n\n#### Features\n\n* **all:** update jspm meta; core-js; aurelia deps ([c109bdc6](https://github.com/aurelia/validation/commit/c109bdc6170f200b0e7034d726077da08159ba3a))"}