{"name":"Aurelia Babel 6 and JSPM Update","description":"Today, we're happy to announce an update to Aurelia that is built with Babel 6 along with updates to our codebase to work with JSPM 0.17 Beta.","author":{"name":"AureliaEffect"},"links":{"static":"blog/2016/3/4/aurelia-babel-6-and-jspm-update","html":"blog/2016/3/4/aurelia-babel-6-and-jspm-update/index.html","fragment":"blog/2016/3/4/aurelia-babel-6-and-jspm-update/index-fragment.html","self":"blog/2016/3/4/aurelia-babel-6-and-jspm-update/index.json"},"content":"\nToday, we're happy to announce an update to Aurelia that is built with Babel 6 along with updates to our codebase to work with JSPM 0.17 Beta.\n\n## Babel 6\n\nWith the exception of i18n, all Aurelia core libraries and official plugins have now been updated to build with Babel 6. We've also updated our skeletons. We'll be releasing an updated version of i18n soon as well. For the moment you can use the current i18n library with the updated Aurelia libs without any issues.\n\nAt this point, you may be interested in updating your own Babel-based projects to Babel 6. Here's a few steps to help you through the process:\n\n* Remove the old Babel versions.\n\n\n<code-listing>\n  <source-code lang=\"JavaScript\">\n    npm uninstall gulp-babel karma-babel-preprocessor --save-dev\n  </source-code>\n</code-listing>\n\n* Install the new version.\n \n\n<code-listing>\n  <source-code lang=\"JavaScript\">\n    npm install gulp-babel karma-babel-preprocessor babel-preset-es2015 babel-preset-es2015-loose babel-preset-stage-1 babel-plugin-transform-decorators-legacy babel-plugin-transform-es2015-modules-amd babel-plugin-transform-es2015-modules-commonjs babel-plugin-transform-es2015-modules-systemjs babel-plugin-syntax-flow babel-plugin-transform-flow-strip-types --save-dev\n  </source-code>\n</code-listing>\n\n* Update your Babel build options. Our new skeleton's `babel-options.js` file looks something like this:\n\n\n<code-listing>\n  <source-code lang=\"JavaScript\">\n    var path = require('path');\n    \n    exports.base = function() {\n      return {\n        filename: '',\n        filenameRelative: '',\n        sourceMap: true,\n        sourceRoot: '',\n        moduleRoot: path.resolve('src').replace(/\\\\/g, '/'),\n        moduleIds: false,\n        comments: false,\n        compact: false,\n        code:true,\n        presets: [ 'es2015-loose', 'stage-1'],\n        plugins: [\n          'syntax-flow',\n          'transform-decorators-legacy',\n          'transform-flow-strip-types'\n        ]\n      };\n    };\n    \n    exports.commonjs = function() {\n      var options = exports.base();\n      options.plugins.push('transform-es2015-modules-commonjs');\n      return options;\n    };\n    \n    exports.amd = function() {\n      var options = exports.base();\n      options.plugins.push('transform-es2015-modules-amd');\n      return options;\n    };\n    \n    exports.system = function() {\n      var options = exports.base();\n      options.plugins.push('transform-es2015-modules-systemjs');\n      return options;\n    };\n    \n    exports.es2015 = function() {\n      var options = exports.base();\n      options.presets = ['stage-1']\n      return options;\n    };\n  </source-code>\n</code-listing>\n\n> Note: that Babel 6 is based on presets and plugins. Without these, the compiler won't actually transform anything. Above we provide a base configuration and then helper methods to output the code in various module formats.\n\n* Update your Gulp `build.js` file. Here's the relevent part of our skeleton's new build task:\n\n\n<code-listing>\n  <source-code lang=\"JavaScript\">\n    gulp.task('build-system', function() {\n      return gulp.src(paths.source)\n        .pipe(plumber({errorHandler: notify.onError('Error: <%= error.message %>')}))\n        .pipe(changed(paths.output, {extension: '.js'}))\n        .pipe(sourcemaps.init({loadMaps: true}))\n        .pipe(to5(assign({}, compilerOptions.system())))\n        .pipe(sourcemaps.write({includeContent: false, sourceRoot: '/src'}))\n        .pipe(gulp.dest(paths.output));\n    });\n  </source-code>\n</code-listing>\n\n* If using Karma for unit testing, update the `babelPreprocessor` section of the `karma.conf.js` file to look like this:\n\n\n<code-listing>\n  <source-code lang=\"JavaScript\">\n    'babelPreprocessor': {\n      options: {\n        sourceMap: 'inline',\n        presets: [ 'es2015-loose', 'stage-1'],\n        plugins: [\n          'syntax-flow',\n          'transform-decorators-legacy',\n          'transform-flow-strip-types'\n        ]\n      }\n    }\n  </source-code>\n</code-listing>\n\n## JSPM 0.17\n\nWe've updated our packages and library source code to support JSPM 0.17.x. We've done some testing and everything seems to be working. You probably don't want to update to JSPM 0.17 just yet though. It's still in beta. There are many breaking changes and we've recently discovered that those also affect our bundler. So while Aurelia will work fine at runtime with 0.17, it won't bundle correctly. We are working to resolve this. In the mean time, we would appreciate anyone who would like to try out JSPM 0.17 with their Aurelia project to help us drive out any issues we may not be aware of.\n\n## New Features\n\nThere are a few new features in this release. Here are some highlights:\n\n* Simpler DI when a super class is present. The sub class no longer needs to declare the injected items that the super class needs. It can simply use a rest parameter to pass them along to the super constructor.\n* The `computedFrom` decorator now supports expressions.\n* The binding expression language now supports cloning and rebasing for expression re-writing and other advanced scenarios.\n* There's now an option, `compareQueryParams`, for the router to compare and invalidate on query string changes for the same component.\n* The view pipeline now enables pipeline plugins to hook into the `beforeBind` and `beforeUnbind` hooks of the view. This opens up a bunch of new scenarios, namely the ability to provide additional binding context data and functionality through a view require.\n* A new `AbstractRepeater` base class for repeaters has been introduced to make creating custom repeat attributes easier.\n* Dialogs can now switch out their render and the dialog system tracks open dialogs. \n\n## Validation\n\nSince aurelia-valiation is not yet in beta, it is subject to breaking changes. We've mentioned that we are doing an overhaul on the library. As of this release of the aurelia-valiation library, we have dropped support for the `ensure` decorator. The `ensure` API is still present, but the decorator is no longer supported. Your code will continue to work without runtime errors when using the decorator, but its correct functioning is not guaranteed and it will be removed in the next release. We will be replacing this with a collection of decorators that provide a clearer, easier to use API soon.\n\n## Dialog\n\nThe aurelia-dailog plugin is still in beta and undergoing some changes as well. In this release we've had a minor changes to configuration. If you are providing custom configuration for the plugin, you will now need to call the `useDefaults()` method. Also, the settings have been moved to a settings object. Here's an example configuration:\n\n\n<code-listing>\n  <source-code lang=\"JavaScript\">\n    export function configure(aurelia) {\n      aurelia.use\n        .standardConfiguration()\n        .developmentLogging()\n        .plugin('aurelia-dialog', config => {\n          config.useDefaults();\n          config.settings.lock = true;\n          config.settings.centerHorizontalOnly = false;\n          config.settings.startingZIndex = 5;\n        });\n    \n      aurelia.start().then(a => a.setRoot());\n    }\n  </source-code>\n</code-listing>\n> Note: We have some reports of a regression in the latest dialog plugin release. We are looking into it and should have a fix shortly.\n\n## What's Next?\n\nIn preparation for our release candidate, we're working on fixing a few more issues as well switching our Shadow DOM implementation over to be based on the new Shadow DOM v1 spec. We're particularly excited about this because that would make Aurelia the first framework to implement the updated spec. This will be a breaking change when we hit RC, however, if you have been following the practices outlined in our Beta announcement, it should be fairly easy for you to migrate your code.\n\nIn addition to working on the Shadow DOM update, we're also working on improving support for other package managers, loaders and bundlers. The community has been making good progress in improving our new Webpack skeleton, which has some updates in today's releases. Core team members are also working on an NPM/RequireJS workflow.\n\nStay tuned...more good things to come :)\n\n## Release Notes\n\n### aurelia-pal 1.0.0-beta.1.2.0\n\n#### Bug Fixes\n\n* **dom:** mark optional parameters ([3485be0f](http://github.com/aurelia/pal/commit/3485be0f7c31451f1126828e2320c14272ef5ea1))\n* **platform:** fix type of global ([6eb6937c](http://github.com/aurelia/pal/commit/6eb6937c594dfcb150e20f82c2536e0c3d0b15d6))\n\n### aurelia-polyfills 1.0.0-beta.1.1.0\n\n#### Features\n\n* **all:** add iterator support to Array.from ([5f237887](http://github.com/aurelia/polyfills/commit/5f237887f5f750c365ba71c292f3427ae5301a8b))\n* *all:** add symbols ([f11b8f42](http://github.com/aurelia/polyfills/commit/f11b8f422cb512c3e4aba377278ab0a33375a96d))\n* **collections:** add weak map and set ([59d58dc6](http://github.com/aurelia/polyfills/commit/59d58dc6a571718a3b70329d6c54d3a5c00a063b))\n\n#### Bug Fixes\n\n* **symbol:** treat `null` value the same as `undefined` ([4b705bb1](http://github.com/aurelia/polyfills/commit/4b705bb1c4886e197d0e8dfcc291fb3308238372), closes [#13](http://github.com/aurelia/polyfills/issues/13))\n* *array:** make proto methods non enumerable ([6ed412fd](http://github.com/aurelia/polyfills/commit/6ed412fd206c2b987658e205470c496630a0dd6f), closes [#12](http://github.com/aurelia/polyfills/issues/12))\n* **symbol:** remove window global ([14916c10](http://github.com/aurelia/polyfills/commit/14916c10efa17a6f2a109beb4979fbe038879649))\n* **object:** assign ignores null or undefined ([941a892f](http://github.com/aurelia/polyfills/commit/941a892f8a63bce8dea3566c97e911ee31622359))\n* **object:** correct es6 Object.keys behavior for primitives ([11852935](http://github.com/aurelia/polyfills/commit/11852935d02a451f2ea13c48dd0dd6877d890c8e))\n\n### aurelia-dependency-injection 1.0.0-beta.1.2.0\n\n#### Features\n\n* **inheritence:** allow injection w/ inheritance ([0615ac1d](http://github.com/aurelia/dependency-injection/commit/0615ac1db4c2f2e91fc1bb028217cc3540a8e6c7))\n\n### aurelia-binding 1.0.0-beta.1.3.0\n\n#### Bug Fixes\n\n* **parser:** remove unnecessary spaces from unparser output ([e776287e](http://github.com/aurelia/binding/commit/e776287e7c51a09464bff123430e6407ef79f049))\n\n#### Features\n\n* **Expression:** enable cloning and rebasing ([d3e52957](http://github.com/aurelia/binding/commit/d3e52957b0cefa70ac7ae6dcfd07dfae73f30ada))\n* **NameExpression:** enable binding behaviors ([f698c27a](http://github.com/aurelia/binding/commit/f698c27a4ab871bc9adeafe080d7692957a93b6a))\n* **computedFrom:** support expressions ([461a3d56](http://github.com/aurelia/binding/commit/461a3d56ced2a51f705e6c069ac59e97771e93c6), closes [#149](http://github.com/aurelia/binding/issues/149))\n\n### aurelia-router 1.0.0-beta.1.2.0\n\n#### Features\n\n* **router:** add option to compare query params ([37ab9fad](http://github.com/aurelia/router/commit/37ab9fadc16c884335e4531bb0c934621926d795), closes [#268](http://github.com/aurelia/router/issues/268))\n\n### aurelia-templating 1.0.0-beta.1.2.0 (2016-03-22)\n\n#### Bug Fixes\n\n* **bindable-property:** fix typo in comment ([dfde78aa](http://github.com/aurelia/templating/commit/dfde78aa1f261f3664bb0a722e099d5f2f64065f), closes [#291](http://github.com/aurelia/templating/issues/291))\n\n#### Features\n\n* **ViewSlot:** save override context during binding for later eval ([657ff3dc](http://github.com/aurelia/templating/commit/657ff3dc94415bc1c2330b389de208880fdcc5f5))\n* **view:** add new view pipeline hooks beforeBind and beforeUnbind ([e39e052b](http://github.com/aurelia/templating/commit/e39e052b93c7aa5f17bf47c3fa02703eb8c8c3f3))\n\n### aurelia-templating-binding 1.0.0-beta.1.2.0\n\n#### Bug Fixes\n\n* **determineDefaultBindingMode:** only assign when conditions are matched ([c952286f](http://github.com/aurelia/templating-binding/commit/c952286fadd59e7901ff78592269eec085920de6))\n\n#### Features\n\n* **syntax-interpreter:** single quoted strings in options attributes ([f26cd40a](http://github.com/aurelia/templating-binding/commit/f26cd40ad65b6e1b8ec1c0ae3b56b4e7ccdd9318))\n\n### aurelia-templating-binding 1.0.0-beta.1.2.0\n\n#### Bug Fixes\n\n* **all:** replace removed file and fix lint errors ([6de4d2e6](http://github.com/aurelia/templating-resources/commit/6de4d2e6204126195499f12df20d5ba40d672fb3))\n* **css:** throw on missing CSS file ([e6a2d45e](http://github.com/aurelia/templating-resources/commit/e6a2d45e53dd81c78db093d7431070dbcecd3c27), closes [#189](http://github.com/aurelia/templating-resources/issues/189))\n* **if:** queue up changes when animating ([ae57e50d](http://github.com/aurelia/templating-resources/commit/ae57e50d56fde48cca0ab01fd2791edab6efd0ec))\n* **repeat:** throw on non-repeatable expressions ([1d7bbccc](http://github.com/aurelia/templating-resources/commit/1d7bbcccf350d4420c996d4fa0521f9bff11a55e))\n\n#### Features\n\n* **abstract-repeater:** add abstract repeater base class ([949d0091](http://github.com/aurelia/templating-resources/commit/949d009164f7f42b365dae5ddf2bedafee8119af))\n\n### aurelia-framework 1.0.0-beta.1.2.0\n\n#### Bug Fixes\n\n* feature configuration ([8d5eaa17](http://github.com/aurelia/framework/commit/8d5eaa17ef0909436b4a00073087653426981005))\n* **feature:** check extension. ([4bfd6c47](http://github.com/aurelia/framework/commit/4bfd6c47a6bd0b0595e037abe617d4a94b2d052f))\n* **test:** fix loadGlobalResource related tests ([8fbd24d5](http://github.com/aurelia/framework/commit/8fbd24d51a3ca605f2bfb175fd1656444900b5bf))\n\n#### Features\n\n* **enhance:** use document.body as fallback ([e1cbfcc2](http://github.com/aurelia/framework/commit/e1cbfcc2f4a19741efa1989a8f3fc12f4db5a493))\n\n### aurelia-loader-default 1.0.0-beta.1.2.0\n\n#### Bug Fixes\n\n* **DefaultLoader:** do not map name to address in requirejs mode ([30016b6e](http://github.com/aurelia/loader-default/commit/30016b6ef904228a582863e83b49e8f3c0556e63))\n\n### aurelia-animator-css 1.0.0-beta.1.2.0\n\n#### Bug Fixes\n\n* **cssRules:** add try catch ([d66df21c](https://github.com/aurelia/animator-css/commit/d66df21c84a889d6867a20fad9639920109b5af6))\n\n### aurelia-dialog 0.5.9\n\n#### Features\n\n* **dialog:** track controllers in service ([b58d17f5](https://github.com/aurelia/dialog/commit/b58d17f5d1bd4461ad1fb5f943de63d6ce8b81bd), closes [#121](https://github.com/aurelia/dialog/issues/121))\n\n### aurelia-validation 0.6.5 \n\n#### Bug Fixes\n\n* **decorators:** deprecate the ensure decorator ([0e82a6bb](https://github.com/aurelia/validation/commit/0e82a6bb87ba212a01e276faf08d5f05c682b159))"}