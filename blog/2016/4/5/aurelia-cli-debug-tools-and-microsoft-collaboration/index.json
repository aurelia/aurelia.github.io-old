{"name":"Aurelia CLI, Debug Tools and Microsoft Collaboration","description":"The Aurelia team is hard at work preparing for our Release Candidate...but that's not all we're working on. We're always looking for ways to improve tooling, debugging and collaboration with community members and other vendors along the way.","author":{"name":"AureliaEffect"},"links":{"static":"blog/2016/4/5/aurelia-cli-debug-tools-and-microsoft-collaboration","html":"blog/2016/4/5/aurelia-cli-debug-tools-and-microsoft-collaboration/index.html","fragment":"blog/2016/4/5/aurelia-cli-debug-tools-and-microsoft-collaboration/index-fragment.html","self":"blog/2016/4/5/aurelia-cli-debug-tools-and-microsoft-collaboration/index.json"},"content":"\nThe Aurelia team is hard at work preparing for our Release Candidate...but that's not all we're working on. We're always looking for ways to improve tooling, debugging and collaboration with community members and other vendors along the way.\n\n## Collaborating with Microsoft\n\nWe've actually been collaborating with Microsoft for over a year now. We've worked with the TypeScript team to bring important real-world scenarios to their attention, leading to many improvements to TypeScript and its tooling over the last year. However, that's not the only group within Microsoft that we're working with. We're also working with them on improvements to \"New Aurelia Project\" from the VS project wizard, improvements to intellisense for Aurelia views, server-side rendering integration, validation and service proxy generation. We've had great interactions so far with Microsoft developers who are not only passionate about open source but also about giving first-class support to Aurelia developers on top of their tools. We're grateful for the collaborative spirit of the Microsoft employees we've been working with and we're excited about what the future holds.\n\n## Debug Tools\n\nHave you ever been working on an Aurelia application and had some data that wasn't displaying what you thought? or not displaying at all? Well, we have. So, one of our core contributors, [Patrick Walters](https://github.com/PWKad), started work some time back on a Chrome plugin for debugging binding context data. Eventually, community member [Sylvain Hamel](https://github.com/sylvain-hamel) jumped in, extended the plugin's capabilities and cleaned up the code. This tool is called \"Aurelia Context\" and [it's available now in the Chrome Extension Store](https://chrome.google.com/webstore/detail/aurelia-context/cghchmoikhedpkkkdnljcfhikedoemma). It creates a simple debug panel in the Chrome developer tools that provides you with contextual information related to Aurelia.\n\n![Aurelia Context For Chrome](/content/images/2016/04/Aurelia_Context_for_Chrome.png)\n\nThis first release has a minimal feature set. We wanted to get it out to you as soon as we could so we could start getting feedback from you on what features we should add next. [Give it a try](https://chrome.google.com/webstore/detail/aurelia-context/cghchmoikhedpkkkdnljcfhikedoemma) and [let us know how we can improve it](https://github.com/aurelia/tools/issues) to make your daily work with Aurelia better.\n\n## Aurelia CLI\n\nFrom the initial alpha of Aurelia until now, we've had two big, recurring issues that have continued to plague us:\n\n* Getting new developers easily set up to start learning and building applications with Aurelia.\n* Dealing with the complex integration of the multiple 3rd party tools required to create, build and bundle Aurelia applications.\n\nFor new developers there's typically a lot of confusion:\n\n*Why do I have to install this thing called Gulp to use Aurelia? What is JSPM and why do I need to use that? What's the difference between NPM and JSPM? Why do I need two different package managers?* etc.\n\nOn top of this confusion, things would often go wrong, not necessarily with Aurelia itself but during the installation and setup of these 3rd party tools. So, developers would be both confused and frustrated before they ever had the chance to write a single line of Aurelia code.\n\n**We don't think that's acceptable and we're moving to aggressively deal with these issues.**\n\nIn order to solve these problems, we're building an Aurelia CLI. It will be the single tool that Aurelia devs need to install. This tool will allow you to create new projects, install plugins, build and bundle applications. The CLI itself will have very few dependencies so that we can control quality and ensure things work for our community. We're pretty early on with the development of the CLI, so it's not quite ready to try out yet. However, we're moving quickly and hope to have a beta soon that you can play with.\n\nThanks for your patience around tooling. We know it's been frustrating for our community. We've felt the pain too and we're working hard to build a standard solution that our community can rely on going forward. Stay tuned for more news in the coming weeks!"}