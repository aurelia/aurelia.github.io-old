{"links":{"static":"docs/api/dependency-injection/class/Container","html":"docs/api/dependency-injection/class/Container/index.html","fragment":"docs/api/dependency-injection/class/Container/index-fragment.html","self":"docs/api/dependency-injection/class/Container/index.json"},"properties":[{"name":"parent","kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The parent container in the DI hierarchy."},"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":383,"character":10}],"type":{"type":"reference","name":"Container","id":943}},{"name":"root","kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"The root container in the DI hierarchy."},"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":387,"character":8}],"type":{"type":"reference","name":"Container","id":943}},{"name":"instance","kindString":"Property","flags":{"isStatic":true,"isExported":true},"comment":{"shortText":"The global root Container instance. Available if makeGlobal() has been called. Aurelia Framework calls makeGlobal()."},"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":379,"character":19}],"type":{"type":"reference","name":"Container","id":943}}],"methods":[{"name":"_createInvocationHandler","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"_createInvocationHandler","kindString":"Call signature","flags":{},"parameters":[{"name":"fn","kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"Function"},{"type":"reflection","declaration":{"id":1024,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1025,"name":"inject","kind":32,"kindString":"Variable","flags":{"isOptional":true},"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":501,"character":14}],"type":{"type":"intrinsic","name":"any"}}],"groups":[{"title":"Variables","kind":32,"children":[1025]}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":500,"character":43}]}}]}}],"type":{"type":"reference","name":"InvocationHandler","id":924}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":500,"character":28}]},{"name":"_get","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"_get","kindString":"Call signature","flags":{},"parameters":[{"name":"key","kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":479,"character":8}]},{"name":"autoRegister","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"autoRegister","kindString":"Call signature","flags":{},"comment":{"shortText":"Registers a type (constructor function) by inspecting its registration annotations. If none are found, then the default singleton registration is used."},"parameters":[{"name":"key","kindString":"Parameter","flags":{},"comment":{"text":"The key that identifies the dependency at resolution time; usually a constructor function."},"type":{"type":"intrinsic","name":"any"}},{"name":"fn","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The constructor function to use when the dependency needs to be instantiated. This defaults to the key value when fn is not supplied.\n"},"type":{"type":"reference","name":"Function"}}],"type":{"type":"reference","name":"Resolver","id":791}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":449,"character":16}]},{"name":"autoRegisterAll","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"autoRegisterAll","kindString":"Call signature","flags":{},"comment":{"shortText":"Registers an array of types (constructor functions) by inspecting their registration annotations. If none are found, then the default singleton registration is used."},"parameters":[{"name":"fns","kindString":"Parameter","flags":{},"comment":{"text":"The constructor function to use when the dependency needs to be instantiated.\n"},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":454,"character":19}]},{"name":"createChild","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"createChild","kindString":"Call signature","flags":{},"comment":{"shortText":"Creates a new dependency injection container whose parent is the current container.","returns":"Returns a new container instance parented to this.\n"},"type":{"type":"reference","name":"Container","id":943}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":490,"character":15}]},{"name":"get","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"get","kindString":"Call signature","flags":{},"comment":{"shortText":"Resolves a single instance based on the provided key.","returns":"Returns the resolved instance.\n"},"parameters":[{"name":"key","kindString":"Parameter","flags":{},"comment":{"text":"The key that identifies the object to resolve."},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":478,"character":7}]},{"name":"getAll","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"getAll","kindString":"Call signature","flags":{},"comment":{"shortText":"Resolves all instance registered under the provided key.","returns":"Returns an array of the resolved instances.\n"},"parameters":[{"name":"key","kindString":"Parameter","flags":{},"comment":{"text":"The key that identifies the objects to resolve."},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":485,"character":10}]},{"name":"getResolver","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"getResolver","kindString":"Call signature","flags":{},"comment":{"shortText":"Gets the resolver for the particular key, if it has been registered.","returns":"Returns the resolver, if registred, otherwise undefined.\n"},"parameters":[{"name":"key","kindString":"Parameter","flags":{},"comment":{"text":"The key that identifies the dependency at resolution time; usually a constructor function."},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":472,"character":15}]},{"name":"hasResolver","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"hasResolver","kindString":"Call signature","flags":{},"comment":{"shortText":"Inspects the container to determine if a particular key has been registred.","returns":"Returns true if the key has been registred; false otherwise.\n"},"parameters":[{"name":"key","kindString":"Parameter","flags":{},"comment":{"text":"The key that identifies the dependency at resolution time; usually a constructor function."},"type":{"type":"intrinsic","name":"any"}},{"name":"checkParent","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"Indicates whether or not to check the parent container hierarchy."},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"intrinsic","name":"boolean"}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":466,"character":15}]},{"name":"invoke","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"invoke","kindString":"Call signature","flags":{},"comment":{"shortText":"Invokes a function, recursively resolving its dependencies.","returns":"Returns the instance resulting from calling the function.\n"},"parameters":[{"name":"fn","kindString":"Parameter","flags":{},"comment":{"text":"The function to invoke with the auto-resolved dependencies."},"type":{"type":"intersection","types":[{"type":"reference","name":"Function"},{"type":"reflection","declaration":{"id":1018,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1019,"name":"name","kind":32,"kindString":"Variable","flags":{"isOptional":true},"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":498,"character":12}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Variables","kind":32,"children":[1019]}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":497,"character":25}]}}]}},{"name":"dynamicDependencies","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"Additional function dependencies to use during invocation."},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":497,"character":10}]},{"name":"makeGlobal","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"makeGlobal","kindString":"Call signature","flags":{},"comment":{"shortText":"Makes this container instance globally reachable through Container.instance."},"type":{"type":"reference","name":"Container","id":943}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":396,"character":14}]},{"name":"registerAlias","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"registerAlias","kindString":"Call signature","flags":{},"comment":{"shortText":"Registers an additional key that serves as an alias to the original DI key.","returns":"The resolver that was registered.\n"},"parameters":[{"name":"originalKey","kindString":"Parameter","flags":{},"comment":{"text":"The key that originally identified the dependency; usually a constructor function."},"type":{"type":"intrinsic","name":"any"}},{"name":"aliasKey","kindString":"Parameter","flags":{},"comment":{"text":"An alternate key which can also be used to resolve the same dependency  as the original."},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"Resolver","id":791}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":436,"character":17}]},{"name":"registerHandler","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"registerHandler","kindString":"Call signature","flags":{},"comment":{"shortText":"Registers a custom resolution function such that the container calls this function for each request to obtain the instance.","returns":"The resolver that was registered.\n"},"parameters":[{"name":"key","kindString":"Parameter","flags":{},"comment":{"text":"The key that identifies the dependency at resolution time; usually a constructor function."},"type":{"type":"intrinsic","name":"any"}},{"name":"handler","kindString":"Parameter","flags":{},"comment":{"text":"The resolution function to use when the dependency is needed."},"type":{"type":"reflection","declaration":{"id":974,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":975,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":976,"name":"container","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Container","id":943}},{"id":977,"name":"key","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"any"}},{"id":978,"name":"resolver","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Resolver","id":791}}],"type":{"type":"intrinsic","name":"any"}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":429,"character":38}]}}}],"type":{"type":"reference","name":"Resolver","id":791}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":429,"character":19}]},{"name":"registerInstance","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"registerInstance","kindString":"Call signature","flags":{},"comment":{"shortText":"Registers an existing object instance with the container.","returns":"The resolver that was registered.\n"},"parameters":[{"name":"key","kindString":"Parameter","flags":{},"comment":{"text":"The key that identifies the dependency at resolution time; usually a constructor function."},"type":{"type":"intrinsic","name":"any"}},{"name":"instance","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The instance that will be resolved when the key is matched. This defaults to the key value when instance is not supplied."},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"Resolver","id":791}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":408,"character":20}]},{"name":"registerResolver","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"registerResolver","kindString":"Call signature","flags":{},"comment":{"shortText":"Registers a custom resolution function such that the container calls this function for each request to obtain the instance.","returns":"The resolver that was registered.\n"},"parameters":[{"name":"key","kindString":"Parameter","flags":{},"comment":{"text":"The key that identifies the dependency at resolution time; usually a constructor function."},"type":{"type":"intrinsic","name":"any"}},{"name":"resolver","kindString":"Parameter","flags":{},"comment":{"text":"The resolver to use when the dependency is needed."},"type":{"type":"reference","name":"Resolver","id":791}}],"type":{"type":"reference","name":"Resolver","id":791}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":443,"character":20}]},{"name":"registerSingleton","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"registerSingleton","kindString":"Call signature","flags":{},"comment":{"shortText":"Registers a type (constructor function) such that the container always returns the same instance for each request.","returns":"The resolver that was registered.\n"},"parameters":[{"name":"key","kindString":"Parameter","flags":{},"comment":{"text":"The key that identifies the dependency at resolution time; usually a constructor function."},"type":{"type":"intrinsic","name":"any"}},{"name":"fn","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The constructor function to use when the dependency needs to be instantiated. This defaults to the key value when fn is not supplied."},"type":{"type":"reference","name":"Function"}}],"type":{"type":"reference","name":"Resolver","id":791}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":415,"character":21}]},{"name":"registerTransient","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"registerTransient","kindString":"Call signature","flags":{},"comment":{"shortText":"Registers a type (constructor function) such that the container returns a new instance for each request.","returns":"The resolver that was registered.\n"},"parameters":[{"name":"key","kindString":"Parameter","flags":{},"comment":{"text":"The key that identifies the dependency at resolution time; usually a constructor function."},"type":{"type":"intrinsic","name":"any"}},{"name":"fn","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The constructor function to use when the dependency needs to be instantiated. This defaults to the key value when fn is not supplied."},"type":{"type":"reference","name":"Function"}}],"type":{"type":"reference","name":"Resolver","id":791}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":422,"character":21}]},{"name":"setHandlerCreatedCallback","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"setHandlerCreatedCallback","kindString":"Call signature","flags":{},"comment":{"shortText":"Sets an invocation handler creation callback that will be called when new InvocationsHandlers are created (called once per Function)."},"parameters":[{"name":"onHandlerCreated","kindString":"Parameter","flags":{},"comment":{"text":"The callback to be called when an InvocationsHandler is created.\n"},"type":{"type":"reflection","declaration":{"id":955,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":956,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":957,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"InvocationHandler","id":924}}],"type":{"type":"reference","name":"InvocationHandler","id":924}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":401,"character":47}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":401,"character":29}]},{"name":"unregister","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"unregister","kindString":"Call signature","flags":{},"comment":{"shortText":"Unregisters based on key."},"parameters":[{"name":"key","kindString":"Parameter","flags":{},"comment":{"text":"The key that identifies the dependency at resolution time; usually a constructor function.\n"},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":459,"character":14}]}],"name":"Container","kindString":"Class","flags":{"isExported":true},"comment":{"shortText":"A lightweight, extensible dependency injection container."},"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":375,"character":30}],"constructorMethod":{"name":"constructor","kindString":"Constructor","flags":{"isExported":true},"comment":{"shortText":"Creates an instance of Container."},"signatures":[{"name":"new Container","kindString":"Constructor signature","flags":{},"comment":{"shortText":"Creates an instance of Container."},"parameters":[{"name":"configuration","kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Provides some configuration for the new Container instance.\n"},"type":{"type":"reference","name":"ContainerConfiguration","id":937}}],"type":{"type":"reference","name":"Container","id":943}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":387,"character":20}]}}