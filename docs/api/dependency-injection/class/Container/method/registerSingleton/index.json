{"links":{"static":"docs/api/dependency-injection/class/Container/method/registerSingleton","html":"docs/api/dependency-injection/class/Container/method/registerSingleton/index.html","fragment":"docs/api/dependency-injection/class/Container/method/registerSingleton/index-fragment.html","self":"docs/api/dependency-injection/class/Container/method/registerSingleton/index.json"},"name":"registerSingleton","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"registerSingleton","kindString":"Call signature","flags":{},"comment":{"shortText":"Registers a type (constructor function) such that the container always returns the same instance for each request.","returns":"The resolver that was registered.\n"},"parameters":[{"name":"key","kindString":"Parameter","flags":{},"comment":{"text":"The key that identifies the dependency at resolution time; usually a constructor function."},"type":{"type":"intrinsic","name":"any"}},{"name":"fn","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The constructor function to use when the dependency needs to be instantiated. This defaults to the key value when fn is not supplied."},"type":{"type":"reference","name":"Function"}}],"type":{"type":"reference","name":"Resolver","id":614}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":408,"character":21}]}