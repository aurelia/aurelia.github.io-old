{"links":{"static":"docs/api/dependency-injection/class/Container/method/registerResolver","html":"docs/api/dependency-injection/class/Container/method/registerResolver/index.html","fragment":"docs/api/dependency-injection/class/Container/method/registerResolver/index-fragment.html","self":"docs/api/dependency-injection/class/Container/method/registerResolver/index.json"},"name":"registerResolver","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"registerResolver","kindString":"Call signature","flags":{},"comment":{"shortText":"Registers a custom resolution function such that the container calls this function for each request to obtain the instance.","returns":"The resolver that was registered.\n"},"parameters":[{"name":"key","kindString":"Parameter","flags":{},"comment":{"text":"The key that identifies the dependency at resolution time; usually a constructor function."},"type":{"type":"intrinsic","name":"any"}},{"name":"resolver","kindString":"Parameter","flags":{},"comment":{"text":"The resolver to use when the dependency is needed."},"type":{"type":"reference","name":"Resolver","id":614}}],"type":{"type":"reference","name":"Resolver","id":614}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":436,"character":20}]}