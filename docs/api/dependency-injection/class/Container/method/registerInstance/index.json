{"links":{"static":"docs/api/dependency-injection/class/Container/method/registerInstance","html":"docs/api/dependency-injection/class/Container/method/registerInstance/index.html","fragment":"docs/api/dependency-injection/class/Container/method/registerInstance/index-fragment.html","self":"docs/api/dependency-injection/class/Container/method/registerInstance/index.json"},"name":"registerInstance","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"registerInstance","kindString":"Call signature","flags":{},"comment":{"shortText":"Registers an existing object instance with the container.","returns":"The resolver that was registered.\n"},"parameters":[{"name":"key","kindString":"Parameter","flags":{},"comment":{"text":"The key that identifies the dependency at resolution time; usually a constructor function."},"type":{"type":"intrinsic","name":"any"}},{"name":"instance","kindString":"Parameter","flags":{"isOptional":true},"comment":{"text":"The instance that will be resolved when the key is matched. This defaults to the key value when instance is not supplied."},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","name":"Resolver","id":614}}],"sources":[{"fileName":"aurelia-dependency-injection.d.ts","line":401,"character":20}]}