{"links":{"static":"docs/api/binding/class/EventManager","html":"docs/api/binding/class/EventManager/index.html","fragment":"docs/api/binding/class/EventManager/index-fragment.html","self":"docs/api/binding/class/EventManager/index.json"},"properties":[],"methods":[{"name":"addEventListener","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"addEventListener","kindString":"Call signature","flags":{},"comment":{"shortText":"Subscribes to specified event on the target element.","returns":"function which removes event listener.\n"},"parameters":[{"name":"target","kindString":"Parameter","flags":{},"comment":{"text":"Target element."},"type":{"type":"reference","name":"EventTarget"}},{"name":"targetEvent","kindString":"Parameter","flags":{},"comment":{"text":"Name of event to subscribe."},"type":{"type":"intrinsic","name":"string"}},{"name":"callback","kindString":"Parameter","flags":{},"comment":{"text":"Event listener callback."},"type":{"type":"reference","name":"EventListenerOrEventListenerObject"}},{"name":"delegate","kindString":"Parameter","flags":{},"comment":{"text":"True to use event delegation mechanism."},"type":{"type":"reference","name":"delegationStrategy","id":41}},{"name":"disposable","kindString":"Parameter","flags":{},"comment":{"text":"True to return a disposable object with dispose() method instead of a function"},"type":{"type":"intrinsic","name":"true"}}],"type":{"type":"reference","name":"Disposable","id":8}},{"name":"addEventListener","kindString":"Call signature","flags":{},"parameters":[{"name":"target","kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EventTarget"}},{"name":"targetEvent","kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"name":"callback","kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EventListenerOrEventListenerObject"}},{"name":"delegate","kindString":"Parameter","flags":{},"type":{"type":"reference","name":"delegationStrategy","id":41}}],"type":{"type":"reflection","declaration":{"id":67,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":68,"name":"__call","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"aurelia-binding.d.ts","line":122,"character":137}]}}}],"sources":[{"fileName":"aurelia-binding.d.ts","line":121,"character":18},{"fileName":"aurelia-binding.d.ts","line":122,"character":18}]},{"name":"registerElementConfig","kindString":"Method","flags":{"isExported":true},"signatures":[{"name":"registerElementConfig","kindString":"Call signature","flags":{},"parameters":[{"name":"config","kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":49,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":51,"name":"properties","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"aurelia-binding.d.ts","line":111,"character":61}],"type":{"type":"reflection","declaration":{"id":52,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"indexSignature":[{"id":53,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":54,"name":"propertyName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"sources":[{"fileName":"aurelia-binding.d.ts","line":111,"character":62}]}}},{"id":50,"name":"tagName","kind":32,"kindString":"Variable","flags":{},"sources":[{"fileName":"aurelia-binding.d.ts","line":111,"character":41}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Variables","kind":32,"children":[51,50]}],"sources":[{"fileName":"aurelia-binding.d.ts","line":111,"character":31}]}}}],"type":{"type":"intrinsic","name":"void"}}],"sources":[{"fileName":"aurelia-binding.d.ts","line":111,"character":23}]}],"name":"EventManager","kindString":"Class","flags":{"isExported":true},"comment":{"shortText":"Subscribes to appropriate element events based on the element property\nbeing observed for changes.\nThis is an internal API and is subject to change without notice in future releases."},"sources":[{"fileName":"aurelia-binding.d.ts","line":110,"character":33}]}