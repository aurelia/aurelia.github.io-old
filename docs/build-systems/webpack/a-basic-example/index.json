{"name":"A Basic Example","description":"If you're interested in setting up Webpack from scratch to build projects, this article will give you everything you need to know.","author":{"name":"Fred Kleuver"},"featured":false,"links":{"static":"docs/build-systems/webpack/a-basic-example","html":"docs/build-systems/webpack/a-basic-example/index.html","fragment":"docs/build-systems/webpack/a-basic-example/index-fragment.html","self":"docs/build-systems/webpack/a-basic-example/index.json"},"content":"\n## Introduction\n\nTo get Aurelia running with Webpack, there are only 2 Aurelia-specific details you need to know:\n\n* The app entry point must be `'aurelia-bootstrapper'`.\n* `aurelia-webpack-plugin` must be added to your configuration.\n\n## `PLATFORM.moduleName`\n\nFrom your application's perspective, there is also one important detail: each module reference must be wrapped in `PLATFORM.moduleName(...)`. This allows `aurelia-loader-webpack` to translate Aurelia's conventions to something Webpack understands.\n\n### Examples\n\n```JavaScript\n// globalResources\naurelia.use.globalResources([\n  './my-custom-element' // WRONG\n])\naurelia.use.globalResources([\n  PLATFORM.moduleName('./my-custom-element') // OK\n])\n\n// setRoot\naurelia.setRoot('app') // WRONG\naurelia.setRoot(PLATFORM.moduleName('app')) // OK\n\n// features\naurelia.use.feature('./my-awesome-feature') // WRONG\naurelia.use.feature(PLATFORM.moduleName('./my-awesome-feature')) // OK\n\n// plugins\naurelia.use.plugin('some-awesome-plugin') // WRONG\naurelia.use.plugin(PLATFORM.moduleName('some-awesome-plugin')) // OK\n\n// router configuration\nconfig.map([\n  {\n    route: '',\n    moduleId: 'pages/home' // WRONG\n  }\n])\nconfig.map([\n  {\n    route: '',\n    moduleId: PLATFORM.moduleName('pages/home') // OK\n  }\n])\n```\n\n## Webpack Documentation\n\nFor everything else related to optimizations, loaders, and so forth, kindly consult the official Webpack documentation. We haven't provided those details here since any Webpack-specific documentation would be duplicated effort and likely become stale in time.\n\n### Useful Links\n\n* [Asset Management](https://webpack.js.org/guides/asset-management/)\n* [Output Management](https://webpack.js.org/guides/output-management/)\n* [Development](https://webpack.js.org/guides/development/)\n\n## Basic Config Example\n\nBelow is a basic webpack.config.js for a TypeScript project that supports two modes:\n\n* `webpack-dev-server` will start a development server and watch for file changes.\n* `webpack --env=production` only builds the bundle with production optimizations enabled.\n\n```JavaScript webpack.config.js\nconst { AureliaPlugin } = require('aurelia-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst { resolve } = require('path');\n\nmodule.exports = function (mode) {\n  return {\n    mode: mode || 'development',\n    resolve: {\n      extensions: ['.ts', '.js'],\n      modules: [\n        resolve(__dirname, 'src'),\n        resolve(__dirname, 'node_modules')\n      ]\n    },\n    entry: {\n      // the 'aurelia-bootstrapper' entry point is responsible for resolving your app code\n      app: ['aurelia-bootstrapper']\n    },\n    output: {\n      filename: '[name].js',\n      path: resolve(__dirname, 'dist')\n    },\n    watch: mode === 'development',\n    devtool: mode === 'development' ? 'inline-source-map' : 'source-map',\n    devServer: {\n      contentBase: './dist'\n    },\n    module: {\n      rules: [\n        { test: /\\.html$/i, loader: 'html-loader' },\n        { test: /\\.ts$/i, loader: 'ts-loader' }\n      ]\n    },\n    plugins: [\n      // the AureliaPlugin translates Aurelia's conventions to something Webpack understands\n      // and must be included in order for Webpack to work\n      new AureliaPlugin(),\n      new HtmlWebpackPlugin({\n        template: 'index.ejs',\n        metadata: { dev: mode !== 'production' }\n      })\n    ]\n  };\n};\n```\n\n## Other Files Used\n\n```JSON package.json\n{\n  \"scripts\": {\n    \"build\": \"webpack --env=production\",\n    \"dev\": \"webpack-dev-server\"\n  },\n  \"dependencies\": {\n    \"aurelia-bootstrapper\": \"^2.3.0\",\n    \"aurelia-framework\": \"^1.3.0\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^10.12.2\",\n    \"aurelia-webpack-plugin\": \"^3.0.0\",\n    \"html-loader\": \"^0.5.5\",\n    \"html-webpack-plugin\": \"^3.2.0\",\n    \"ts-loader\": \"^5.3.0\",\n    \"typescript\": \"^3.1.6\",\n    \"webpack-cli\": \"^3.1.2\",\n    \"webpack-dev-server\": \"^3.1.10\",\n    \"webpack\": \"^4.24.0\"\n  }\n}\n```\n\n```JSON tsconfig.json\n{\n  \"compilerOptions\": {\n    \"experimentalDecorators\": true,\n    \"emitDecoratorMetadata\": true,\n    \"importHelpers\": true,\n    \"lib\": [\"es2016\", \"dom\"],\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"sourceMap\": true,\n    \"target\": \"es2016\"\n  },\n  \"include\": [\"src\"]\n}\n```\n\n```HTML index.ejs\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title>Aurelia</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n</head>\n<body>\n  <div aurelia-app=\"main\">\n    <% if (htmlWebpackPlugin.options.metadata.dev) { %>\n      <script src=\"/webpack-dev-server.js\"></script>\n    <% } %>\n  </div>\n</body>\n</html>\n```\n\n```TypeScript src/main.ts\nimport { Aurelia, PLATFORM } from 'aurelia-framework';\n\nexport async function configure(au: Aurelia) {\n  au.use.standardConfiguration();\n  au.use.developmentLogging();\n\n  await au.start();\n  await au.setRoot(PLATFORM.moduleName('app')); // Note the PLATFORM.moduleName\n}\n```\n\n```TypeScript src/app.ts\nexport class App {\n  message = 'Hello world!';\n}\n```\n\n```HTML src/app.html\n<template>\n  ${message}\n</template>\n```"}